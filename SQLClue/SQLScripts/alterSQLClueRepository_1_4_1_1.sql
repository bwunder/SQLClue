/******************************************************************************
add ArchiveError
update node
remove QueryBaseLine 
make date locale agnostic
******************************************************************************/

ALTER TABLE [SQLCfg].[tArchiveLog]
ADD [ArchiveError] [VARCHAR] (MAX) SPARSE NULL

GO

/******************************************************************************
update node
******************************************************************************/

IF EXISTS (SELECT * from sys.indexes WHERE name = 'ixn_tChange_Node_i')
 DROP INDEX SQLCfg.tChange.ixn_tChange_Node_i
IF EXISTS (SELECT * from sys.indexes WHERE name = 'ixn_tChange_RecCreatedDt_i')
 DROP INDEX SQLCfg.tChange.ixn_tChange_RecCreatedDt_i
IF EXISTS (SELECT * from sys.indexes WHERE name = 'ixn_tChange_Version_i')
 DROP INDEX SQLCfg.tChange.ixn_tChange_Version_i
GO
IF OBJECT_ID('SQLCfg.fLastVersion') IS NOT NULL 
 DROP FUNCTION SQLCfg.fLastVersion

GO
-- if any of these are used they must be manuallky recreate after the upgrade is complete
-- they are all commented out in the instSQLClueRepository.sql - not created by default
IF OBJECT_ID('SQLCfg.GetCollection') IS NOT NULL 
 DROP FUNCTION SQLCfg.GetCollection
IF OBJECT_ID('SQLCfg.GetDatabase') IS NOT NULL 
 DROP FUNCTION SQLCfg.GetDatabase
IF OBJECT_ID('SQLCfg.GetInstance') IS NOT NULL 
 DROP FUNCTION SQLCfg.GetInstance
IF OBJECT_ID('SQLCfg.GetItem') IS NOT NULL 
 DROP FUNCTION SQLCfg.GetItem
IF OBJECT_ID('SQLCfg.GetLength') IS NOT NULL 
 DROP FUNCTION SQLCfg.GetLength
IF OBJECT_ID('SQLCfg.GetPath') IS NOT NULL 
 DROP FUNCTION SQLCfg.GetPath
IF OBJECT_ID('SQLCfg.GetSubType') IS NOT NULL 
 DROP FUNCTION SQLCfg.GetSubType

GO

IF EXISTS (SELECT * 
           FROM sys.triggers 
           WHERE parent_id = OBJECT_ID('SQLCfg.tChange')
           AND is_disabled = 0)
 ALTER TABLE SQLCfg.tChange
 DISABLE TRIGGER ALL

GO

IF NOT EXISTS (SELECT *
               FROM sys.columns
               WHERE object_id = OBJECT_ID('SQLCfg.tChange')
               AND name = 'savenode')
 ALTER TABLE SQLCfg.tChange
 ADD savenode NVARCHAR(512) 

GO

UPDATE SQLCfg.tChange
SET savenode = Node.ToString()

GO

IF NOT EXISTS (SELECT * 
               FROM SQLCfg.tChange 
               WHERE savenode <> Node.ToString())
 ALTER TABLE SQLCfg.tChange
 DROP COLUMN Node

GO

DROP TYPE SQLCfg.SQLCfgNode 

GO

DROP ASSEMBLY SQLClueCLR

GO
-- v1.4.1.1
  EXEC sp_executesql N'CREATE ASSEMBLY [SQLClueCLR]
AUTHORIZATION [dbo]
FROM 
WITH PERMISSION_SET = SAFE';
   EXEC sp_executesql N'ALTER ASSEMBLY [SQLClueCLR]
ADD FILE FROM 
AS N''SQLClueCLR.pdb''';

GO

EXEC [sys].[sp_addextendedproperty] 
  @name=N'AutoDeployed'
, @value=N'no'
, @level0type=N'ASSEMBLY'
, @level0name=N'SQLClueCLR';

IF EXISTS (SELECT * FROM [sys].[fn_listextendedproperty] (N'SqlAssemblyProjectRoot'
                                                         ,  N'ASSEMBLY'
                                                         , 'SQLClueCLR'
                                                         , NULL
                                                         , NULL
                                                         , NULL
                                                         , NULL))
  EXEC [sys].[sp_dropextendedproperty] 
      @name=N'SqlAssemblyProjectRoot'
    , @level0type=N'ASSEMBLY'
    , @level0name=N'SQLClueCLR';

EXEC [sys].[sp_addextendedproperty] 
  @name=N'SqlAssemblyProjectRoot'
, @value=N'..\Visual Studio 2008\Projects\SQLClue\SQLCfgNode' 
, @level0type=N'ASSEMBLY'
, @level0name=N'SQLClueCLR';

GO

  EXEC sp_executesql N'CREATE TYPE [SQLCfg].[SQLCfgNode] EXTERNAL NAME [SQLClueCLR].[SQLCgfNode.SQLCfgNode]'

GO
  EXEC sys.sp_addextendedproperty 
       @name=N'AutoDeployed'
    , @value=N'no' 
    , @level0type=N'SCHEMA'
    , @level0name=N'SQLCfg'
    , @level1type=N'TYPE'
    , @level1name=N'SQLCfgNode';

  EXEC sys.sp_addextendedproperty 
      @name=N'SqlAssemblyFile'
    , @value=N'SQLCfgNode.vb' 
    , @level0type=N'SCHEMA'
    , @level0name=N'SQLCfg'
    , @level1type=N'TYPE'
    , @level1name=N'SQLCfgNode';

  EXEC sys.sp_addextendedproperty 
      @name=N'SqlAssemblyFileLine'
    , @value=13 
    , @level0type=N'SCHEMA'
    , @level0name=N'SQLCfg'
    , @level1type=N'TYPE'
    , @level1name=N'SQLCfgNode';
 

GO

ALTER TABLE SQLCfg.tChange
ADD Node [SQLCfg].[SQLCfgNode] NOT NULL DEFAULT 0x0

GO

UPDATE SQLCfg.tchange
SET Node = savenode 

GO

DECLARE @Cmd NVARCHAR(500)
SELECT @Cmd = 'ALTER TABLE SQLCfg.tChange DROP CONSTRAINT ' + dft.name 
FROM sys.default_constraints AS dft
JOIN sys.columns AS col
ON dft.parent_object_id = col.object_id
AND dft.parent_column_id = col.column_id
WHERE dft.parent_object_id = OBJECT_ID('SQLCfg.tChange')
AND col.name = 'Node'
IF @@ROWCOUNT = 1
 EXEC sp_executesql @Cmd

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: get the last inserted version for a specified node 
**
**    Note : changes need to be appliaed to assyRefresh too
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**              
*******************************************************************************/

CREATE FUNCTION [SQLCfg].[fLastVersion] 
( @Node  [SQLCfgNode] )
RETURNS [INT]
AS
BEGIN
 DECLARE @LastVersion [INT];
 SET @LastVersion = ISNULL( ( SELECT MAX(ISNULL([Version],0))
                              FROM [SQLCfg].[tChange]
                              WHERE [Node] = @Node), 0);
 RETURN @LastVersion;
END

GO

ALTER TABLE SQLCfg.tChange
ENABLE TRIGGER ALL

GO

CREATE NONCLUSTERED INDEX [ixn_tChange_Node_i]
ON [SQLCfg].[tChange] ([Node])
INCLUDE ([Version], [Id])

GO

CREATE UNIQUE NONCLUSTERED INDEX [ixn_tChange_Version_i]  
ON [SQLCfg].[tChange] ([Version], [Node])
INCLUDE ([Id], [Action])

GO

CREATE NONCLUSTERED INDEX [ixn_tChange_RecCreatedDt_i]
ON [SQLCfg].[tChange] ([RecCreatedDt])
INCLUDE ([Node],[Action])
  
GO  

IF NOT EXISTS (SELECT * 
               FROM SQLCfg.tChange 
               WHERE savenode <> Node.ToString())
 ALTER TABLE SQLCfg.tChange
 DROP COLUMN savenode

GO

/******************************************************************************
remove QueryBaseline references
the querybaseline component should have been uninstalled bore running this update
******************************************************************************/

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER VIEW [SQLCfg].[vArchive]
AS
SELECT [Id] AS [ArchiveId] 
 , [InstanceName] 
 , [Interval]
 , [IntervalType]
 , [IntervalBaseDt] AS [NextRunDt]
 , CASE WHEN [UseEventNotifications] = 1 THEN 'True'
        ELSE 'False' END AS [UseEventNotifications] 
 , [IsActive] AS [IsScheduleActive] 
FROM [SQLCfg].[tSchedule]   

GO

IF EXISTS (SELECT * 
           FROM INFORMATION_SCHEMA.ROUTINES 
           WHERE SPECIFIC_SCHEMA = N'SQLCfg'
           AND SPECIFIC_NAME = N'pScheduleSelectByBaselinePlanId' )
 DROP PROCEDURE [SQLCfg].[pScheduleSelectByBaselinePlanId];

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER TRIGGER [SQLCfg].[trgtSchedule_Insert_Update_Delete]
ON [SQLCfg].[tSchedule]
FOR INSERT, UPDATE, Delete
AS
BEGIN
 DECLARE @icount [INT]
  , @dcount [INT] 
  , @NodeBase [NVARCHAR] (50) 
  , @TextData [VARCHAR] (2047)
  , @InstanceName [NVARCHAR] (128);

 SET NOCOUNT ON;

 BEGIN TRY
  SELECT @icount = COUNT(*) FROM [inserted];
  SELECT @dcount = COUNT(*) FROM [deleted];

  SET @NodeBase = 'SQLCfgMetadata|SQLCfg.tSchedule|';

  -- no multi-row
  IF @icount > 1 OR @dcount > 1
   BEGIN
    SET @TextData = 'Multi-row [SQLCfg].[tSchedule] operations are not permitted';
    RAISERROR (@TextData,16,1);
   END

  -- inserts
  IF @icount = 1 AND @dcount = 0
   BEGIN
  
    UPDATE s
    SET [InstanceName] = s.[InstanceName] 
    FROM [SQLCfg].[tSchedule] s
    JOIN [inserted] i 
    ON s.[InstanceName] = i.[InstanceName];

    INSERT [SQLCfg].[tChange]
     ( [Node]
     , [Version]
     , [Action] 
     , [Definition]
     , [DefinitionDt] )
    SELECT
       @NodeBase + [InstanceName] + '|ScheduleId=' + CAST(Id as [VARCHAR] (10))
     , [SQLCfg].[fLastVersion](@NodeBase + [InstanceName] + '|ScheduleId=' + CAST(Id as [VARCHAR] (10))) + 1
     , 'Include'
     , 'INSERT [SQLCfg].[tSchedule]
 ( [InstanceName]
 , [Interval]
 , [IntervalType]
 , [IntervalBaseDt]
 , [UseEventNotifications]
 , [IsActive]
 , [RecCreatedDt] 
 , [RecCreatedUser]
 , [RecUpdatedDt]
 , [RecUpdatedUser] )
SELECT [InstanceName] = ''' + [InstanceName] + '''
AND [Interval] = ' + CAST([Interval] AS [VARCHAR] (10)) + ' 
AND [IntervalType] = ''' + [IntervalType] + ''' 
AND [IntervalBaseDt] = ''' + CAST([IntervalBaseDt] AS [VARCHAR] (20)) + ''' 
AND [UseEventNotifications] = ' + CAST([UseEventNotifications] AS [CHAR] (1)) + ' 
AND [IsActive] = ' + CAST([IsActive] AS [CHAR] (1)) + ' 
AND [RecCreatedDt] = ''' + CAST([RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + [RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST([RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + [RecUpdatedUser] + ''''
     , CURRENT_TIMESTAMP
    FROM [inserted] 
    WHERE [InstanceName] NOT IN (SELECT [InstanceName] FROM [deleted]);
   END

  -- updates
  IF @icount = 1 AND @dcount = 1
   BEGIN    

    UPDATE s
    SET [RecUpdatedDt] = CURRENT_TIMESTAMP
     , [RecUpdatedUser] = ORIGINAL_LOGIN()
     , [InstanceName] = s.[InstanceName]
    FROM [SQLCfg].[tSchedule] s
    JOIN [inserted] i 
    ON s.[Id] = i.[Id]
    JOIN [deleted] d
    ON i.[Id] = d.[Id];
    
    -- if only IntervalBaseDate changes do not write a change record
    If (UPDATE(Id) 
        OR UPDATE(InstanceName)
        OR UPDATE(Interval)
        OR UPDATE(IntervalType)
        OR UPDATE(UseEventNotifications)
        OR UPDATE(IsActive))
     BEGIN
      INSERT [SQLCfg].[tChange]
       ( [Node]
       , [Version]
       , [Action] 
       , [Definition]
       , [DefinitionDt] )
      SELECT
         @NodeBase + i.[InstanceName] + '|ScheduleId=' + CAST(i.Id as [VARCHAR] (10))
       , [SQLCfg].[fLastVersion](@NodeBase + i.[InstanceName] + '|ScheduleId=' + CAST(i.Id as [VARCHAR] (10))) + 1
       , 'Modify'
       , 'UPDATE [SQLCfg].[tSchedule]
SET [InstanceName] = ''' + i.[InstanceName] + '''
 , [Interval] = ' + CAST(i.[Interval] AS [VARCHAR] (10)) + ' 
 , [IntervalType] = ''' + i.[IntervalType] + ''' 
 , [IntervalBaseDt] = ''' + CAST(i.[IntervalBaseDt] AS [VARCHAR] (20)) + ''' 
 , [UseEventNotifications] = ' + CAST(i.[UseEventNotifications] AS [CHAR] (1)) + ' 
 , [IsActive] = ' + CAST(i.[IsActive] AS [CHAR] (1)) + ' 
 , [RecCreatedDt] = ''' + CAST(i.[RecCreatedDt] AS [VARCHAR] (20)) + '''
 , [RecCreatedUser] = ''' + i.[RecCreatedUser] + '''
 , [RecUpdatedDt] = ''' + CAST(i.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
 , [RecUpdatedUser] = ''' + i.[RecUpdatedUser] + '''
WHERE [InstanceName] = ''' + d.[InstanceName] + '''
AND [Interval] = ' + CAST(d.[Interval] AS [VARCHAR] (10)) + ' 
AND [IntervalType] = ''' + d.[IntervalType] + ''' 
AND [IntervalBaseDt] = ''' + CAST(d.[IntervalBaseDt] AS [VARCHAR] (20)) + ''' 
AND [UseEventNotifications] = ' + CAST(d.[UseEventNotifications] AS [CHAR] (1)) + ' 
AND [IsActive] = ' + CAST(d.[IsActive] AS [CHAR] (1)) + ' 
AND [RecCreatedDt] = ''' + CAST(d.[RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + d.[RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST(d.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + d.[RecUpdatedUser] + ''''
       , CURRENT_TIMESTAMP
      FROM [inserted] i 
      JOIN [deleted] d
      ON i.[InstanceName] = d.[InstanceName];
     END
   END

  -- deletes
  IF @icount = 0 AND @dcount = 1
   BEGIN

    -- active schedule with notifications enabled means there is still
    -- notification metadata deployed to the instance
    SELECT @InstanceName = [InstanceName] FROM [deleted]
    WHERE [UseEventNotifications] = 1
    AND [IsActive] = 1;

    IF @@ROWCOUNT > 0
      RAISERROR ('Remove event notifications configuration on Instance [%s] before deleting the Schedule',16,1, @InstanceName);
  
    INSERT [SQLCfg].[tChange]
     ( [Node]
     , [Version]
     , [Action] 
     , [Definition]
     , [DefinitionDt] )
    SELECT
       @NodeBase + [InstanceName] + '|ScheduleId=' + CAST(Id as [VARCHAR] (10))
     , SQLCfg.[fLastVersion](@NodeBase + [InstanceName] + '|ScheduleId=' + CAST(Id as [VARCHAR] (10))) + 1
     , 'Remove'
     , 'DELETE [SQLCfg].[tSchedule]
WHERE [InstanceName] = ''' + [InstanceName] + '''
AND [Interval] = ' + CAST([Interval] AS [VARCHAR] (10)) + ' 
AND [IntervalType] = ''' + [IntervalType] + ''' 
AND [IntervalBaseDt] = ''' + CAST([IntervalBaseDt] AS [VARCHAR] (20)) + ''' 
AND [UseEventNotifications] = ' + CAST([UseEventNotifications] AS [CHAR] (1)) + ' 
AND [IsActive] = ' + CAST([IsActive] AS [CHAR] (1)) + ' 
AND [RecCreatedDt] = ''' + CAST([RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + [RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST([RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + [RecUpdatedUser] + ''''
     , CURRENT_TIMESTAMP
    FROM [deleted] 
    WHERE [InstanceName] NOT IN (SELECT [InstanceName] FROM [inserted]);
   
  END

 END TRY

 BEGIN CATCH

  EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH 

END;

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER TRIGGER [SQLCfg].[trgtInstance_Insert_Update_Delete]
ON [SQLCfg].[tInstance]
FOR INSERT, UPDATE, DELETE
AS
BEGIN

 DECLARE @NodeBase [NVARCHAR](50) 
  , @TextData [VARCHAR] (2048);

 SET NOCOUNT ON;

 BEGIN TRY

  SET @NodeBase = 'SQLCfgMetadata|SQLCfg.tInstance|';

  -- deletes
  INSERT [SQLCfg].[tChange]
   ( [Node]
   , [Version]
   , [Action] 
   , [Definition]
   , [DefinitionDt] )
  SELECT
     @NodeBase + [Name]
   , [SQLCfg].[fLastVersion](@Nodebase + [Name]) + 1
   , 'Remove'
   , 'DELETE [SQLCfg].[tInstance]
WHERE [Name] = ''' + [Name] + '''
AND [ActiveDirectory] = ' + CAST([ActiveDirectory] AS [CHAR] (1)) + ' 
AND [Audits] = ' + CAST([Audits] AS [CHAR] (1)) + ' 
AND [BackupDevices] = ' + CAST([BackupDevices] AS [CHAR] (1)) + ' 
AND [Configuration] = ' + CAST([Configuration] AS [CHAR] (1)) + ' 
AND [Credentials] = ' + CAST([Credentials] AS [CHAR] (1)) + ' 
AND [CryptographicProviders] = ' + CAST([CryptographicProviders] AS [CHAR] (1)) + ' 
AND [Databases] = ' + CAST([Databases] AS [CHAR] (1)) + ' 
AND [EndPoints] = ' + CAST([EndPoints] AS [CHAR] (1)) + '
AND [FullTextService] = ' + CAST([FullTextService] AS [CHAR] (1)) + '
AND [Information] = ' + CAST([Information] AS [CHAR] (1)) + '
AND [JobServer] = ' + CAST([JobServer] AS [CHAR] (1)) + ' 
AND [Logins] = ' + CAST([Logins] AS [CHAR] (1)) + '
AND [LinkedServers] = ' + CAST([LinkedServers] AS [CHAR] (1)) + '
AND [Mail] = ' + CAST([Mail] AS [CHAR] (1)) + ' 
AND [ProxyAccount] = ' + CAST([ProxyAccount] AS [CHAR] (1)) + '
AND [ResourceGovernor] = ' + CAST([ResourceGovernor] AS [CHAR] (1)) + '
AND [Roles] = ' + CAST([Roles] AS [CHAR] (1)) + '
AND [ServerAuditSpecifications] = ' + CAST([ServerAuditSpecifications] AS [CHAR] (1)) + '
AND [Settings] = ' + CAST([Settings] AS [CHAR] (1)) + '
AND [Triggers] = ' + CAST([Triggers] AS [CHAR] (1)) + '
AND [UserDefinedMessages] = ' + CAST([UserDefinedMessages] AS [CHAR] (1)) + '
AND [RecCreatedDt] = ''' + CAST([RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + [RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST([RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + [RecUpdatedUser] + ''''
   , CURRENT_TIMESTAMP 
  FROM [deleted] 
  WHERE Name NOT IN (SELECT Name FROM [inserted]);
  
  -- disable any schedules that belong to a deleted instance
  Update s
  SET [IsActive] = 0
  FROM [SQLCfg].[tSchedule] s
  JOIN [deleted] d
  on s.[InstanceName] = d.[Name]
  WHERE Name NOT IN (SELECT Name from [inserted]);
    
  -- updates
  --- add audit info
  UPDATE s
  SET [RecUpdatedDt] = CURRENT_TIMESTAMP
   , [RecUpdatedUser] = ORIGINAL_LOGIN()
  FROM [SQLCfg].[tInstance] s
  JOIN [inserted] i 
  ON s.[Name] = i.[Name]
  JOIN [deleted] d
  ON i.[Name] = d.[Name];

  -- record the change
  INSERT [SQLCfg].[tChange]
   ( [Node]
   , [Version]
   , [Action] 
   , [Definition]
   , [DefinitionDt] )
  SELECT
     @NodeBase + i.[Name]
   , [SQLCfg].[fLastVersion](@Nodebase + i.[Name]) + 1
   , 'Modify'
   , 'UPDATE [SQLCfg].[tInstance]
SET [Name] = ''' + i.[Name] + '''
 , [ActiveDirectory] = ' + CAST(i.[ActiveDirectory] AS [CHAR] (1)) + ' 
 , [Audits] = ' + CAST(i.[Audits] AS [CHAR] (1)) + ' 
 , [BackupDevices] = ' + CAST(i.[BackupDevices] AS [CHAR] (1)) + ' 
 , [Configuration] = ' + CAST(i.[Configuration] AS [CHAR] (1)) + ' 
 , [Credentials] = ' + CAST(i.[Credentials] AS [CHAR] (1)) + ' 
 , [CryptographicProviders] = ' + CAST(i.[CryptographicProviders] AS [CHAR] (1)) + ' 
 , [Databases] = ' + CAST(i.[Databases] AS [CHAR] (1)) + ' 
 , [EndPoints] = ' + CAST(i.[EndPoints] AS [CHAR] (1)) + '
 , [FullTextService] = ' + CAST(i.[FullTextService] AS [CHAR] (1)) + '
 , [Information] = ' + CAST(i.[Information] AS [CHAR] (1)) + '
 , [JobServer] = ' + CAST(i.[JobServer] AS [CHAR] (1)) + ' 
 , [Logins] = ' + CAST(i.[Logins] AS [CHAR] (1)) + '
 , [LinkedServers] = ' + CAST(i.[LinkedServers] AS [CHAR] (1)) + '
 , [Mail] = ' + CAST(i.[Mail] AS [CHAR] (1)) + ' 
 , [ProxyAccount] = ' + CAST(i.[ProxyAccount] AS [CHAR] (1)) + '
 , [ResourceGovernor] = ' + CAST(i.[ResourceGovernor] AS [CHAR] (1)) + '
 , [Roles] = ' + CAST(i.[Roles] AS [CHAR] (1)) + '
 , [ServerAuditSpecifications] = ' + CAST(i.[ServerAuditSpecifications] AS [CHAR] (1)) + '
 , [Settings] = ' + CAST(i.[Settings] AS [CHAR] (1)) + '
 , [Triggers] = ' + CAST(i.[Triggers] AS [CHAR] (1)) + '
 , [UserDefinedMessages] = ' + CAST(i.[UserDefinedMessages] AS [CHAR] (1)) + '
 , [RecCreatedDt] = ''' + CAST(i.[RecCreatedDt] AS [VARCHAR] (20)) + '''
 , [RecCreatedUser] = ''' + i.[RecCreatedUser] + '''
 , [RecUpdatedDt] = ''' + CAST(i.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
 , [RecUpdatedUser] = ''' + i.[RecUpdatedUser] + '''
WHERE [Name] = ''' + d.[Name] + '''
AND [ActiveDirectory] = ' + CAST(d.[ActiveDirectory] AS [CHAR] (1)) + ' 
AND [Audits] = ' + CAST(d.[Audits] AS [CHAR] (1)) + ' 
AND [BackupDevices] = ' + CAST(d.[BackupDevices] AS [CHAR] (1)) + ' 
AND [Configuration] = ' + CAST(d.[Configuration] AS [CHAR] (1)) + ' 
AND [Credentials] = ' + CAST(d.[Credentials] AS [CHAR] (1)) + ' 
AND [CryptographicProviders] = ' + CAST(d.[CryptographicProviders] AS [CHAR] (1)) + ' 
AND [Databases] = ' + CAST(d.[Databases] AS [CHAR] (1)) + ' 
AND [EndPoints] = ' + CAST(d.[EndPoints] AS [CHAR] (1)) + '
AND [FullTextService] = ' + CAST(d.[FullTextService] AS [CHAR] (1)) + '
AND [Information] = ' + CAST(d.[Information] AS [CHAR] (1)) + '
AND [JobServer] = ' + CAST(d.[JobServer] AS [CHAR] (1)) + ' 
AND [Logins] = ' + CAST(d.[Logins] AS [CHAR] (1)) + '
AND [LinkedServers] = ' + CAST(d.[LinkedServers] AS [CHAR] (1)) + '
AND [Mail] = ' + CAST(d.[Mail] AS [CHAR] (1)) + ' 
AND [ProxyAccount] = ' + CAST(d.[ProxyAccount] AS [CHAR] (1)) + '
AND [ResourceGovernor] = ' + CAST(d.[ResourceGovernor] AS [CHAR] (1)) + '
AND [Roles] = ' + CAST(d.[Roles] AS [CHAR] (1)) + '
AND [ServerAuditSpecifications] = ' + CAST(d.[ServerAuditSpecifications] AS [CHAR] (1)) + '
AND [Settings] = ' + CAST(d.[Settings] AS [CHAR] (1)) + '
AND [Triggers] = ' + CAST(d.[Triggers] AS [CHAR] (1)) + '
AND [UserDefinedMessages] = ' + CAST(d.[UserDefinedMessages] AS [CHAR] (1)) + '
AND [RecCreatedDt] = ''' + CAST(d.[RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + d.[RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST(d.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + d.[RecUpdatedUser] + ''''
   , CURRENT_TIMESTAMP
  FROM [inserted] i 
  JOIN [deleted] d
  ON i.[Name] = d.[Name];

  -- inserts
  INSERT [SQLCfg].[tChange]
   ( [Node]
   , [Version]
   , [Action] 
   , [Definition]
   , [DefinitionDt] )
  SELECT
     @NodeBase + [Name]
   , [SQLCfg].[fLastVersion](@Nodebase + [Name]) + 1
   , 'Include'
   , 'INSERT [SQLCfg].[tInstance]
 ( [Name]
 , [ActiveDirectory]
 , [Audits]
 , [BackupDevices]
 , [Configuration]
 , [Credentials]
 , [CryptographicProviders]
 , [Databases]
 , [EndPoints]
 , [FullTextService]
 , [Information]
 , [JobServer]
 , [Logins]
 , [LinkedServers]
 , [Mail]
 , [ProxyAccount]
 , [ResourceGovernor]
 , [Roles]
 , [ServerAuditSpecifications]
 , [Settings]
 , [Triggers]
 , [UserDefinedMessages]
 , [RecCreatedDt] 
 , [RecCreatedUser]
 , [RecUpdatedDt]
 , [RecUpdatedUser] )
SELECT [Name] = ''' + [Name] + '''
AND [ActiveDirectory] = ' + CAST([ActiveDirectory] AS [CHAR] (1)) + ' 
AND [Audits] = ' + CAST([Audits] AS [CHAR] (1)) + ' 
AND [BackupDevices] = ' + CAST([BackupDevices] AS [CHAR] (1)) + ' 
AND [Configuration] = ' + CAST([Configuration] AS [CHAR] (1)) + ' 
AND [Credentials] = ' + CAST([Credentials] AS [CHAR] (1)) + ' 
AND [CryptographicProviders] = ' + CAST([CryptographicProviders] AS [CHAR] (1)) + ' 
AND [Databases] = ' + CAST([Databases] AS [CHAR] (1)) + ' 
AND [EndPoints] = ' + CAST([EndPoints] AS [CHAR] (1)) + '
AND [FullTextService] = ' + CAST([FullTextService] AS [CHAR] (1)) + '
AND [Information] = ' + CAST([Information] AS [CHAR] (1)) + '
AND [JobServer] = ' + CAST([JobServer] AS [CHAR] (1)) + ' 
AND [Logins] = ' + CAST([Logins] AS [CHAR] (1)) + '
AND [LinkedServers] = ' + CAST([LinkedServers] AS [CHAR] (1)) + '
AND [Mail] = ' + CAST([Mail] AS [CHAR] (1)) + ' 
AND [ProxyAccount] = ' + CAST([ProxyAccount] AS [CHAR] (1)) + '
AND [ResourceGovernor] = ' + CAST([ResourceGovernor] AS [CHAR] (1)) + '
AND [Roles] = ' + CAST([Roles] AS [CHAR] (1)) + '
AND [ServerAuditSpecifications] = ' + CAST([ServerAuditSpecifications] AS [CHAR] (1)) + '
AND [Settings] = ' + CAST([Settings] AS [CHAR] (1)) + '
AND [Triggers] = ' + CAST([Triggers] AS [CHAR] (1)) + '
AND [UserDefinedMessages] = ' + CAST([UserDefinedMessages] AS [CHAR] (1)) + '
AND [RecCreatedDt] = ''' + CAST([RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + [RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST([RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + [RecUpdatedUser] + ''''
   , CURRENT_TIMESTAMP
  FROM [inserted] 
  WHERE [Name] NOT IN (SELECT [Name] FROM [deleted]);

 END TRY

 BEGIN CATCH

  EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH 

END;

GO 

/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: get the history for an archive Schedule
**       
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline add ArchiveError 
**              
*******************************************************************************/

ALTER Procedure [SQLCfg].[pArchiveLogSelectScheduleHistoryByScheduleId]
 ( @ScheduleId [INT]
 , @BeginDt [DATETIME]
 , @EndDt [DATETIME])
AS
BEGIN

 SET NOCOUNT ON;
 
    SELECT l.[Id] AS [ArchiveLogId]
    , l.[ScheduleId]
    , l.[InstanceName]
    , l.[NbrDDLEventsProcessed]
    , l.[NbrItemsProcessed]
    , l.[NbrItemsAdded]
    , l.[NbrItemsChanged]
    , l.[NbrItemsDeleted]
    , l.[ScheduledStartDt]
    , l.[ActualStartDt]
    , l.[ActualEndDt] 
    , l.[RecCreatedUser]
    , l.[ArchiveError]
    , s1.[Interval]
    , s1.[IntervalType]
    , s1.[IntervalBaseDt]
    , s1.[UseEventNotifications]
    , s1.[IsActive]
   FROM [SQLCfg].[tArchiveLog] l
   JOIN [SQLCfg].[tSchedule] s1
   ON l.[ScheduleId] = s1.[Id] 
   WHERE s1.[Id] = @ScheduleId
   AND (   l.[ScheduledStartDt] BETWEEN @BeginDt AND @EndDt
        OR l.[ActualStartDt]    BETWEEN @BeginDt AND @EndDt); 

END;

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: get all history for an instance based on archive ScheduleId
**       
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline add ArchiveError 
**              
*******************************************************************************/

ALTER Procedure [SQLCfg].[pArchiveLogSelectSQLInstanceHistoryByScheduleId]
 ( @ScheduleId [INT]
 , @BeginDt [DATETIME]
 , @EndDt [DATETIME])
AS
BEGIN

 SET NOCOUNT ON;
 
    SELECT l.[Id] AS [ArchiveLogId]
    , l.[ScheduleId]
    , l.[InstanceName]
    , l.[NbrDDLEventsProcessed]
    , l.[NbrItemsProcessed]
    , l.[NbrItemsAdded]
    , l.[NbrItemsChanged]
    , l.[NbrItemsDeleted]
    , l.[ScheduledStartDt]
    , l.[ActualStartDt]
    , l.[ActualEndDt] 
    , l.[RecCreatedUser]
    , l.[ArchiveError]
    , s2.[Interval]
    , s2.[IntervalType]
    , s2.[IntervalBaseDt]
    , s2.[UseEventNotifications]
    , s2.[IsActive]
   FROM [SQLCfg].[tArchiveLog] l
   JOIN [SQLCfg].[tSchedule] s1
   ON l.[InstanceName] = s1.[InstanceName] 
   JOIN [SQLCfg].[tSchedule] s2
   ON s2.[Id] = l.[ScheduleId]
   WHERE s1.[Id] = @ScheduleId
   AND (   l.[ScheduledStartDt] BETWEEN @BeginDt AND @EndDt
        OR l.[ActualStartDt]    BETWEEN @BeginDt AND @EndDt); 

END;

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Add a summary record for an archive
**       
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 add ArchiveError and alert message          
**
*******************************************************************************/

ALTER Procedure [SQLCfg].[pArchiveLogInsert]
 ( @ScheduleId [INT]
  , @InstanceName [NVARCHAR] (128)
  , @NbrDDLEventsProcessed [INT]
  , @NbrItemsProcessed [INT]
  , @NbrItemsAdded [INT]
  , @NbrItemsChanged [INT]
  , @NbrItemsDeleted [INT]
  , @ScheduledStartDt [DATETIME]   
  , @ActualStartDt [DATETIME]  
  , @ActualEndDt [DATETIME] 
  , @ArchiveError [VARCHAR] (MAX))
AS
BEGIN

 DECLARE @TextData [NVARCHAR] (MAX)
       , @LogId [INT];

 SET XACT_ABORT ON;
 SET NOCOUNT ON;

  BEGIN TRY

   INSERT [SQLCfg].[tArchiveLog]
    ( [ScheduleId]
    , [InstanceName]
    , [NbrDDLEventsProcessed]
    , [NbrItemsProcessed]
    , [NbrItemsAdded]
    , [NbrItemsChanged]
    , [NbrItemsDeleted]
    , [ScheduledStartDt]
    , [ActualStartDt]
    , [ActualEndDt] 
    , [ArchiveError])
   VALUES
    ( @ScheduleId 
    , UPPER(@InstanceName) 
    , @NbrDDLEventsProcessed
    , @NbrItemsProcessed
    , @NbrItemsAdded
    , @NbrItemsChanged
    , @NbrItemsDeleted
    , @ScheduledStartDt
    , @ActualStartDt
    , @ActualEndDt 
    , NULLIF(@ArchiveError, '')); -- does no good use a sparse column if empty string is always inserted

    SET @LogId = SCOPE_IDENTITY()
    
    /*
      the message text must match the keyword of the alert   
      the user can create alerts for individual schedules by specifying enough of
      the message text to identify the schedule in the alert @event_description_keyword 
      example: 'SQLClue SQL Configuration Archive Exception: Schedule Id 18'
      Only configuration of 2 general alerts on archive success or failure are supported
      by the SQLClue Console's Archive Alert Notification dialog. All other Archive alerts 
      must be configured by the user.  
     */ 
    If NULLIF(@ArchiveError, '') IS NULL 
     RAISERROR ('SQLClue SQL Configuration Archive Complete: Schedule Id %d, Archive Log Id %d',1,1,@ScheduleId, @LogId) WITH LOG
    ELSE
     RAISERROR ('SQLClue SQL Configuration Archive Exception: Schedule Id %d, Archive Log Id %d',9,1,@ScheduleId, @LogId) WITH LOG
    
  END TRY

  BEGIN CATCH

   SET @TextData = '   @ScheduleId = ' + ISNULL(CAST(@ScheduleId AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @InstanceName = ' + ISNULL(CHAR(39) + @InstanceName + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @NbrDDLEventsProcessed = ' + ISNULL(CAST(@NbrDDLEventsProcessed AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @NbrItemsProcessed = ' + ISNULL(CAST(@NbrItemsProcessed AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @NbrItemsAdded = ' + ISNULL(CAST(@NbrItemsAdded AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @NbrItemsChanged = ' + ISNULL(CAST(@NbrItemsChanged AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @NbrItemsDeleted = ' + ISNULL(CAST(@NbrItemsDeleted AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @ScheduledStartDt = ' + ISNULL(CHAR(39) + CAST(@ScheduledStartDt AS [VARCHAR] (21)),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @ActualStartDt = ' + ISNULL(CHAR(39) + CAST(@ActualStartDt AS [VARCHAR] (21)) + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                 + ' , @ActualEndDt = ' + ISNULL(CHAR(39) + CAST(@ActualEndDt AS [VARCHAR] (21)) + CHAR(39),'NULL')
                 + ' , @ArchiveError = ' + ISNULL(CHAR(39) + @ArchiveError  + CHAR(39),'NULL');
    EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH;

END;

GO

GRANT EXECUTE ON [SQLCfg].[pArchiveLogInsert] TO [SQLCfgServiceRole];

GO

If EXISTS (SELECT *
           FROM msdb.dbo.sysalerts
           WHERE name = 'SQLClue: SQL Configuration Archive Succeeded')
 EXEC msdb.dbo.sp_delete_alert @name = 'SQLClue: SQL Configuration Archive Succeeded'             
GO

-- notification requires additional configuration - can use SQLClue UI for simple notification
EXEC msdb.dbo.sp_add_alert @name = 'SQLClue: SQL Configuration Archive Succeeded' 
     , @message_id = 0 
     , @severity = 1 
     , @enabled = 1
     , @notification_message = 'Archive notifications can be enabled/disabled from the SQLClue Console'  
     , @event_description_keyword = 'SQLClue SQL Configuration Archive Complete:' 

GO

If EXISTS (SELECT *
           FROM msdb.dbo.sysalerts
           WHERE name = 'SQLClue: SQL Configuration Archive Failed')
 EXEC msdb.dbo.sp_delete_alert @name = 'SQLClue: SQL Configuration Archive Failed'             
GO

-- by default the alert is active, use UI or SSMS to disable  
-- notification must be configured - can use SQLClue UI for simple notification only
EXEC msdb.dbo.sp_add_alert @name = 'SQLClue: SQL Configuration Archive Failed' 
     , @message_id = 0 
     , @severity = 9  
     , @enabled = 1
     , @notification_message = 'See the Application Event Log and the ArchiveLog table for additional details.'  
     , @event_description_keyword = 'SQLClue SQL Configuration Archive Exception:' 

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Fetch the specified service settings 
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pScheduleGet] 
 ( @Id [INT]
 , @InstanceName [NVARCHAR] (128) OUTPUT 
 , @Interval [INT] OUTPUT
 , @IntervalType [NVARCHAR] (10) OUTPUT
 , @IntervalBaseDt [DATETIME] OUTPUT
 , @UseEventNotifications [BIT] OUTPUT
 , @IsActive [BIT] OUTPUT ) 
AS
BEGIN

 SET NOCOUNT ON;

 SELECT @InstanceName 
  , @Interval
  , @IntervalType
  , @IntervalBaseDt
  , @UseEventNotifications
  , @IsActive
 FROM [SQLCfg].[tSchedule]
 WHERE [Id] = @Id;

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: the number of schedules set up for a SQL Instance 
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pScheduleGetCountForInstance] 
 ( @InstanceName [NVARCHAR] (128)  
 , @Count [INT] OUTPUT) 
AS
BEGIN

 SET NOCOUNT ON;

 SELECT @Count = Count(*) 
 FROM [SQLCfg].[tSchedule]
 WHERE [InstanceName] = @InstanceName;

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Add the archive schedule for an SQL instance. 
** Note: encrypted password always added by update and requires symmetric key
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pScheduleInsert] 
 ( @InstanceName [NVARCHAR] (128)
 , @Interval [INT] 
 , @IntervalType [NVARCHAR] (10) 
 , @IntervalBaseDt [DATETIME]
 , @UseEventNotifications [BIT]
 , @IsActive [BIT]
 , @Id [INT] OUTPUT )
AS
BEGIN
 DECLARE @TextData [NVARCHAR](800);

 SET XACT_ABORT ON;
 SET NOCOUNT ON;

 BEGIN TRY

  INSERT [SQLCfg].[tSchedule]
   ( [InstanceName]
   , [Interval]
   , [IntervalType]
   , [IntervalBaseDt]
   , [UseEventNotifications]
   , [IsActive]) 
  VALUES 
   ( UPPER(@InstanceName) 
   , @Interval
   , @IntervalType
   , @IntervalBaseDt
   , @UseEventNotifications
   , @IsActive ); 

 SELECT @Id = SCOPE_IDENTITY();

 END TRY

  BEGIN CATCH
 
  SET @TextData = '   @InstanceName = ' + ISNULL(CHAR(39) + @InstanceName + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                + ' , @Interval = ' + ISNULL(CAST(@Interval AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                + ' , @IntervalType = ' + ISNULL(CHAR(39) + @IntervalType + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                + ' , @IntervalBaseDt = ' + ISNULL(CHAR(39) + CAST(@IntervalBaseDt AS VARCHAR(20)) + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                + ' , @UseEventNotifications = ' + ISNULL(CAST(@UseEventNotifications AS [VARCHAR] (6)),'NULL') + CHAR(13) + CHAR(10)
                + ' , @IsActive = ' + ISNULL(CAST(@IsActive AS [VARCHAR] (6)),'NULL') + CHAR(13) + CHAR(10)
                + ' , @Id = ' + ISNULL(CAST(@Id AS [VARCHAR] (10)),'NULL') + ' OUTPUT' + CHAR(13) + CHAR(10);
  EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH; 

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Update the archive schedule for an SQL instance. 
** Note: encrypted password always added by update and requires symmetric key
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pScheduleUpdate] 
 ( @Id [INT]
 , @InstanceName [NVARCHAR] (128) = NULL
 , @Interval [INT] = NULL
 , @IntervalType [NVARCHAR] (10) = NULL
 , @IntervalBaseDt [DATETIME] = NULL
 , @UseEventNotifications [BIT] = NULL 
 , @IsActive [BIT] = NULL )
AS
BEGIN
 DECLARE @TextData [NVARCHAR] (500);

 SET XACT_ABORT ON;
 SET NOCOUNT ON;

 BEGIN TRY

  UPDATE [SQLCfg].[tSchedule]
  SET [InstanceName] = UPPER(ISNULL(@InstanceName, [InstanceName]))
   , [Interval] = ISNULL(@Interval, [Interval])
   , [IntervalType] = ISNULL(@IntervalType, [IntervalType])
   , [IntervalBaseDt] = ISNULL(@IntervalBaseDt, [IntervalBaseDt])
   , [UseEventNotifications] = ISNULL(@UseEventNotifications, [UseEventNotifications])
   , [IsActive] = ISNULL(@IsActive, [IsActive])
  WHERE [Id] = @Id;

 END TRY

 BEGIN CATCH

  SET @TextData = '   @InstanceName = ' + ISNULL(CHAR(39) + @InstanceName + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                + ' , @Interval = ' + ISNULL(CAST(@Interval AS [VARCHAR] (10)),'NULL') + CHAR(13) + CHAR(10)
                + ' , @IntervalType = ' + ISNULL(CHAR(39) + @IntervalType + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                + ' , @IntervalBaseDt = ' + ISNULL(CHAR(39) + CAST(@IntervalBaseDt AS VARCHAR(20)) + CHAR(39),'NULL') + CHAR(13) + CHAR(10)
                + ' , @UseEventNotifications = ' + ISNULL(CAST(@UseEventNotifications AS [VARCHAR] (6)),'NULL') + CHAR(13) + CHAR(10)
                + ' , @IsActive = ' + ISNULL(CAST(@IsActive AS [VARCHAR] (6)),'NULL') + CHAR(13) + CHAR(10)
                + ' , @Id = ' + ISNULL(CAST(@Id AS [VARCHAR] (10)),'NULL') + ' OUTPUT' + CHAR(13) + CHAR(10);
  EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Fetch the archive Schedules for all SQL Instances 
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pScheduleSelectAll] 
AS
BEGIN

 SET NOCOUNT ON;

 SELECT [Id] 
  , [InstanceName]
  , [Interval]
  , [IntervalType]
  , [IntervalBaseDt]
  , [UseEventNotifications]
  , [IsActive]
 FROM [SQLCfg].[tSchedule]
 ORDER BY [InstanceName]
  , [IntervalBaseDt]
  , [Id];

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Fetch the archive Schedules for all SQL Instances
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pScheduleSelectAllForInstance] 
 ( @InstanceName [NVARCHAR] (128) )
AS
BEGIN

 SET NOCOUNT ON;

 SELECT [Id] 
  , [InstanceName]
  , [Interval]
  , [IntervalType]
  , [IntervalBaseDt]
  , [UseEventNotifications]
  , [IsActive]
 FROM [SQLCfg].[tSchedule] 
 WHERE [InstanceName] = @InstanceName;

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Fetch the archive Schedules for all SQL Instances include the
**          NbrItemsProcessed from the last execution for the schedule or
**          -1 if no history found. 
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/10/2009     bw                 remove QueryBaseline references 
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pScheduleSelectAllWithLastNbrItemsProcessed] 
AS
BEGIN

 SET NOCOUNT ON;
--what if plandomized?
 SELECT s.[Id] 
  , s.[InstanceName]
  , s.[Interval]
  , s.[IntervalType]
  , s.[IntervalBaseDt]
  , s.[UseEventNotifications]
  , s.[IsActive]
  , ISNULL((SELECT  Top 1 [NbrItemsProcessed]             
            FROM [SQLCfg].[tArchiveLog]
            WHERE [ScheduleId] = s.[Id]
            ORDER BY [ActualStartDt] Desc), -1) AS [LastNbrItemsProcessed]
 FROM [SQLCfg].[tSchedule] s
 ORDER BY [InstanceName]
  , [IntervalBaseDt]
  , [Id];

END

GO
IF EXISTS (SELECT * 
           FROM sys.default_constraints
           WHERE [name] ='dft_tSchedule_BaselinePlanId')
 ALTER TABLE [SQLCfg].[tSchedule]
 DROP CONSTRAINT [dft_tSchedule_BaselinePlanId]

If EXISTS (SELECT * 
           FROM INFORMATION_SCHEMA.COLUMNS
           WHERE TABLE_SCHEMA = 'SQLCfg'
           AND TABLE_NAME = 'tSchedule'
           AND COLUMN_NAME = 'BaselinePlanId')
 ALTER TABLE [SQLCfg].[tSchedule]
 DROP COLUMN [BaselinePlanId]

GO

/*************************************************************************************
DATE FIX
**************************************************************************************/
ALTER TABLE [SQLCfg].[tSQLCfg] 
DROP  CONSTRAINT [dft_tSQLCfg_LicenseDate] 
GO
ALTER TABLE [SQLCfg].[tSQLCfg] 
ADD CONSTRAINT [dft_tSQLCfg_LicenseDate] 
DEFAULT (CAST(CAST(CURRENT_TIMESTAMP AS [DATE]) AS [VARCHAR] (30)))
FOR [LicenseDate] 
GO
UPDATE [SQLCfg].[tSQLCfg]
SET [LicenseDate] = CAST(CAST([LicenseDate] AS [DATE]) AS [VARCHAR] (30))
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Note: changes need to be applied to assy refresh too
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/28/2008     bw                 added validation of LicenseDate               
**              
*******************************************************************************/

ALTER TRIGGER [SQLCfg].[trgtSQLCfg_Insert_Update_Delete]
ON [SQLCfg].[tSQLCfg]
FOR INSERT, UPDATE, DELETE
AS
BEGIN

 DECLARE @icount [INT]
  , @dcount [INT]
  , @ucount [INT]
  , @Node  [SQLCfgNode] 
  , @TextData [VARCHAR] (2048);

 SET NOCOUNT ON;

 BEGIN TRY

  SELECT @icount = COUNT(*) FROM [inserted];
  SELECT @dcount = COUNT(*) FROM [deleted];
  SELECT @ucount = COUNT(*) FROM [SQLCfg].[tSQLCfg];

  -- no multi row
  IF @icount > 1 OR @dcount > 1
   BEGIN
    SET @TextData = 'Multi-row [SQLCfg].[tSQLCfg] operations are not permitted';
    RAISERROR (@TextData, 16,1);
   END

  -- only one row in table
  IF @ucount > 1
   BEGIN
    SET @TextData = 'Cannot add multiple [SQLCfg].[tSQLCfg] configurations';
    RAISERROR (@TextData, 16,1);
   END

  -- no delete
  IF @dcount = 1 and @icount = 0 
   BEGIN
    SET @TextData = 'Cannot remove the [SQLCfg].[tSQLCfg] configuration';
    RAISERROR (@TextData, 16,1);
   END

  -- LicenseDate must evaluate to a date
  IF (SELECT ISDATE(CAST([LicenseDate] AS [DATETIME])) FROM inserted) = 0
   BEGIN
    SET @TextData = '[SQLCfg].[tSQLCfg].[LicenseDate] is not a valid date at this locale';
    RAISERROR (@TextData, 16,1);
   END

  SET @Node = 'SQLCfgMetadata|SQLCfg.tSQLCfg';

  -- update
  IF @dcount = 1 and @icount = 1
   BEGIN

    -- add audit info
    UPDATE [SQLCfg].[tSQLCfg]
    SET [RecUpdatedDt] = CURRENT_TIMESTAMP
     , [RecUpdatedUser] = ORIGINAL_LOGIN();

    -- record the update to change
    INSERT [SQLCfg].[tChange]
     ( [Node]  
     , [Version]
     , [Action] 
     , [Definition]
     , [DefinitionDt] )
    SELECT 
       @Node
     , [SQLCfg].[fLastVersion](@Node) + 1
     , 'Modify'
     , 'UPDATE [SQLCfg].[tSQLCfg]
SET [LicensedCompany] = ''' + i.[LicensedCompany] + '''
 , [LicensedUser] = ''' + i.[LicensedUser] + '''
 , [LicenseCode] = ''' + i.[LicenseCode] + '''
 , [LicensedInstanceCount] = ' + CAST(i.[LicensedInstanceCount] AS [VARCHAR] (10)) + '
 , [LicenseDate] = ''' + i.[LicenseDate] + '''
 , [RecCreatedDt] = ''' + CAST(i.[RecCreatedDt] AS [VARCHAR] (20)) + '''
 , [RecCreatedUser] = ''' + i.[RecCreatedUser] + '''
 , [RecUpdatedDt] = ''' + CAST(i.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
 , [RecUpdatedUser] = ''' + i.[RecUpdatedUser] + '''
WHERE [LicensedCompany] = ''' + d.[LicensedCompany] + '''
AND [LicensedUser] = ''' + d.[LicensedUser] + '''
AND [LicenseCode] = ''' + d.[LicenseCode] + '''
AND [LicensedInstanceCount] = ' + CAST(d.[LicensedInstanceCount] AS [VARCHAR] (10)) + '
AND [LicenseDate] = ''' + d.[LicenseDate] + '''
AND [RecCreatedDt] = ''' + CAST(d.[RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + d.[RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST(d.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + d.[RecUpdatedUser] + '''
AND ORIGINAL_LOGIN() = ''' + ORIGINAL_LOGIN() + ''''
     , CURRENT_TIMESTAMP
    FROM [inserted] i
    CROSS JOIN [deleted] d;

   END;      

  -- insert
  IF @dcount = 0 and @icount = 1
   BEGIN
    -- log the insert to change
    INSERT [SQLCfg].[tChange]
     ( [Node]  
     , [Version]
     , [Action] 
     , [Definition]
     , [DefinitionDt] )
    SELECT 
       @Node
     , [SQLCfg].[fLastVersion](@Node) + 1
     , 'Include'
     , 'INSERT [SQLCfg].[tSQLCfg]
 ( [LicensedCompany] 
 , [LicensedUser] 
 , [LicenseCode]
 , [LicensedInstanceCount]
 , [LicenseDate] 
 , [RecCreatedDt] 
 , [RecCreatedUser] 
 , [RecUpdatedDt] 
 , [RecUpdatedUser] )
SELECT ''' + i.[LicensedCompany] + '''
 , ''' + i.[LicensedUser] + '''
 , ''' + i.[LicenseCode] + '''
 , ' + CAST(i.[LicensedInstanceCount] AS [VARCHAR] (10)) + '
 , ''' + i.[LicenseDate] + '''
 , ''' + CAST(i.[RecCreatedDt] AS [VARCHAR] (20)) + '''
 , ''' + i.[RecCreatedUser] + '''
 , ''' + CAST(i.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
 , ''' + i.[RecUpdatedUser] + ''''
     , CURRENT_TIMESTAMP
    FROM [inserted] i;

   END;

 END TRY 

 BEGIN CATCH

  EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH 

END;

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: List items changed for a date
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/28/2009     bw                 remove locale specific date conversion          
**                                      include change type and action filters 
*******************************************************************************/
ALTER Procedure [SQLCfg].[pChangesForDate]
 ( @ChangeDate [DATETIME]
 , @SQLInstance [NVARCHAR] (786)
 , @NodeType [NVARCHAR] (30)
 , @Action [NVARCHAR] (30))
AS
BEGIN

SET NOCOUNT ON;

SELECT Id 
 , [Node].ToString() AS [Node]
 , [Node].[Database] AS [Database]
 , [Node].[Collection] AS [Collection]
 , [Node].[Item] AS [ChangeItem]
 , [Version]
 , [Action]
 , [RecCreatedDt]
FROM [SQLCfg].[tChange]
WHERE Node.SQLInstance = @SQLInstance
AND [Node].[Type] = CASE WHEN @NodeType = 'All' THEN [Node].[Type] ELSE @NodeType END
AND [Action] = CASE WHEN @Action = 'All' THEN [Action] ELSE @Action END
AND CAST([RecCreatedDt] AS [DATE]) = CAST(ISNULL(@ChangeDate, CURRENT_TIMESTAMP) AS [DATE])
ORDER BY [Database] DESC, [Collection] DESC, [ChangeItem] DESC; 

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: List changes on server for an item, most recent changes first
**       Business rule, any thing older than @DaystoShow will not be 
**       considered as candididate for the 'revert' status. Instead a 
**       new - and possibly duplicated version - will be added.
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/28/2009     bw                 remove locale specific date conversion          
**
*******************************************************************************/

ALTER Procedure [SQLCfg].[pChangeHistoryByItem]
 ( @Node [NVARCHAR] (786)
 , @DaysToShow [INT] = 10000 )
AS
BEGIN

SET NOCOUNT ON;

SELECT [Id] 
 , [Version]
 , [Action]
 , CAST([RecCreatedDt] AS [DATE]) AS [Date]
FROM [SQLCfg].[tChange]
WHERE [Node] = @Node
AND [RecCreatedDt] > CAST(CURRENT_TIMESTAMP - @DaysToShow AS [DATE])
ORDER BY [Id] DESC; 

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Get the SQL errors for the the last n days  
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/28/2009     bw                 add date conversion          
**              
*******************************************************************************/

ALTER PROCEDURE [SQLCfg].[pSQLErrorLogSelectMostRecent] 
 ( @DaysToGet [INT] = 30 )
AS
BEGIN

 SELECT [UserName]
  , [DBName]
  , [ErrorNumber]
  , [ErrorSeverity]
  , [ErrorState]
  , [ErrorProcedure]
  , [ErrorLine]
  , [ErrorMessage]
  , [TextData]
  , [Notes]
  , [RecCreatedDt] 
 FROM [SQLCfg].[tSQLErrorLog]  
 WHERE [RecCreatedDt] > CAST(CURRENT_TIMESTAMP - @DaysToGet AS DATE);
 
END
GO

/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Get the number of changes for the last @DaysToShow days
**       optionally filter by Instance, Database, Schema, ItemType and/or Name
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/28/2009     bw                 remove locale specific date conversion          
**              
*******************************************************************************/

ALTER Procedure [SQLCfg].[pChangeActionSummaryByNodeForDays]
 ( @DaysToShow [INT] = 30 
 , @Node [NVARCHAR] (786) = 'All' )
AS
BEGIN

SET NOCOUNT ON;

SELECT [Node].[SQLInstance] As [SQLInstance] 
 , [Node].[Type] As [Type]
 , CAST([RecCreatedDt] AS [DATE]) AS [Date]
 , CASE WHEN @Node = 'All' THEN 'All Nodes' ELSE @Node END AS [Node]
    , Count(*) AS [TotalChangeCount] 
 , SUM(CASE WHEN Action = 'Include' THEN 1 ELSE 0 END) AS [MetadataRowInserts] 
 , SUM(CASE WHEN Action = 'Modify' THEN 1 ELSE 0 END) AS [MetadataRowUpdates] 
 , SUM(CASE WHEN Action = 'Remove' THEN 1 ELSE 0 END) AS [MetadataRowDeletes] 
 , SUM(CASE WHEN Action = 'Add' THEN 1 ELSE 0 END) AS [SQLConfigurationAdded] 
 , SUM(CASE WHEN Action = 'Change' THEN 1 ELSE 0 END) AS [SQLConfigurationChanged] 
 , SUM(CASE WHEN Action = 'Delete' THEN 1 ELSE 0 END) AS [SQLConfigurationRemoved] 
FROM [SQLCfg].[tChange]
WHERE [RecCreatedDt] > CAST(CURRENT_TIMESTAMP - @DaysToShow AS [DATE])
AND [Node] = CASE WHEN @Node = 'All' THEN [Node] ELSE @Node END
GROUP BY [Node].[SQLInstance], [Node].[Type]
 , CAST([RecCreatedDt] AS [DATE])
ORDER BY [Date]
 , [SQLInstance]
 , [Type];

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: Get the list of changes for the last @DaysToShow days
**       optionally filter by Instance, Database, Schema, ItemType and/or Name
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11/28/2009     bw                 remove locale specific date conversion          
**              
*******************************************************************************/
ALTER Procedure [SQLCfg].[pChangeActionByNodeForDays]
 ( @DaysToShow [INT] = 30 
 , @Node [NVARCHAR] (786) = 'All' )
AS
BEGIN

SET NOCOUNT ON;

SELECT [Node].[SQLInstance] As [SQLInstance] 
 , [Node].[Type] As [Type]
 , CAST([RecCreatedDt] AS [DATE]) AS [Date]
 , CASE WHEN @Node = 'All' THEN 'All Nodes' ELSE @Node END AS [Node]
 , Action 
FROM [SQLCfg].[tChange]
WHERE [RecCreatedDt] > CAST(CURRENT_TIMESTAMP - @DaysToShow AS [DATE])
AND [Node] = CASE WHEN @Node = 'All' THEN [Node] ELSE @Node END
ORDER BY [Date], [SQLInstance], [Type];

END
GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    11-5-2009      bw                 no null definition if protocol, login,
**                                      or pwd is null         
*******************************************************************************/

ALTER TRIGGER [SQLCfg].[trgtConnection_Insert_Update_Delete]
ON [SQLCfg].[tConnection]
FOR INSERT, UPDATE, DELETE
AS
BEGIN
 DECLARE @icount [INT]
  , @dcount [INT] 
  , @NodeBase [NVARCHAR](50)
  , @TextData [VARCHAR] (2048)
  , @InstanceName [NVARCHAR] (128);

 SET NOCOUNT ON;

 BEGIN TRY
  SELECT @icount = COUNT(*) FROM [inserted];
  SELECT @dcount = COUNT(*) FROM [deleted];

  -- no multi-row
  IF @icount > 1 OR @dcount > 1
   BEGIN
    SET @TextData = 'Multi-row [SQLCfg].[tConnection] operations are not permitted';
    RAISERROR (@TextData,16,1)
   END

  SET @NodeBase = 'SQLCfgMetadata|SQLCfg.tConnection|';
  SELECT @InstanceName = UPPER([InstanceName]) from deleted

  -- deletes
  IF @icount = 0 AND @dcount = 1
   BEGIN
    IF (SELECT [EncryptedConnection] FROM deleted) = 1
      RAISERROR('Remove encrypted connection configuration on Instance [%s] before deleting the connection''s metadata.', 16, 1, @InstanceName);  
 
    -- There can be no configuration left when the connection is deleted
    -- the approach here will leave a change row for each removed row
    SET ROWCOUNT 1

		WHILE EXISTS (SELECT * FROM [SQLCfg].[tServiceBroker] 
					  WHERE [InstanceName] = @InstanceName) 
		 DELETE [SQLCfg].[tServiceBroker]
		 WHERE [InstanceName] = @InstanceName
		 AND [DatabaseName] = (SELECT MIN([DatabaseName])
							   FROM [SQLCfg].[tServiceBroker]
							   WHERE [InstanceName] = @InstanceName);
	                          

		WHILE EXISTS (SELECT * FROM [SQLCfg].[tDb] 
					  WHERE [InstanceName] = @InstanceName)
		 DELETE [SQLCfg].[tDb] 
		 WHERE [InstanceName] = @InstanceName
		 AND [Name] = (SELECT MIN([Name])
					 FROM [SQLCfg].[tDb]
					 WHERE [InstanceName] = @InstanceName);


		DELETE [SQLCfg].[tJobServer]
		WHERE [InstanceName] = @InstanceName;

		DELETE [SQLCfg].[tInstance]
		WHERE [Name] = @InstanceName;

		-- fkey cascades deletes to tSchedule rows but will violate the 'operate on one row at a time' rule
		WHILE EXISTS (SELECT * FROM [SQLCfg].[tSchedule] 
					  WHERE [InstanceName] = @InstanceName)
		 DELETE [SQLCfg].[tSchedule]
		 WHERE [InstanceName] = @InstanceName
		 AND [Id] = (SELECT MIN([Id])
				   FROM [SQLCfg].[tSchedule]
				   WHERE [InstanceName] = @InstanceName);

    SET ROWCOUNT 1

    INSERT [SQLCfg].[tChange]
     ( [Node]
     , [Version]
     , [Action] 
     , [Definition]
     , [DefinitionDt] )
    SELECT
       @NodeBase + [InstanceName]
     , [SQLCfg].[fLastVersion](@Nodebase + [InstanceName]) + 1
     , 'Remove'
     , 'DELETE [SQLCfg].[tConnection]
WHERE [InstanceName] = ''' + [InstanceName] + '''
AND [EncryptedConnection] = ' + CAST([EncryptedConnection] AS [CHAR] (1)) + ' 
AND [TrustServerCertificate] = ' + CAST([TrustServerCertificate] AS [CHAR] (1)) + ' 
AND [NetworkProtocol] = ''' + ISNULL([NetworkProtocol],'NULL') + ''' 
AND [ConnectionTimeout] = ' + CAST([ConnectionTimeout] AS [CHAR] (10)) + ' 
AND [LoginSecure] = ' + CAST([LoginSecure] AS [CHAR] (1)) + ' 
AND [LoginName] = ''' + ISNULL([LoginName],'NULL') + ''' 
AND [EncryptedPassword] = ' + ISNULL(sys.fn_varbintohexstr([EncryptedPassword]), 'NULL') + '
AND [IsDeleted] = ' + CAST([IsDeleted] AS [CHAR] (1)) + ' 
AND [RecCreatedDt] = ''' + CAST([RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + [RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST([RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + [RecUpdatedUser] + ''''
     , CURRENT_TIMESTAMP
    FROM [deleted] 
    WHERE [InstanceName] NOT IN (SELECT [InstanceName] FROM [inserted]);
   END

  -- updates
  IF @icount = 1 AND @dcount = 1
   BEGIN
    -- if LoginSecure, set login and password to null  
    UPDATE s
    SET [Loginname] = NULL
     , [EncryptedPassword] = NULL 
    FROM [inserted] i
    JOIN [SQLCfg].[tConnection] s
    ON i.[InstanceName] = s.[InstanceName]
    WHERE i.[LoginSecure] = 1 
    AND (   s.[LoginName] IS NOT NULL
         OR s.[EncryptedPassword] IS NOT NULL);

    --- add audit info
    UPDATE c
    SET [RecUpdatedDt] = CURRENT_TIMESTAMP
     , [RecUpdatedUser] = ORIGINAL_LOGIN()
     , [InstanceName] = c.InstanceName 
    FROM [SQLCfg].[tConnection] c
    JOIN [inserted] i 
    ON c.[InstanceName] = i.[InstanceName]
    JOIN [deleted] d
    ON i.[InstanceName] = d.[InstanceName];

    -- record the change
    INSERT [SQLCfg].[tChange]
     ( [Node]
     , [Version]
     , [Action] 
     , [Definition]
     , [DefinitionDt] )
    SELECT
       @NodeBase + i.[InstanceName]
     , [SQLCfg].[fLastVersion](@Nodebase + i.[InstanceName]) + 1
     , 'Modify'
     , 'UPDATE [SQLCfg].[tConnection]
SET [InstanceName] = ''' + i.[InstanceName] + '''
 , [EncryptedConnection] = ' + CAST(i.[EncryptedConnection] AS [CHAR] (1)) + ' 
 , [TrustServerCertificate] = ' + CAST(i.[TrustServerCertificate] AS [CHAR] (1)) + ' 
 , [NetworkProtocol] = ''' + ISNULL(i.[NetworkProtocol],'NULL') + ''' 
 , [ConnectionTimeout] = ' + CAST(i.[ConnectionTimeout] AS [CHAR] (10)) + ' 
 , [LoginSecure] = ' + CAST(i.[LoginSecure] AS [CHAR] (1)) + ' 
 , [LoginName] = ' + ISNULL(i.[LoginName], 'NULL') + ' 
 , [EncryptedPassword] = ' + ISNULL(sys.fn_varbintohexstr(i.[EncryptedPassword]),'NULL') + '
 , [IsDeleted] = ' + CAST(i.[IsDeleted] AS [CHAR] (1)) + ' 
 , [RecCreatedDt] = ''' + CAST(i.[RecCreatedDt] AS [VARCHAR] (20)) + '''
 , [RecCreatedUser] = ''' + i.[RecCreatedUser] + '''
 , [RecUpdatedDt] = ''' + CAST(i.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
 , [RecUpdatedUser] = ''' + i.[RecUpdatedUser] + '''
WHERE [InstanceName] = ''' + d.[InstanceName] + '''
AND [EncryptedConnection] = ' + CAST(d.[EncryptedConnection] AS [CHAR] (1)) + ' 
AND [TrustServerCertificate] = ' + CAST(d.[TrustServerCertificate] AS [CHAR] (1)) + ' 
AND [NetworkProtocol] = ''' + ISNULL(d.[NetworkProtocol],'NULL') + ''' 
AND [ConnectionTimeout] = ' + CAST(d.[ConnectionTimeout] AS [CHAR] (10)) + ' 
AND [LoginSecure] = ' + CAST(d.[LoginSecure] AS [CHAR] (1)) + ' 
AND [LoginName] = ''' + ISNULL(d.[LoginName],'NULL') + ''' 
AND [EncryptedPassword] = ' + ISNULL(sys.fn_varbintohexstr(d.[EncryptedPassword]),'NULL') + ' 
AND [IsDeleted] = ' + CAST(d.[IsDeleted] AS [CHAR] (1)) + ' 
AND [RecCreatedDt] = ''' + CAST(d.[RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + d.[RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST(d.[RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + d.[RecUpdatedUser] + ''''
     , CURRENT_TIMESTAMP
    FROM [inserted] i 
    JOIN [deleted] d
    ON i.[InstanceName] = d.[InstanceName];
   END

  -- inserts
  IF @icount = 1 AND @dcount = 0
   BEGIN

    UPDATE c
    SET [InstanceName] = c.InstanceName 
    FROM [SQLCfg].[tConnection] c
    JOIN [inserted] i 
    ON c.[InstanceName] = i.[InstanceName];
       
    INSERT [SQLCfg].[tChange]
     ( [Node]
     , [Version]
     , [Action] 
     , [Definition]
     , [DefinitionDt] )
    SELECT
       @NodeBase + [InstanceName]
     , [SQLCfg].[fLastVersion](@Nodebase + [InstanceName]) + 1
     , 'Include'
     , 'INSERT [SQLCfg].[tConnection]
 ( [InstanceName]
 , [EncryptedConnection]
 , [TrustServercertificate]
 , [NetworkProtocol]
 , [ConnectionTimeout]
 , [LoginSecure]
 , [LoginName]
 , [EncryptedPassword]
 , [IsDeleted]  
 , [RecCreatedDt] 
 , [RecCreatedUser]
 , [RecUpdatedDt]
 , [RecUpdatedUser])
SELECT [InstanceName] = ''' + [InstanceName] + '''
AND [EncryptedConnection] = ' + CAST([EncryptedConnection] AS [CHAR] (1)) + ' 
AND [TrustServerCertificate] = ' + CAST([TrustServerCertificate] AS [CHAR] (1)) + ' 
AND [NetworkProtocol] = ''' + ISNULL([NetworkProtocol],'NULL') + ''' 
AND [ConnectionTimeout] = ' + CAST([ConnectionTimeout] AS [CHAR] (10)) + ' 
AND [LoginSecure] = ' + CAST([LoginSecure] AS [CHAR] (1)) + ' 
AND [LoginName] = ''' + ISNULL([LoginName],'NULL') + ''' 
AND [EncryptedPassword] = ' + ISNULL(sys.fn_varbintohexstr([EncryptedPassword]),'NULL') + ' 
AND [IsDeleted] = ' + CAST([IsDeleted] AS [CHAR] (1)) + ' 
AND [RecCreatedDt] = ''' + CAST([RecCreatedDt] AS [VARCHAR] (20)) + '''
AND [RecCreatedUser] = ''' + [RecCreatedUser] + '''
AND [RecUpdatedDt] = ''' + CAST([RecUpdatedDt] AS [VARCHAR] (20)) + '''
AND [RecUpdatedUser] = ''' + [RecUpdatedUser] + ''''
     , CURRENT_TIMESTAMP
    FROM [inserted] 
    WHERE [InstanceName] NOT IN (SELECT [InstanceName] FROM [deleted]);
   END

 END TRY

 BEGIN CATCH

   EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH 

END;

GO

/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2009
**
**    Desc: all databases containing archive records on an SQL Server instance    
**       
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**              
*******************************************************************************/
ALTER PROCEDURE [SQLCfg].[pChangeSelectDatabaseListForInstance] 
 ( @SQLInstance [NVARCHAR] (128) )
AS
BEGIN

SELECT DISTINCT [Node].[Database] AS [DatabaseName]
FROM [SQLCfg].[tChange]
WHERE [Node].[SQLInstance] = @SQLInstance
ORDER BY [Node].[Database]

END
GO

/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**    Dec 23,2009    bw                 cascade db delete to all db items
*******************************************************************************/

ALTER TRIGGER [SQLCfg].[trgtChange_Insert_Update_Delete]
ON [SQLCfg].[tChange]
INSTEAD OF INSERT, UPDATE, DELETE
AS
BEGIN
 DECLARE @icount [INT]
  , @dcount [INT]
  , @TextData [VARCHAR] (2048)
  , @ConcatEventData [XML];

 SET NOCOUNT ON;

 BEGIN TRY

  SELECT @icount = COUNT(*) FROM [inserted];
  SELECT @dcount = COUNT(*) FROM [deleted];

  IF (@icount) > 1
  OR (@dcount) > 1
   BEGIN
    SET @TextData = 'Multi-row [SQLCfg].[tChange] operations are not supported. icount=%d; dcount= %d';
    RAISERROR (@TextData, 16,1, @icount, @dcount)
   END;

  IF @icount = 1 AND @dcount = 0
   BEGIN
     -- the application determines if current is duplicate of previous
     -- and also serializes changes
     -- here we just add the definition provided
     INSERT [SQLCfg].[tChange]
      (  [Node]
       , [Version]
       , [Action]
       , [EventData]
       , [Definition]
       , [DefinitionDt] ) 
     SELECT [Node] = ISNULL(i.[Node], 0x0)
       , [Version] = [SQLCfg].[fLastVersion](i.[Node]) + 1 
       , [Action] = i.[Action]
       , [EventData] = i.[EventData]
       , [Defintion] = i.[Definition]
       , [DefinitionDt] = i.[EVENTDATA].value('(/ROOT/EVENT_INSTANCE/PostTime)[1]', 'DATETIME') 
     FROM [inserted] i;     

     -- cascade delete to all items in a db if db is deleted
     IF EXISTS (SELECT * 
                FROM [inserted]
                WHERE [Node].[Collection] = 'Databases'
                AND [Action] = 'Delete') 
       INSERT [SQLCfg].[tChange]
        (  [Node]
         , [Version]
         , [Action]
         , [EventData]
         , [Definition]
         , [DefinitionDt] ) 
       SELECT [Node] = c.[Node]
         , [Version] = c.[Version] + 1 
         , [Action] = i.[Action]
         , [EventData] = ISNULL( i.[EventData]
                               , CAST('<ROOT><EVENT_INSTANCE>Database Dropped</EVENT_INSTANCE></ROOT>' AS XML))
         , [Defintion] = ''
         , [DefinitionDt] = i.[EVENTDATA].value('(/ROOT/EVENT_INSTANCE/PostTime)[1]', 'DATETIME') 
       FROM [SQLCfg].[tChange] c
       JOIN [inserted] i
       ON c.[Node].[Database] = i.[Node].Item
       WHERE c.[Node].[Type] = 'SQLInstance' 
       AND c.[Version] = [SQLCfg].[fLastVersion](c.[Node]);     

   END;  

  -- only update allowed is append to EventData when an event based compare does not detect differences 
  IF @icount = 1 and @dcount = 1
   BEGIN
       -- this is a little loose but better than parsing xml
       -- can't compare 
   	   UPDATE c
	   SET [EventData] = i.[EventData]
		, [Action] = i.[Action]
		, [DefinitionDt] = ISNULL(i.[DefinitionDt], CURRENT_TIMESTAMP) 
	   FROM [SQLCfg].[tChange] c
	   JOIN inserted i
	   ON c.[Id] = i.[Id]
	   WHERE i.[EventData] IS NOT NULL
	   AND (   c.[EventData] IS NULL 
			OR (i.[EventData].value('count(/ROOT/EVENT_INSTANCE)', 'INT') > c.[EventData].value('count(/ROOT/EVENT_INSTANCE)', 'INT')
			    AND i.[EventData].value('count(/ROOT/EVENT_INSTANCE/EVENT_TYPE)[1]', 'NVARCHAR(50)') = c.[EventData].value('count(/ROOT/EVENT_INSTANCE/EVENT_TYPE)[1]', 'INT')))
  END 

  -- no delete
  IF @icount = 0 and @dcount > 0  
   BEGIN
    SET @TextData = '[SQLCfg].[tChange] delete operations are not permitted.';
    RAISERROR (@TextData, 16,1);
   END;

 END TRY 

 BEGIN CATCH

  EXEC [SQLCfg].[pLogSQLError] @TextData, @@PROCID;

 END CATCH 

END;

GO

IF EXISTS ( SELECT * 
            FROM INFORMATION_SCHEMA.ROUTINES 
            WHERE SPECIFIC_SCHEMA = N'SQLCfg'
            AND SPECIFIC_NAME = N'pArchiveLogSelectScheduleHistory' )
 DROP PROCEDURE [SQLCfg].[pArchiveLogSelectScheduleHistory];

GO
/******************************************************************************
**    Auth: Bill Wunder
**    Date: April 1, 2007
**
**    Desc: get the history for a SQL Server
**       
*******************************************************************************
**    Change History
*******************************************************************************
**    Date           Author             Description of Change
**              
*******************************************************************************/

CREATE Procedure [SQLCfg].[pArchiveLogSelectScheduleHistory]
 ( @SQLInstance [NVARCHAR] (128)
 , @BeginDt [DATETIME]
 , @EndDt [DATETIME])
AS
BEGIN

 SET NOCOUNT ON;
 
    SELECT l.[Id] AS [ArchiveLogId]
    , l.[ScheduleId]
    , l.[InstanceName]
    , l.[NbrDDLEventsProcessed]
    , l.[NbrItemsProcessed]
    , l.[NbrItemsAdded]
    , l.[NbrItemsChanged]
    , l.[NbrItemsDeleted]
    , l.[ScheduledStartDt]
    , l.[ActualStartDt]
    , l.[ActualEndDt] 
    , l.[RecCreatedUser]
    , l.[ArchiveError]
    , s1.[Interval]
    , s1.[IntervalType]
    , s1.[IntervalBaseDt]
    , s1.[UseEventNotifications]
    , s1.[IsActive]
   FROM [SQLCfg].[tArchiveLog] l
   JOIN [SQLCfg].[tSchedule] s1
   ON l.[ScheduleId] = s1.[Id] 
   WHERE s1.[InstanceName] = @SQLInstance
   AND (   l.[ScheduledStartDt] BETWEEN @BeginDt AND @EndDt
        OR l.[ActualStartDt]    BETWEEN @BeginDt AND @EndDt); 

END;

GO

GRANT EXECUTE ON [SQLCfg].[pArchiveLogSelectScheduleHistory] TO [SQLCfgReportingRole];

GO

