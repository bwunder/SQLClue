'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.468
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsSQLConfiguration"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsSQLConfiguration
    Inherits Global.System.Data.DataSet
    
    Private tabletSQLCfg As tSQLCfgDataTable
    
    Private tabletServiceSettings As tServiceSettingsDataTable
    
    Private tabletChange As tChangeDataTable
    
    Private tablepChangeActionSummaryByNodeForDays As pChangeActionSummaryByNodeForDaysDataTable
    
    Private tabletConnection As tConnectionDataTable
    
    Private tabletJobServer As tJobServerDataTable
    
    Private tabletInstance As tInstanceDataTable
    
    Private tabletSchedule As tScheduleDataTable
    
    Private tabletServiceBroker As tServiceBrokerDataTable
    
    Private tabletDb As tDbDataTable
    
    Private tablepChangeSelectDefinitionByVersion As pChangeSelectDefinitionByVersionDataTable
    
    Private tablepChangesForArchive As pChangesForArchiveDataTable
    
    Private tablepChangesForDate As pChangesForDateDataTable
    
    Private tabletArchiveLog As tArchiveLogDataTable
    
    Private relationfk_tJobServer__to__tInstance__Name As Global.System.Data.DataRelation
    
    Private relationfk_tInstance__Name__to__tConnection__InstanceName As Global.System.Data.DataRelation
    
    Private relationfk_tSchedule__InstanceName__to__tConnection__InstanceName As Global.System.Data.DataRelation
    
    Private relationfk_tServiceBroker__to__tDB__InstanceName__DBName As Global.System.Data.DataRelation
    
    Private relationfk_tDb__Instance__to__tInstance__Name As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tSQLCfg")) Is Nothing) Then
                MyBase.Tables.Add(New tSQLCfgDataTable(ds.Tables("tSQLCfg")))
            End If
            If (Not (ds.Tables("tServiceSettings")) Is Nothing) Then
                MyBase.Tables.Add(New tServiceSettingsDataTable(ds.Tables("tServiceSettings")))
            End If
            If (Not (ds.Tables("tChange")) Is Nothing) Then
                MyBase.Tables.Add(New tChangeDataTable(ds.Tables("tChange")))
            End If
            If (Not (ds.Tables("pChangeActionSummaryByNodeForDays")) Is Nothing) Then
                MyBase.Tables.Add(New pChangeActionSummaryByNodeForDaysDataTable(ds.Tables("pChangeActionSummaryByNodeForDays")))
            End If
            If (Not (ds.Tables("tConnection")) Is Nothing) Then
                MyBase.Tables.Add(New tConnectionDataTable(ds.Tables("tConnection")))
            End If
            If (Not (ds.Tables("tJobServer")) Is Nothing) Then
                MyBase.Tables.Add(New tJobServerDataTable(ds.Tables("tJobServer")))
            End If
            If (Not (ds.Tables("tInstance")) Is Nothing) Then
                MyBase.Tables.Add(New tInstanceDataTable(ds.Tables("tInstance")))
            End If
            If (Not (ds.Tables("tSchedule")) Is Nothing) Then
                MyBase.Tables.Add(New tScheduleDataTable(ds.Tables("tSchedule")))
            End If
            If (Not (ds.Tables("tServiceBroker")) Is Nothing) Then
                MyBase.Tables.Add(New tServiceBrokerDataTable(ds.Tables("tServiceBroker")))
            End If
            If (Not (ds.Tables("tDb")) Is Nothing) Then
                MyBase.Tables.Add(New tDbDataTable(ds.Tables("tDb")))
            End If
            If (Not (ds.Tables("pChangeSelectDefinitionByVersion")) Is Nothing) Then
                MyBase.Tables.Add(New pChangeSelectDefinitionByVersionDataTable(ds.Tables("pChangeSelectDefinitionByVersion")))
            End If
            If (Not (ds.Tables("pChangesForArchive")) Is Nothing) Then
                MyBase.Tables.Add(New pChangesForArchiveDataTable(ds.Tables("pChangesForArchive")))
            End If
            If (Not (ds.Tables("pChangesForDate")) Is Nothing) Then
                MyBase.Tables.Add(New pChangesForDateDataTable(ds.Tables("pChangesForDate")))
            End If
            If (Not (ds.Tables("tArchiveLog")) Is Nothing) Then
                MyBase.Tables.Add(New tArchiveLogDataTable(ds.Tables("tArchiveLog")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tSQLCfg() As tSQLCfgDataTable
        Get
            Return Me.tabletSQLCfg
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tServiceSettings() As tServiceSettingsDataTable
        Get
            Return Me.tabletServiceSettings
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tChange() As tChangeDataTable
        Get
            Return Me.tabletChange
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property pChangeActionSummaryByNodeForDays() As pChangeActionSummaryByNodeForDaysDataTable
        Get
            Return Me.tablepChangeActionSummaryByNodeForDays
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tConnection() As tConnectionDataTable
        Get
            Return Me.tabletConnection
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tJobServer() As tJobServerDataTable
        Get
            Return Me.tabletJobServer
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tInstance() As tInstanceDataTable
        Get
            Return Me.tabletInstance
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tSchedule() As tScheduleDataTable
        Get
            Return Me.tabletSchedule
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tServiceBroker() As tServiceBrokerDataTable
        Get
            Return Me.tabletServiceBroker
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tDb() As tDbDataTable
        Get
            Return Me.tabletDb
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property pChangeSelectDefinitionByVersion() As pChangeSelectDefinitionByVersionDataTable
        Get
            Return Me.tablepChangeSelectDefinitionByVersion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property pChangesForArchive() As pChangesForArchiveDataTable
        Get
            Return Me.tablepChangesForArchive
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property pChangesForDate() As pChangesForDateDataTable
        Get
            Return Me.tablepChangesForDate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tArchiveLog() As tArchiveLogDataTable
        Get
            Return Me.tabletArchiveLog
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsSQLConfiguration = CType(MyBase.Clone,dsSQLConfiguration)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tSQLCfg")) Is Nothing) Then
                MyBase.Tables.Add(New tSQLCfgDataTable(ds.Tables("tSQLCfg")))
            End If
            If (Not (ds.Tables("tServiceSettings")) Is Nothing) Then
                MyBase.Tables.Add(New tServiceSettingsDataTable(ds.Tables("tServiceSettings")))
            End If
            If (Not (ds.Tables("tChange")) Is Nothing) Then
                MyBase.Tables.Add(New tChangeDataTable(ds.Tables("tChange")))
            End If
            If (Not (ds.Tables("pChangeActionSummaryByNodeForDays")) Is Nothing) Then
                MyBase.Tables.Add(New pChangeActionSummaryByNodeForDaysDataTable(ds.Tables("pChangeActionSummaryByNodeForDays")))
            End If
            If (Not (ds.Tables("tConnection")) Is Nothing) Then
                MyBase.Tables.Add(New tConnectionDataTable(ds.Tables("tConnection")))
            End If
            If (Not (ds.Tables("tJobServer")) Is Nothing) Then
                MyBase.Tables.Add(New tJobServerDataTable(ds.Tables("tJobServer")))
            End If
            If (Not (ds.Tables("tInstance")) Is Nothing) Then
                MyBase.Tables.Add(New tInstanceDataTable(ds.Tables("tInstance")))
            End If
            If (Not (ds.Tables("tSchedule")) Is Nothing) Then
                MyBase.Tables.Add(New tScheduleDataTable(ds.Tables("tSchedule")))
            End If
            If (Not (ds.Tables("tServiceBroker")) Is Nothing) Then
                MyBase.Tables.Add(New tServiceBrokerDataTable(ds.Tables("tServiceBroker")))
            End If
            If (Not (ds.Tables("tDb")) Is Nothing) Then
                MyBase.Tables.Add(New tDbDataTable(ds.Tables("tDb")))
            End If
            If (Not (ds.Tables("pChangeSelectDefinitionByVersion")) Is Nothing) Then
                MyBase.Tables.Add(New pChangeSelectDefinitionByVersionDataTable(ds.Tables("pChangeSelectDefinitionByVersion")))
            End If
            If (Not (ds.Tables("pChangesForArchive")) Is Nothing) Then
                MyBase.Tables.Add(New pChangesForArchiveDataTable(ds.Tables("pChangesForArchive")))
            End If
            If (Not (ds.Tables("pChangesForDate")) Is Nothing) Then
                MyBase.Tables.Add(New pChangesForDateDataTable(ds.Tables("pChangesForDate")))
            End If
            If (Not (ds.Tables("tArchiveLog")) Is Nothing) Then
                MyBase.Tables.Add(New tArchiveLogDataTable(ds.Tables("tArchiveLog")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletSQLCfg = CType(MyBase.Tables("tSQLCfg"),tSQLCfgDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletSQLCfg) Is Nothing) Then
                Me.tabletSQLCfg.InitVars
            End If
        End If
        Me.tabletServiceSettings = CType(MyBase.Tables("tServiceSettings"),tServiceSettingsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletServiceSettings) Is Nothing) Then
                Me.tabletServiceSettings.InitVars
            End If
        End If
        Me.tabletChange = CType(MyBase.Tables("tChange"),tChangeDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletChange) Is Nothing) Then
                Me.tabletChange.InitVars
            End If
        End If
        Me.tablepChangeActionSummaryByNodeForDays = CType(MyBase.Tables("pChangeActionSummaryByNodeForDays"),pChangeActionSummaryByNodeForDaysDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepChangeActionSummaryByNodeForDays) Is Nothing) Then
                Me.tablepChangeActionSummaryByNodeForDays.InitVars
            End If
        End If
        Me.tabletConnection = CType(MyBase.Tables("tConnection"),tConnectionDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletConnection) Is Nothing) Then
                Me.tabletConnection.InitVars
            End If
        End If
        Me.tabletJobServer = CType(MyBase.Tables("tJobServer"),tJobServerDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletJobServer) Is Nothing) Then
                Me.tabletJobServer.InitVars
            End If
        End If
        Me.tabletInstance = CType(MyBase.Tables("tInstance"),tInstanceDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletInstance) Is Nothing) Then
                Me.tabletInstance.InitVars
            End If
        End If
        Me.tabletSchedule = CType(MyBase.Tables("tSchedule"),tScheduleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletSchedule) Is Nothing) Then
                Me.tabletSchedule.InitVars
            End If
        End If
        Me.tabletServiceBroker = CType(MyBase.Tables("tServiceBroker"),tServiceBrokerDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletServiceBroker) Is Nothing) Then
                Me.tabletServiceBroker.InitVars
            End If
        End If
        Me.tabletDb = CType(MyBase.Tables("tDb"),tDbDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletDb) Is Nothing) Then
                Me.tabletDb.InitVars
            End If
        End If
        Me.tablepChangeSelectDefinitionByVersion = CType(MyBase.Tables("pChangeSelectDefinitionByVersion"),pChangeSelectDefinitionByVersionDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepChangeSelectDefinitionByVersion) Is Nothing) Then
                Me.tablepChangeSelectDefinitionByVersion.InitVars
            End If
        End If
        Me.tablepChangesForArchive = CType(MyBase.Tables("pChangesForArchive"),pChangesForArchiveDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepChangesForArchive) Is Nothing) Then
                Me.tablepChangesForArchive.InitVars
            End If
        End If
        Me.tablepChangesForDate = CType(MyBase.Tables("pChangesForDate"),pChangesForDateDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepChangesForDate) Is Nothing) Then
                Me.tablepChangesForDate.InitVars
            End If
        End If
        Me.tabletArchiveLog = CType(MyBase.Tables("tArchiveLog"),tArchiveLogDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletArchiveLog) Is Nothing) Then
                Me.tabletArchiveLog.InitVars
            End If
        End If
        Me.relationfk_tJobServer__to__tInstance__Name = Me.Relations("fk_tJobServer__to__tInstance__Name")
        Me.relationfk_tInstance__Name__to__tConnection__InstanceName = Me.Relations("fk_tInstance__Name__to__tConnection__InstanceName")
        Me.relationfk_tSchedule__InstanceName__to__tConnection__InstanceName = Me.Relations("fk_tSchedule__InstanceName__to__tConnection__InstanceName")
        Me.relationfk_tServiceBroker__to__tDB__InstanceName__DBName = Me.Relations("fk_tServiceBroker__to__tDB__InstanceName__DBName")
        Me.relationfk_tDb__Instance__to__tInstance__Name = Me.Relations("fk_tDb__Instance__to__tInstance__Name")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsSQLConfiguration"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsSQLConfiguration.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletSQLCfg = New tSQLCfgDataTable()
        MyBase.Tables.Add(Me.tabletSQLCfg)
        Me.tabletServiceSettings = New tServiceSettingsDataTable()
        MyBase.Tables.Add(Me.tabletServiceSettings)
        Me.tabletChange = New tChangeDataTable()
        MyBase.Tables.Add(Me.tabletChange)
        Me.tablepChangeActionSummaryByNodeForDays = New pChangeActionSummaryByNodeForDaysDataTable()
        MyBase.Tables.Add(Me.tablepChangeActionSummaryByNodeForDays)
        Me.tabletConnection = New tConnectionDataTable()
        MyBase.Tables.Add(Me.tabletConnection)
        Me.tabletJobServer = New tJobServerDataTable()
        MyBase.Tables.Add(Me.tabletJobServer)
        Me.tabletInstance = New tInstanceDataTable()
        MyBase.Tables.Add(Me.tabletInstance)
        Me.tabletSchedule = New tScheduleDataTable()
        MyBase.Tables.Add(Me.tabletSchedule)
        Me.tabletServiceBroker = New tServiceBrokerDataTable()
        MyBase.Tables.Add(Me.tabletServiceBroker)
        Me.tabletDb = New tDbDataTable()
        MyBase.Tables.Add(Me.tabletDb)
        Me.tablepChangeSelectDefinitionByVersion = New pChangeSelectDefinitionByVersionDataTable()
        MyBase.Tables.Add(Me.tablepChangeSelectDefinitionByVersion)
        Me.tablepChangesForArchive = New pChangesForArchiveDataTable()
        MyBase.Tables.Add(Me.tablepChangesForArchive)
        Me.tablepChangesForDate = New pChangesForDateDataTable()
        MyBase.Tables.Add(Me.tablepChangesForDate)
        Me.tabletArchiveLog = New tArchiveLogDataTable()
        MyBase.Tables.Add(Me.tabletArchiveLog)
        Me.relationfk_tJobServer__to__tInstance__Name = New Global.System.Data.DataRelation("fk_tJobServer__to__tInstance__Name", New Global.System.Data.DataColumn() {Me.tabletInstance.NameColumn}, New Global.System.Data.DataColumn() {Me.tabletJobServer.InstanceNameColumn}, false)
        Me.Relations.Add(Me.relationfk_tJobServer__to__tInstance__Name)
        Me.relationfk_tInstance__Name__to__tConnection__InstanceName = New Global.System.Data.DataRelation("fk_tInstance__Name__to__tConnection__InstanceName", New Global.System.Data.DataColumn() {Me.tabletConnection.InstanceNameColumn}, New Global.System.Data.DataColumn() {Me.tabletInstance.NameColumn}, false)
        Me.Relations.Add(Me.relationfk_tInstance__Name__to__tConnection__InstanceName)
        Me.relationfk_tSchedule__InstanceName__to__tConnection__InstanceName = New Global.System.Data.DataRelation("fk_tSchedule__InstanceName__to__tConnection__InstanceName", New Global.System.Data.DataColumn() {Me.tabletConnection.InstanceNameColumn}, New Global.System.Data.DataColumn() {Me.tabletSchedule.InstanceNameColumn}, false)
        Me.Relations.Add(Me.relationfk_tSchedule__InstanceName__to__tConnection__InstanceName)
        Me.relationfk_tServiceBroker__to__tDB__InstanceName__DBName = New Global.System.Data.DataRelation("fk_tServiceBroker__to__tDB__InstanceName__DBName", New Global.System.Data.DataColumn() {Me.tabletDb.InstanceNameColumn, Me.tabletDb.NameColumn}, New Global.System.Data.DataColumn() {Me.tabletServiceBroker.InstanceNameColumn, Me.tabletServiceBroker.DatabaseNameColumn}, false)
        Me.Relations.Add(Me.relationfk_tServiceBroker__to__tDB__InstanceName__DBName)
        Me.relationfk_tDb__Instance__to__tInstance__Name = New Global.System.Data.DataRelation("fk_tDb__Instance__to__tInstance__Name", New Global.System.Data.DataColumn() {Me.tabletInstance.NameColumn}, New Global.System.Data.DataColumn() {Me.tabletDb.InstanceNameColumn}, false)
        Me.Relations.Add(Me.relationfk_tDb__Instance__to__tInstance__Name)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetSQLCfg() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetServiceSettings() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetChange() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializepChangeActionSummaryByNodeForDays() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetConnection() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetJobServer() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetInstance() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetSchedule() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetServiceBroker() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetDb() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializepChangeSelectDefinitionByVersion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializepChangesForArchive() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializepChangesForDate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetArchiveLog() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tSQLCfgRowChangeEventHandler(ByVal sender As Object, ByVal e As tSQLCfgRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tServiceSettingsRowChangeEventHandler(ByVal sender As Object, ByVal e As tServiceSettingsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tChangeRowChangeEventHandler(ByVal sender As Object, ByVal e As tChangeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub pChangeActionSummaryByNodeForDaysRowChangeEventHandler(ByVal sender As Object, ByVal e As pChangeActionSummaryByNodeForDaysRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tConnectionRowChangeEventHandler(ByVal sender As Object, ByVal e As tConnectionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tJobServerRowChangeEventHandler(ByVal sender As Object, ByVal e As tJobServerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tInstanceRowChangeEventHandler(ByVal sender As Object, ByVal e As tInstanceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tScheduleRowChangeEventHandler(ByVal sender As Object, ByVal e As tScheduleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tServiceBrokerRowChangeEventHandler(ByVal sender As Object, ByVal e As tServiceBrokerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tDbRowChangeEventHandler(ByVal sender As Object, ByVal e As tDbRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub pChangeSelectDefinitionByVersionRowChangeEventHandler(ByVal sender As Object, ByVal e As pChangeSelectDefinitionByVersionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub pChangesForArchiveRowChangeEventHandler(ByVal sender As Object, ByVal e As pChangesForArchiveRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub pChangesForDateRowChangeEventHandler(ByVal sender As Object, ByVal e As pChangesForDateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tArchiveLogRowChangeEventHandler(ByVal sender As Object, ByVal e As tArchiveLogRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tSQLCfgDataTable
        Inherits Global.System.Data.TypedTableBase(Of tSQLCfgRow)
        
        Private columnLicensedCompany As Global.System.Data.DataColumn
        
        Private columnLicensedUser As Global.System.Data.DataColumn
        
        Private columnLicenseCode As Global.System.Data.DataColumn
        
        Private columnLicensedInstanceCount As Global.System.Data.DataColumn
        
        Private columnLicenseDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tSQLCfg"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LicensedCompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLicensedCompany
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LicensedUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLicensedUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LicenseCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLicenseCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LicensedInstanceCountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLicensedInstanceCount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LicenseDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLicenseDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tSQLCfgRow
            Get
                Return CType(Me.Rows(index),tSQLCfgRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tSQLCfgRowChanging As tSQLCfgRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tSQLCfgRowChanged As tSQLCfgRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tSQLCfgRowDeleting As tSQLCfgRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tSQLCfgRowDeleted As tSQLCfgRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtSQLCfgRow(ByVal row As tSQLCfgRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtSQLCfgRow(ByVal LicensedCompany As String, ByVal LicensedUser As String, ByVal LicenseCode As String, ByVal LicensedInstanceCount As Integer, ByVal LicenseDate As String) As tSQLCfgRow
            Dim rowtSQLCfgRow As tSQLCfgRow = CType(Me.NewRow,tSQLCfgRow)
            Dim columnValuesArray() As Object = New Object() {LicensedCompany, LicensedUser, LicenseCode, LicensedInstanceCount, LicenseDate}
            rowtSQLCfgRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtSQLCfgRow)
            Return rowtSQLCfgRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByLicensedCompanyLicensedUserLicenseCode(ByVal LicensedCompany As String, ByVal LicensedUser As String, ByVal LicenseCode As String) As tSQLCfgRow
            Return CType(Me.Rows.Find(New Object() {LicensedCompany, LicensedUser, LicenseCode}),tSQLCfgRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tSQLCfgDataTable = CType(MyBase.Clone,tSQLCfgDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tSQLCfgDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLicensedCompany = MyBase.Columns("LicensedCompany")
            Me.columnLicensedUser = MyBase.Columns("LicensedUser")
            Me.columnLicenseCode = MyBase.Columns("LicenseCode")
            Me.columnLicensedInstanceCount = MyBase.Columns("LicensedInstanceCount")
            Me.columnLicenseDate = MyBase.Columns("LicenseDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLicensedCompany = New Global.System.Data.DataColumn("LicensedCompany", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLicensedCompany)
            Me.columnLicensedUser = New Global.System.Data.DataColumn("LicensedUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLicensedUser)
            Me.columnLicenseCode = New Global.System.Data.DataColumn("LicenseCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLicenseCode)
            Me.columnLicensedInstanceCount = New Global.System.Data.DataColumn("LicensedInstanceCount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLicensedInstanceCount)
            Me.columnLicenseDate = New Global.System.Data.DataColumn("LicenseDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLicenseDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLicensedCompany, Me.columnLicensedUser, Me.columnLicenseCode}, true))
            Me.columnLicensedCompany.AllowDBNull = false
            Me.columnLicensedCompany.MaxLength = 128
            Me.columnLicensedUser.AllowDBNull = false
            Me.columnLicensedUser.MaxLength = 128
            Me.columnLicenseCode.AllowDBNull = false
            Me.columnLicenseCode.MaxLength = 128
            Me.columnLicensedInstanceCount.AllowDBNull = false
            Me.columnLicenseDate.AllowDBNull = false
            Me.columnLicenseDate.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtSQLCfgRow() As tSQLCfgRow
            Return CType(Me.NewRow,tSQLCfgRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tSQLCfgRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tSQLCfgRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tSQLCfgRowChangedEvent) Is Nothing) Then
                RaiseEvent tSQLCfgRowChanged(Me, New tSQLCfgRowChangeEvent(CType(e.Row,tSQLCfgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tSQLCfgRowChangingEvent) Is Nothing) Then
                RaiseEvent tSQLCfgRowChanging(Me, New tSQLCfgRowChangeEvent(CType(e.Row,tSQLCfgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tSQLCfgRowDeletedEvent) Is Nothing) Then
                RaiseEvent tSQLCfgRowDeleted(Me, New tSQLCfgRowChangeEvent(CType(e.Row,tSQLCfgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tSQLCfgRowDeletingEvent) Is Nothing) Then
                RaiseEvent tSQLCfgRowDeleting(Me, New tSQLCfgRowChangeEvent(CType(e.Row,tSQLCfgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetSQLCfgRow(ByVal row As tSQLCfgRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tSQLCfgDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tServiceSettingsDataTable
        Inherits Global.System.Data.TypedTableBase(Of tServiceSettingsRow)
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnAddDatabasesUponDiscovery As Global.System.Data.DataColumn
        
        Private columnTargetEventNotificationDatabase As Global.System.Data.DataColumn
        
        Private columnScripting__Options_Batch__Separator As Global.System.Data.DataColumn
        
        Private columnMisc_Ignore__Blank__Lines As Global.System.Data.DataColumn
        
        Private columnMisc_Display__Output_Show__Comparison__Details As Global.System.Data.DataColumn
        
        Private columnScripting__Options_Include__DROP__In__Script As Global.System.Data.DataColumn
        
        Private columnScripting__Options_Include__IF__EXISTS__With__Drop As Global.System.Data.DataColumn
        
        Private columnMisc_Display__Output_Show__Scripts__For__Unmatched__Items As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_IgnoreCase_5 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_Multiline_7 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_Compiled_1 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_SingleLine_9 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_RightToLeft_8 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_ECMAScript_3 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Regex__Options_CultureInvariant_2 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Pattern_1 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineReplace__Replacement_2 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_IgnoreCase_5 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_Multiline_7 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_Compiled_1 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_SingleLine_9 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_RightToLeft_8 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_ECMAScript_3 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Regex__Options_CultureInvariant_2 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_LineSplit__Pattern_3 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_IgnoreCase_5 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_Multiline_7 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_Compiled_1 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_SingleLine_9 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_RightToLeft_8 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_ECMAScript_3 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Regex__Options_CultureInvariant_2 As Global.System.Data.DataColumn
        
        Private columnRegular__Expressions_NameMatch__Pattern_4 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_AgentAlertJob_1 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_AgentJobId_2 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_AgentNotify_3 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_AllowSystemObjects_10 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_AnsiFile_20 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_AnsiPadding_30 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_Bindings_40 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ClusteredIndexes_50 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ContinueScriptingOnError_60 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DdlBodyOnly_80 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DdlHeaderOnly_90 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_Default_100 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriAll_110 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriAllConstraints_120 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriAllKeys_130 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriChecks_140 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriClustered_150 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriDefaults_160 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriForeignKeys_170 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriIncludeSystemNames_180 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriIndexes_190 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriNonClustered_200 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriPrimaryKey_210 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriUniqueKeys_220 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_DriWithNoCheck_230 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_Encoding_240 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_EnforceScriptingOptions_250 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ExtendedProperties_260 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_FullTextCatalogs_270 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_FullTextindexes_280 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_IncludeDatabaseContext_290 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_IncludeDatabaseRoleMemberships_291 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_IncludeHeaders_300 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_IncludeIfNotExists_301 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_Indexes_310 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_LoginSID_320 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoAssemblies_330 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoCollation_340 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoCommandTerminator_350 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoExecuteAs_360 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoFilegroup_370 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoIdentities_380 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoIndexPartitioningSchemes_390 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoMailProfileAccounts_400 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoMailProfilePrincipals_410 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NonClusteredIndexes_420 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoTablePartitioningSchemes_430 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoVarDecimal_431 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoViewColumns_440 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoXMLNameSpaces_450 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_OptimizerData_460 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_Permissions_470 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_PrimaryObject_480 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_SchemaQualify_490 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_SchemaQualifyForeignKeysReferences_500 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_Statistics_510 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_TimestampToBinary_520 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_TargetServerVersion_530 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_Triggers_540 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_WithDependencies_550 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_XMLIndexes_560 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_BatchSize_35 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ChangeTracking_45 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_FullTextStopLists_285 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_IncludeFullTextCatalogRootPath_295 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoFileStream_373 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_NoFileStreamColumn_376 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ScriptBatchTerminator_502 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ScriptData_503 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ScriptDataCompression_505 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ScriptDrops_506 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ScriptOwner_508 As Global.System.Data.DataColumn
        
        Private columnScripting__Options_SMO_ScriptSchema_509 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tServiceSettings"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddDatabasesUponDiscoveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddDatabasesUponDiscovery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetEventNotificationDatabaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetEventNotificationDatabase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_Batch__SeparatorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_Batch__Separator
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Misc_Ignore__Blank__LinesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMisc_Ignore__Blank__Lines
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Misc_Display__Output_Show__Comparison__DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMisc_Display__Output_Show__Comparison__Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_Include__DROP__In__ScriptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_Include__DROP__In__Script
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_Include__IF__EXISTS__With__DropColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_Include__IF__EXISTS__With__Drop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Misc_Display__Output_Show__Scripts__For__Unmatched__ItemsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMisc_Display__Output_Show__Scripts__For__Unmatched__Items
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnoreCase_5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_Multiline_7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_Multiline_7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_Compiled_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_Compiled_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_SingleLine_9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_SingleLine_9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_RightToLeft_8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_ECMAScript_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Regex__Options_CultureInvariant_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Pattern_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Pattern_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineReplace__Replacement_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineReplace__Replacement_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnoreCase_5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_Multiline_7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_Multiline_7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_Compiled_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_Compiled_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_SingleLine_9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_SingleLine_9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_RightToLeft_8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_ECMAScript_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Regex__Options_CultureInvariant_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_LineSplit__Pattern_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_LineSplit__Pattern_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnoreCase_5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_Multiline_7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_Multiline_7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_Compiled_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_Compiled_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_SingleLine_9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_SingleLine_9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_RightToLeft_8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_ECMAScript_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Regex__Options_CultureInvariant_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Regular__Expressions_NameMatch__Pattern_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular__Expressions_NameMatch__Pattern_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_AgentAlertJob_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_AgentAlertJob_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_AgentJobId_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_AgentJobId_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_AgentNotify_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_AgentNotify_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_AllowSystemObjects_10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_AllowSystemObjects_10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_AnsiFile_20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_AnsiFile_20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_AnsiPadding_30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_AnsiPadding_30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_Bindings_40Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_Bindings_40
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ClusteredIndexes_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ClusteredIndexes_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ContinueScriptingOnError_60Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ContinueScriptingOnError_60
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DdlBodyOnly_80Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DdlBodyOnly_80
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DdlHeaderOnly_90Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DdlHeaderOnly_90
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_Default_100Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_Default_100
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriAll_110Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriAll_110
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriAllConstraints_120Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriAllConstraints_120
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriAllKeys_130Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriAllKeys_130
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriChecks_140Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriChecks_140
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriClustered_150Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriClustered_150
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriDefaults_160Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriDefaults_160
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriForeignKeys_170Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriForeignKeys_170
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriIncludeSystemNames_180Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriIncludeSystemNames_180
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriIndexes_190Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriIndexes_190
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriNonClustered_200Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriNonClustered_200
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriPrimaryKey_210Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriPrimaryKey_210
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriUniqueKeys_220Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriUniqueKeys_220
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_DriWithNoCheck_230Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_DriWithNoCheck_230
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_Encoding_240Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_Encoding_240
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_EnforceScriptingOptions_250Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_EnforceScriptingOptions_250
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ExtendedProperties_260Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ExtendedProperties_260
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_FullTextCatalogs_270Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_FullTextCatalogs_270
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_FullTextindexes_280Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_FullTextindexes_280
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_IncludeDatabaseContext_290Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_IncludeDatabaseContext_290
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_IncludeDatabaseRoleMemberships_291
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_IncludeHeaders_300Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_IncludeHeaders_300
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_IncludeIfNotExists_301Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_IncludeIfNotExists_301
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_Indexes_310Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_Indexes_310
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_LoginSID_320Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_LoginSID_320
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoAssemblies_330Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoAssemblies_330
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoCollation_340Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoCollation_340
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoCommandTerminator_350Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoCommandTerminator_350
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoExecuteAs_360Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoExecuteAs_360
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoFilegroup_370Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoFilegroup_370
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoIdentities_380Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoIdentities_380
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoIndexPartitioningSchemes_390Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoIndexPartitioningSchemes_390
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoMailProfileAccounts_400Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoMailProfileAccounts_400
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoMailProfilePrincipals_410Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoMailProfilePrincipals_410
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NonClusteredIndexes_420Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NonClusteredIndexes_420
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoTablePartitioningSchemes_430Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoTablePartitioningSchemes_430
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoVarDecimal_431Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoVarDecimal_431
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoViewColumns_440Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoViewColumns_440
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoXMLNameSpaces_450Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoXMLNameSpaces_450
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_OptimizerData_460Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_OptimizerData_460
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_Permissions_470Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_Permissions_470
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_PrimaryObject_480Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_PrimaryObject_480
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_SchemaQualify_490Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_SchemaQualify_490
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_SchemaQualifyForeignKeysReferences_500
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_Statistics_510Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_Statistics_510
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_TimestampToBinary_520Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_TimestampToBinary_520
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_TargetServerVersion_530Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_TargetServerVersion_530
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_Triggers_540Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_Triggers_540
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_WithDependencies_550Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_WithDependencies_550
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_XMLIndexes_560Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_XMLIndexes_560
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_BatchSize_35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_BatchSize_35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ChangeTracking_45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ChangeTracking_45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_FullTextStopLists_285Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_FullTextStopLists_285
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_IncludeFullTextCatalogRootPath_295
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoFileStream_373Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoFileStream_373
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_NoFileStreamColumn_376Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_NoFileStreamColumn_376
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ScriptBatchTerminator_502Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ScriptBatchTerminator_502
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ScriptData_503Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ScriptData_503
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ScriptDataCompression_505Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ScriptDataCompression_505
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ScriptDrops_506Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ScriptDrops_506
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ScriptOwner_508Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ScriptOwner_508
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Scripting__Options_SMO_ScriptSchema_509Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScripting__Options_SMO_ScriptSchema_509
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tServiceSettingsRow
            Get
                Return CType(Me.Rows(index),tServiceSettingsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceSettingsRowChanging As tServiceSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceSettingsRowChanged As tServiceSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceSettingsRowDeleting As tServiceSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceSettingsRowDeleted As tServiceSettingsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtServiceSettingsRow(ByVal row As tServiceSettingsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtServiceSettingsRow( _
                    ByVal Name As String,  _
                    ByVal AddDatabasesUponDiscovery As Boolean,  _
                    ByVal TargetEventNotificationDatabase As String,  _
                    ByVal Scripting__Options_Batch__Separator As String,  _
                    ByVal Misc_Ignore__Blank__Lines As Boolean,  _
                    ByVal Misc_Display__Output_Show__Comparison__Details As Boolean,  _
                    ByVal Scripting__Options_Include__DROP__In__Script As Boolean,  _
                    ByVal Scripting__Options_Include__IF__EXISTS__With__Drop As Boolean,  _
                    ByVal Misc_Display__Output_Show__Scripts__For__Unmatched__Items As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_Multiline_7 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_Compiled_1 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_SingleLine_9 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2 As Boolean,  _
                    ByVal Regular__Expressions_LineReplace__Pattern_1 As String,  _
                    ByVal Regular__Expressions_LineReplace__Replacement_2 As String,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_Multiline_7 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_Compiled_1 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_SingleLine_9 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2 As Boolean,  _
                    ByVal Regular__Expressions_LineSplit__Pattern_3 As String,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_Multiline_7 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_Compiled_1 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_SingleLine_9 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2 As Boolean,  _
                    ByVal Regular__Expressions_NameMatch__Pattern_4 As String,  _
                    ByVal Scripting__Options_SMO_AgentAlertJob_1 As Boolean,  _
                    ByVal Scripting__Options_SMO_AgentJobId_2 As Boolean,  _
                    ByVal Scripting__Options_SMO_AgentNotify_3 As Boolean,  _
                    ByVal Scripting__Options_SMO_AllowSystemObjects_10 As Boolean,  _
                    ByVal Scripting__Options_SMO_AnsiFile_20 As Boolean,  _
                    ByVal Scripting__Options_SMO_AnsiPadding_30 As Boolean,  _
                    ByVal Scripting__Options_SMO_Bindings_40 As Boolean,  _
                    ByVal Scripting__Options_SMO_ClusteredIndexes_50 As Boolean,  _
                    ByVal Scripting__Options_SMO_ContinueScriptingOnError_60 As Boolean,  _
                    ByVal Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70 As Boolean,  _
                    ByVal Scripting__Options_SMO_DdlBodyOnly_80 As Boolean,  _
                    ByVal Scripting__Options_SMO_DdlHeaderOnly_90 As Boolean,  _
                    ByVal Scripting__Options_SMO_Default_100 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriAll_110 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriAllConstraints_120 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriAllKeys_130 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriChecks_140 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriClustered_150 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriDefaults_160 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriForeignKeys_170 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriIncludeSystemNames_180 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriIndexes_190 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriNonClustered_200 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriPrimaryKey_210 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriUniqueKeys_220 As Boolean,  _
                    ByVal Scripting__Options_SMO_DriWithNoCheck_230 As Boolean,  _
                    ByVal Scripting__Options_SMO_Encoding_240 As String,  _
                    ByVal Scripting__Options_SMO_EnforceScriptingOptions_250 As Boolean,  _
                    ByVal Scripting__Options_SMO_ExtendedProperties_260 As Boolean,  _
                    ByVal Scripting__Options_SMO_FullTextCatalogs_270 As Boolean,  _
                    ByVal Scripting__Options_SMO_FullTextindexes_280 As Boolean,  _
                    ByVal Scripting__Options_SMO_IncludeDatabaseContext_290 As Boolean,  _
                    ByVal Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291 As Boolean,  _
                    ByVal Scripting__Options_SMO_IncludeHeaders_300 As Boolean,  _
                    ByVal Scripting__Options_SMO_IncludeIfNotExists_301 As Boolean,  _
                    ByVal Scripting__Options_SMO_Indexes_310 As Boolean,  _
                    ByVal Scripting__Options_SMO_LoginSID_320 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoAssemblies_330 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoCollation_340 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoCommandTerminator_350 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoExecuteAs_360 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoFilegroup_370 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoIdentities_380 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoIndexPartitioningSchemes_390 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoMailProfileAccounts_400 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoMailProfilePrincipals_410 As Boolean,  _
                    ByVal Scripting__Options_SMO_NonClusteredIndexes_420 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoTablePartitioningSchemes_430 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoVarDecimal_431 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoViewColumns_440 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoXMLNameSpaces_450 As Boolean,  _
                    ByVal Scripting__Options_SMO_OptimizerData_460 As Boolean,  _
                    ByVal Scripting__Options_SMO_Permissions_470 As Boolean,  _
                    ByVal Scripting__Options_SMO_PrimaryObject_480 As Boolean,  _
                    ByVal Scripting__Options_SMO_SchemaQualify_490 As Boolean,  _
                    ByVal Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500 As Boolean,  _
                    ByVal Scripting__Options_SMO_Statistics_510 As Boolean,  _
                    ByVal Scripting__Options_SMO_TimestampToBinary_520 As Boolean,  _
                    ByVal Scripting__Options_SMO_TargetServerVersion_530 As Integer,  _
                    ByVal Scripting__Options_SMO_Triggers_540 As Boolean,  _
                    ByVal Scripting__Options_SMO_WithDependencies_550 As Boolean,  _
                    ByVal Scripting__Options_SMO_XMLIndexes_560 As Boolean,  _
                    ByVal Scripting__Options_SMO_BatchSize_35 As Integer,  _
                    ByVal Scripting__Options_SMO_ChangeTracking_45 As Boolean,  _
                    ByVal Scripting__Options_SMO_FullTextStopLists_285 As Boolean,  _
                    ByVal Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoFileStream_373 As Boolean,  _
                    ByVal Scripting__Options_SMO_NoFileStreamColumn_376 As Boolean,  _
                    ByVal Scripting__Options_SMO_ScriptBatchTerminator_502 As Boolean,  _
                    ByVal Scripting__Options_SMO_ScriptData_503 As Boolean,  _
                    ByVal Scripting__Options_SMO_ScriptDataCompression_505 As Boolean,  _
                    ByVal Scripting__Options_SMO_ScriptDrops_506 As Boolean,  _
                    ByVal Scripting__Options_SMO_ScriptOwner_508 As Boolean,  _
                    ByVal Scripting__Options_SMO_ScriptSchema_509 As Boolean) As tServiceSettingsRow
            Dim rowtServiceSettingsRow As tServiceSettingsRow = CType(Me.NewRow,tServiceSettingsRow)
            Dim columnValuesArray() As Object = New Object() {Name, AddDatabasesUponDiscovery, TargetEventNotificationDatabase, Scripting__Options_Batch__Separator, Misc_Ignore__Blank__Lines, Misc_Display__Output_Show__Comparison__Details, Scripting__Options_Include__DROP__In__Script, Scripting__Options_Include__IF__EXISTS__With__Drop, Misc_Display__Output_Show__Scripts__For__Unmatched__Items, Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5, Regular__Expressions_LineReplace__Regex__Options_Multiline_7, Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4, Regular__Expressions_LineReplace__Regex__Options_Compiled_1, Regular__Expressions_LineReplace__Regex__Options_SingleLine_9, Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6, Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8, Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3, Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2, Regular__Expressions_LineReplace__Pattern_1, Regular__Expressions_LineReplace__Replacement_2, Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5, Regular__Expressions_LineSplit__Regex__Options_Multiline_7, Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4, Regular__Expressions_LineSplit__Regex__Options_Compiled_1, Regular__Expressions_LineSplit__Regex__Options_SingleLine_9, Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6, Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8, Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3, Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2, Regular__Expressions_LineSplit__Pattern_3, Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5, Regular__Expressions_NameMatch__Regex__Options_Multiline_7, Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4, Regular__Expressions_NameMatch__Regex__Options_Compiled_1, Regular__Expressions_NameMatch__Regex__Options_SingleLine_9, Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6, Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8, Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3, Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2, Regular__Expressions_NameMatch__Pattern_4, Scripting__Options_SMO_AgentAlertJob_1, Scripting__Options_SMO_AgentJobId_2, Scripting__Options_SMO_AgentNotify_3, Scripting__Options_SMO_AllowSystemObjects_10, Scripting__Options_SMO_AnsiFile_20, Scripting__Options_SMO_AnsiPadding_30, Scripting__Options_SMO_Bindings_40, Scripting__Options_SMO_ClusteredIndexes_50, Scripting__Options_SMO_ContinueScriptingOnError_60, Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70, Scripting__Options_SMO_DdlBodyOnly_80, Scripting__Options_SMO_DdlHeaderOnly_90, Scripting__Options_SMO_Default_100, Scripting__Options_SMO_DriAll_110, Scripting__Options_SMO_DriAllConstraints_120, Scripting__Options_SMO_DriAllKeys_130, Scripting__Options_SMO_DriChecks_140, Scripting__Options_SMO_DriClustered_150, Scripting__Options_SMO_DriDefaults_160, Scripting__Options_SMO_DriForeignKeys_170, Scripting__Options_SMO_DriIncludeSystemNames_180, Scripting__Options_SMO_DriIndexes_190, Scripting__Options_SMO_DriNonClustered_200, Scripting__Options_SMO_DriPrimaryKey_210, Scripting__Options_SMO_DriUniqueKeys_220, Scripting__Options_SMO_DriWithNoCheck_230, Scripting__Options_SMO_Encoding_240, Scripting__Options_SMO_EnforceScriptingOptions_250, Scripting__Options_SMO_ExtendedProperties_260, Scripting__Options_SMO_FullTextCatalogs_270, Scripting__Options_SMO_FullTextindexes_280, Scripting__Options_SMO_IncludeDatabaseContext_290, Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291, Scripting__Options_SMO_IncludeHeaders_300, Scripting__Options_SMO_IncludeIfNotExists_301, Scripting__Options_SMO_Indexes_310, Scripting__Options_SMO_LoginSID_320, Scripting__Options_SMO_NoAssemblies_330, Scripting__Options_SMO_NoCollation_340, Scripting__Options_SMO_NoCommandTerminator_350, Scripting__Options_SMO_NoExecuteAs_360, Scripting__Options_SMO_NoFilegroup_370, Scripting__Options_SMO_NoIdentities_380, Scripting__Options_SMO_NoIndexPartitioningSchemes_390, Scripting__Options_SMO_NoMailProfileAccounts_400, Scripting__Options_SMO_NoMailProfilePrincipals_410, Scripting__Options_SMO_NonClusteredIndexes_420, Scripting__Options_SMO_NoTablePartitioningSchemes_430, Scripting__Options_SMO_NoVarDecimal_431, Scripting__Options_SMO_NoViewColumns_440, Scripting__Options_SMO_NoXMLNameSpaces_450, Scripting__Options_SMO_OptimizerData_460, Scripting__Options_SMO_Permissions_470, Scripting__Options_SMO_PrimaryObject_480, Scripting__Options_SMO_SchemaQualify_490, Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500, Scripting__Options_SMO_Statistics_510, Scripting__Options_SMO_TimestampToBinary_520, Scripting__Options_SMO_TargetServerVersion_530, Scripting__Options_SMO_Triggers_540, Scripting__Options_SMO_WithDependencies_550, Scripting__Options_SMO_XMLIndexes_560, Scripting__Options_SMO_BatchSize_35, Scripting__Options_SMO_ChangeTracking_45, Scripting__Options_SMO_FullTextStopLists_285, Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295, Scripting__Options_SMO_NoFileStream_373, Scripting__Options_SMO_NoFileStreamColumn_376, Scripting__Options_SMO_ScriptBatchTerminator_502, Scripting__Options_SMO_ScriptData_503, Scripting__Options_SMO_ScriptDataCompression_505, Scripting__Options_SMO_ScriptDrops_506, Scripting__Options_SMO_ScriptOwner_508, Scripting__Options_SMO_ScriptSchema_509}
            rowtServiceSettingsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtServiceSettingsRow)
            Return rowtServiceSettingsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByName(ByVal Name As String) As tServiceSettingsRow
            Return CType(Me.Rows.Find(New Object() {Name}),tServiceSettingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tServiceSettingsDataTable = CType(MyBase.Clone,tServiceSettingsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tServiceSettingsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnName = MyBase.Columns("Name")
            Me.columnAddDatabasesUponDiscovery = MyBase.Columns("AddDatabasesUponDiscovery")
            Me.columnTargetEventNotificationDatabase = MyBase.Columns("TargetEventNotificationDatabase")
            Me.columnScripting__Options_Batch__Separator = MyBase.Columns("Scripting__Options_Batch__Separator")
            Me.columnMisc_Ignore__Blank__Lines = MyBase.Columns("Misc_Ignore__Blank__Lines")
            Me.columnMisc_Display__Output_Show__Comparison__Details = MyBase.Columns("Misc_Display__Output_Show__Comparison__Details")
            Me.columnScripting__Options_Include__DROP__In__Script = MyBase.Columns("Scripting__Options_Include__DROP__In__Script")
            Me.columnScripting__Options_Include__IF__EXISTS__With__Drop = MyBase.Columns("Scripting__Options_Include__IF__EXISTS__With__Drop")
            Me.columnMisc_Display__Output_Show__Scripts__For__Unmatched__Items = MyBase.Columns("Misc_Display__Output_Show__Scripts__For__Unmatched__Items")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnoreCase_5 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_Multiline_7 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_Multiline_7")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_Compiled_1 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_Compiled_1")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_SingleLine_9 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_SingleLine_9")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_RightToLeft_8 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_ECMAScript_3 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3")
            Me.columnRegular__Expressions_LineReplace__Regex__Options_CultureInvariant_2 = MyBase.Columns("Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2")
            Me.columnRegular__Expressions_LineReplace__Pattern_1 = MyBase.Columns("Regular__Expressions_LineReplace__Pattern_1")
            Me.columnRegular__Expressions_LineReplace__Replacement_2 = MyBase.Columns("Regular__Expressions_LineReplace__Replacement_2")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnoreCase_5 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_Multiline_7 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_Multiline_7")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_Compiled_1 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_Compiled_1")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_SingleLine_9 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_SingleLine_9")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_RightToLeft_8 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_ECMAScript_3 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3")
            Me.columnRegular__Expressions_LineSplit__Regex__Options_CultureInvariant_2 = MyBase.Columns("Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2")
            Me.columnRegular__Expressions_LineSplit__Pattern_3 = MyBase.Columns("Regular__Expressions_LineSplit__Pattern_3")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnoreCase_5 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_Multiline_7 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_Multiline_7")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_Compiled_1 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_Compiled_1")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_SingleLine_9 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_SingleLine_9")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_RightToLeft_8 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_ECMAScript_3 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3")
            Me.columnRegular__Expressions_NameMatch__Regex__Options_CultureInvariant_2 = MyBase.Columns("Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2")
            Me.columnRegular__Expressions_NameMatch__Pattern_4 = MyBase.Columns("Regular__Expressions_NameMatch__Pattern_4")
            Me.columnScripting__Options_SMO_AgentAlertJob_1 = MyBase.Columns("Scripting__Options_SMO_AgentAlertJob_1")
            Me.columnScripting__Options_SMO_AgentJobId_2 = MyBase.Columns("Scripting__Options_SMO_AgentJobId_2")
            Me.columnScripting__Options_SMO_AgentNotify_3 = MyBase.Columns("Scripting__Options_SMO_AgentNotify_3")
            Me.columnScripting__Options_SMO_AllowSystemObjects_10 = MyBase.Columns("Scripting__Options_SMO_AllowSystemObjects_10")
            Me.columnScripting__Options_SMO_AnsiFile_20 = MyBase.Columns("Scripting__Options_SMO_AnsiFile_20")
            Me.columnScripting__Options_SMO_AnsiPadding_30 = MyBase.Columns("Scripting__Options_SMO_AnsiPadding_30")
            Me.columnScripting__Options_SMO_Bindings_40 = MyBase.Columns("Scripting__Options_SMO_Bindings_40")
            Me.columnScripting__Options_SMO_ClusteredIndexes_50 = MyBase.Columns("Scripting__Options_SMO_ClusteredIndexes_50")
            Me.columnScripting__Options_SMO_ContinueScriptingOnError_60 = MyBase.Columns("Scripting__Options_SMO_ContinueScriptingOnError_60")
            Me.columnScripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70 = MyBase.Columns("Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70")
            Me.columnScripting__Options_SMO_DdlBodyOnly_80 = MyBase.Columns("Scripting__Options_SMO_DdlBodyOnly_80")
            Me.columnScripting__Options_SMO_DdlHeaderOnly_90 = MyBase.Columns("Scripting__Options_SMO_DdlHeaderOnly_90")
            Me.columnScripting__Options_SMO_Default_100 = MyBase.Columns("Scripting__Options_SMO_Default_100")
            Me.columnScripting__Options_SMO_DriAll_110 = MyBase.Columns("Scripting__Options_SMO_DriAll_110")
            Me.columnScripting__Options_SMO_DriAllConstraints_120 = MyBase.Columns("Scripting__Options_SMO_DriAllConstraints_120")
            Me.columnScripting__Options_SMO_DriAllKeys_130 = MyBase.Columns("Scripting__Options_SMO_DriAllKeys_130")
            Me.columnScripting__Options_SMO_DriChecks_140 = MyBase.Columns("Scripting__Options_SMO_DriChecks_140")
            Me.columnScripting__Options_SMO_DriClustered_150 = MyBase.Columns("Scripting__Options_SMO_DriClustered_150")
            Me.columnScripting__Options_SMO_DriDefaults_160 = MyBase.Columns("Scripting__Options_SMO_DriDefaults_160")
            Me.columnScripting__Options_SMO_DriForeignKeys_170 = MyBase.Columns("Scripting__Options_SMO_DriForeignKeys_170")
            Me.columnScripting__Options_SMO_DriIncludeSystemNames_180 = MyBase.Columns("Scripting__Options_SMO_DriIncludeSystemNames_180")
            Me.columnScripting__Options_SMO_DriIndexes_190 = MyBase.Columns("Scripting__Options_SMO_DriIndexes_190")
            Me.columnScripting__Options_SMO_DriNonClustered_200 = MyBase.Columns("Scripting__Options_SMO_DriNonClustered_200")
            Me.columnScripting__Options_SMO_DriPrimaryKey_210 = MyBase.Columns("Scripting__Options_SMO_DriPrimaryKey_210")
            Me.columnScripting__Options_SMO_DriUniqueKeys_220 = MyBase.Columns("Scripting__Options_SMO_DriUniqueKeys_220")
            Me.columnScripting__Options_SMO_DriWithNoCheck_230 = MyBase.Columns("Scripting__Options_SMO_DriWithNoCheck_230")
            Me.columnScripting__Options_SMO_Encoding_240 = MyBase.Columns("Scripting__Options_SMO_Encoding_240")
            Me.columnScripting__Options_SMO_EnforceScriptingOptions_250 = MyBase.Columns("Scripting__Options_SMO_EnforceScriptingOptions_250")
            Me.columnScripting__Options_SMO_ExtendedProperties_260 = MyBase.Columns("Scripting__Options_SMO_ExtendedProperties_260")
            Me.columnScripting__Options_SMO_FullTextCatalogs_270 = MyBase.Columns("Scripting__Options_SMO_FullTextCatalogs_270")
            Me.columnScripting__Options_SMO_FullTextindexes_280 = MyBase.Columns("Scripting__Options_SMO_FullTextindexes_280")
            Me.columnScripting__Options_SMO_IncludeDatabaseContext_290 = MyBase.Columns("Scripting__Options_SMO_IncludeDatabaseContext_290")
            Me.columnScripting__Options_SMO_IncludeDatabaseRoleMemberships_291 = MyBase.Columns("Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291")
            Me.columnScripting__Options_SMO_IncludeHeaders_300 = MyBase.Columns("Scripting__Options_SMO_IncludeHeaders_300")
            Me.columnScripting__Options_SMO_IncludeIfNotExists_301 = MyBase.Columns("Scripting__Options_SMO_IncludeIfNotExists_301")
            Me.columnScripting__Options_SMO_Indexes_310 = MyBase.Columns("Scripting__Options_SMO_Indexes_310")
            Me.columnScripting__Options_SMO_LoginSID_320 = MyBase.Columns("Scripting__Options_SMO_LoginSID_320")
            Me.columnScripting__Options_SMO_NoAssemblies_330 = MyBase.Columns("Scripting__Options_SMO_NoAssemblies_330")
            Me.columnScripting__Options_SMO_NoCollation_340 = MyBase.Columns("Scripting__Options_SMO_NoCollation_340")
            Me.columnScripting__Options_SMO_NoCommandTerminator_350 = MyBase.Columns("Scripting__Options_SMO_NoCommandTerminator_350")
            Me.columnScripting__Options_SMO_NoExecuteAs_360 = MyBase.Columns("Scripting__Options_SMO_NoExecuteAs_360")
            Me.columnScripting__Options_SMO_NoFilegroup_370 = MyBase.Columns("Scripting__Options_SMO_NoFilegroup_370")
            Me.columnScripting__Options_SMO_NoIdentities_380 = MyBase.Columns("Scripting__Options_SMO_NoIdentities_380")
            Me.columnScripting__Options_SMO_NoIndexPartitioningSchemes_390 = MyBase.Columns("Scripting__Options_SMO_NoIndexPartitioningSchemes_390")
            Me.columnScripting__Options_SMO_NoMailProfileAccounts_400 = MyBase.Columns("Scripting__Options_SMO_NoMailProfileAccounts_400")
            Me.columnScripting__Options_SMO_NoMailProfilePrincipals_410 = MyBase.Columns("Scripting__Options_SMO_NoMailProfilePrincipals_410")
            Me.columnScripting__Options_SMO_NonClusteredIndexes_420 = MyBase.Columns("Scripting__Options_SMO_NonClusteredIndexes_420")
            Me.columnScripting__Options_SMO_NoTablePartitioningSchemes_430 = MyBase.Columns("Scripting__Options_SMO_NoTablePartitioningSchemes_430")
            Me.columnScripting__Options_SMO_NoVarDecimal_431 = MyBase.Columns("Scripting__Options_SMO_NoVarDecimal_431")
            Me.columnScripting__Options_SMO_NoViewColumns_440 = MyBase.Columns("Scripting__Options_SMO_NoViewColumns_440")
            Me.columnScripting__Options_SMO_NoXMLNameSpaces_450 = MyBase.Columns("Scripting__Options_SMO_NoXMLNameSpaces_450")
            Me.columnScripting__Options_SMO_OptimizerData_460 = MyBase.Columns("Scripting__Options_SMO_OptimizerData_460")
            Me.columnScripting__Options_SMO_Permissions_470 = MyBase.Columns("Scripting__Options_SMO_Permissions_470")
            Me.columnScripting__Options_SMO_PrimaryObject_480 = MyBase.Columns("Scripting__Options_SMO_PrimaryObject_480")
            Me.columnScripting__Options_SMO_SchemaQualify_490 = MyBase.Columns("Scripting__Options_SMO_SchemaQualify_490")
            Me.columnScripting__Options_SMO_SchemaQualifyForeignKeysReferences_500 = MyBase.Columns("Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500")
            Me.columnScripting__Options_SMO_Statistics_510 = MyBase.Columns("Scripting__Options_SMO_Statistics_510")
            Me.columnScripting__Options_SMO_TimestampToBinary_520 = MyBase.Columns("Scripting__Options_SMO_TimestampToBinary_520")
            Me.columnScripting__Options_SMO_TargetServerVersion_530 = MyBase.Columns("Scripting__Options_SMO_TargetServerVersion_530")
            Me.columnScripting__Options_SMO_Triggers_540 = MyBase.Columns("Scripting__Options_SMO_Triggers_540")
            Me.columnScripting__Options_SMO_WithDependencies_550 = MyBase.Columns("Scripting__Options_SMO_WithDependencies_550")
            Me.columnScripting__Options_SMO_XMLIndexes_560 = MyBase.Columns("Scripting__Options_SMO_XMLIndexes_560")
            Me.columnScripting__Options_SMO_BatchSize_35 = MyBase.Columns("Scripting__Options_SMO_BatchSize_35")
            Me.columnScripting__Options_SMO_ChangeTracking_45 = MyBase.Columns("Scripting__Options_SMO_ChangeTracking_45")
            Me.columnScripting__Options_SMO_FullTextStopLists_285 = MyBase.Columns("Scripting__Options_SMO_FullTextStopLists_285")
            Me.columnScripting__Options_SMO_IncludeFullTextCatalogRootPath_295 = MyBase.Columns("Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295")
            Me.columnScripting__Options_SMO_NoFileStream_373 = MyBase.Columns("Scripting__Options_SMO_NoFileStream_373")
            Me.columnScripting__Options_SMO_NoFileStreamColumn_376 = MyBase.Columns("Scripting__Options_SMO_NoFileStreamColumn_376")
            Me.columnScripting__Options_SMO_ScriptBatchTerminator_502 = MyBase.Columns("Scripting__Options_SMO_ScriptBatchTerminator_502")
            Me.columnScripting__Options_SMO_ScriptData_503 = MyBase.Columns("Scripting__Options_SMO_ScriptData_503")
            Me.columnScripting__Options_SMO_ScriptDataCompression_505 = MyBase.Columns("Scripting__Options_SMO_ScriptDataCompression_505")
            Me.columnScripting__Options_SMO_ScriptDrops_506 = MyBase.Columns("Scripting__Options_SMO_ScriptDrops_506")
            Me.columnScripting__Options_SMO_ScriptOwner_508 = MyBase.Columns("Scripting__Options_SMO_ScriptOwner_508")
            Me.columnScripting__Options_SMO_ScriptSchema_509 = MyBase.Columns("Scripting__Options_SMO_ScriptSchema_509")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnAddDatabasesUponDiscovery = New Global.System.Data.DataColumn("AddDatabasesUponDiscovery", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddDatabasesUponDiscovery)
            Me.columnTargetEventNotificationDatabase = New Global.System.Data.DataColumn("TargetEventNotificationDatabase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetEventNotificationDatabase)
            Me.columnScripting__Options_Batch__Separator = New Global.System.Data.DataColumn("Scripting__Options_Batch__Separator", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_Batch__Separator)
            Me.columnMisc_Ignore__Blank__Lines = New Global.System.Data.DataColumn("Misc_Ignore__Blank__Lines", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMisc_Ignore__Blank__Lines)
            Me.columnMisc_Display__Output_Show__Comparison__Details = New Global.System.Data.DataColumn("Misc_Display__Output_Show__Comparison__Details", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMisc_Display__Output_Show__Comparison__Details)
            Me.columnScripting__Options_Include__DROP__In__Script = New Global.System.Data.DataColumn("Scripting__Options_Include__DROP__In__Script", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_Include__DROP__In__Script)
            Me.columnScripting__Options_Include__IF__EXISTS__With__Drop = New Global.System.Data.DataColumn("Scripting__Options_Include__IF__EXISTS__With__Drop", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_Include__IF__EXISTS__With__Drop)
            Me.columnMisc_Display__Output_Show__Scripts__For__Unmatched__Items = New Global.System.Data.DataColumn("Misc_Display__Output_Show__Scripts__For__Unmatched__Items", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMisc_Display__Output_Show__Scripts__For__Unmatched__Items)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnoreCase_5 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnoreCase_5)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_Multiline_7 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_Multiline_7", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_Multiline_7)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_Compiled_1 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_Compiled_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_Compiled_1)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_SingleLine_9 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_SingleLine_9", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_SingleLine_9)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_RightToLeft_8 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_RightToLeft_8)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_ECMAScript_3 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_ECMAScript_3)
            Me.columnRegular__Expressions_LineReplace__Regex__Options_CultureInvariant_2 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Regex__Options_CultureInvariant_2)
            Me.columnRegular__Expressions_LineReplace__Pattern_1 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Pattern_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Pattern_1)
            Me.columnRegular__Expressions_LineReplace__Replacement_2 = New Global.System.Data.DataColumn("Regular__Expressions_LineReplace__Replacement_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineReplace__Replacement_2)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnoreCase_5 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnoreCase_5)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_Multiline_7 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_Multiline_7", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_Multiline_7)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_Compiled_1 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_Compiled_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_Compiled_1)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_SingleLine_9 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_SingleLine_9", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_SingleLine_9)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_RightToLeft_8 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_RightToLeft_8)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_ECMAScript_3 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_ECMAScript_3)
            Me.columnRegular__Expressions_LineSplit__Regex__Options_CultureInvariant_2 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Regex__Options_CultureInvariant_2)
            Me.columnRegular__Expressions_LineSplit__Pattern_3 = New Global.System.Data.DataColumn("Regular__Expressions_LineSplit__Pattern_3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_LineSplit__Pattern_3)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnoreCase_5 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnoreCase_5)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_Multiline_7 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_Multiline_7", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_Multiline_7)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_Compiled_1 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_Compiled_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_Compiled_1)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_SingleLine_9 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_SingleLine_9", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_SingleLine_9)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_RightToLeft_8 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_RightToLeft_8)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_ECMAScript_3 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_ECMAScript_3)
            Me.columnRegular__Expressions_NameMatch__Regex__Options_CultureInvariant_2 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Regex__Options_CultureInvariant_2)
            Me.columnRegular__Expressions_NameMatch__Pattern_4 = New Global.System.Data.DataColumn("Regular__Expressions_NameMatch__Pattern_4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular__Expressions_NameMatch__Pattern_4)
            Me.columnScripting__Options_SMO_AgentAlertJob_1 = New Global.System.Data.DataColumn("Scripting__Options_SMO_AgentAlertJob_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_AgentAlertJob_1)
            Me.columnScripting__Options_SMO_AgentJobId_2 = New Global.System.Data.DataColumn("Scripting__Options_SMO_AgentJobId_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_AgentJobId_2)
            Me.columnScripting__Options_SMO_AgentNotify_3 = New Global.System.Data.DataColumn("Scripting__Options_SMO_AgentNotify_3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_AgentNotify_3)
            Me.columnScripting__Options_SMO_AllowSystemObjects_10 = New Global.System.Data.DataColumn("Scripting__Options_SMO_AllowSystemObjects_10", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_AllowSystemObjects_10)
            Me.columnScripting__Options_SMO_AnsiFile_20 = New Global.System.Data.DataColumn("Scripting__Options_SMO_AnsiFile_20", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_AnsiFile_20)
            Me.columnScripting__Options_SMO_AnsiPadding_30 = New Global.System.Data.DataColumn("Scripting__Options_SMO_AnsiPadding_30", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_AnsiPadding_30)
            Me.columnScripting__Options_SMO_Bindings_40 = New Global.System.Data.DataColumn("Scripting__Options_SMO_Bindings_40", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_Bindings_40)
            Me.columnScripting__Options_SMO_ClusteredIndexes_50 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ClusteredIndexes_50", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ClusteredIndexes_50)
            Me.columnScripting__Options_SMO_ContinueScriptingOnError_60 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ContinueScriptingOnError_60", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ContinueScriptingOnError_60)
            Me.columnScripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70)
            Me.columnScripting__Options_SMO_DdlBodyOnly_80 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DdlBodyOnly_80", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DdlBodyOnly_80)
            Me.columnScripting__Options_SMO_DdlHeaderOnly_90 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DdlHeaderOnly_90", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DdlHeaderOnly_90)
            Me.columnScripting__Options_SMO_Default_100 = New Global.System.Data.DataColumn("Scripting__Options_SMO_Default_100", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_Default_100)
            Me.columnScripting__Options_SMO_DriAll_110 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriAll_110", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriAll_110)
            Me.columnScripting__Options_SMO_DriAllConstraints_120 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriAllConstraints_120", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriAllConstraints_120)
            Me.columnScripting__Options_SMO_DriAllKeys_130 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriAllKeys_130", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriAllKeys_130)
            Me.columnScripting__Options_SMO_DriChecks_140 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriChecks_140", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriChecks_140)
            Me.columnScripting__Options_SMO_DriClustered_150 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriClustered_150", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriClustered_150)
            Me.columnScripting__Options_SMO_DriDefaults_160 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriDefaults_160", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriDefaults_160)
            Me.columnScripting__Options_SMO_DriForeignKeys_170 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriForeignKeys_170", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriForeignKeys_170)
            Me.columnScripting__Options_SMO_DriIncludeSystemNames_180 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriIncludeSystemNames_180", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriIncludeSystemNames_180)
            Me.columnScripting__Options_SMO_DriIndexes_190 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriIndexes_190", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriIndexes_190)
            Me.columnScripting__Options_SMO_DriNonClustered_200 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriNonClustered_200", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriNonClustered_200)
            Me.columnScripting__Options_SMO_DriPrimaryKey_210 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriPrimaryKey_210", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriPrimaryKey_210)
            Me.columnScripting__Options_SMO_DriUniqueKeys_220 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriUniqueKeys_220", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriUniqueKeys_220)
            Me.columnScripting__Options_SMO_DriWithNoCheck_230 = New Global.System.Data.DataColumn("Scripting__Options_SMO_DriWithNoCheck_230", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_DriWithNoCheck_230)
            Me.columnScripting__Options_SMO_Encoding_240 = New Global.System.Data.DataColumn("Scripting__Options_SMO_Encoding_240", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_Encoding_240)
            Me.columnScripting__Options_SMO_EnforceScriptingOptions_250 = New Global.System.Data.DataColumn("Scripting__Options_SMO_EnforceScriptingOptions_250", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_EnforceScriptingOptions_250)
            Me.columnScripting__Options_SMO_ExtendedProperties_260 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ExtendedProperties_260", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ExtendedProperties_260)
            Me.columnScripting__Options_SMO_FullTextCatalogs_270 = New Global.System.Data.DataColumn("Scripting__Options_SMO_FullTextCatalogs_270", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_FullTextCatalogs_270)
            Me.columnScripting__Options_SMO_FullTextindexes_280 = New Global.System.Data.DataColumn("Scripting__Options_SMO_FullTextindexes_280", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_FullTextindexes_280)
            Me.columnScripting__Options_SMO_IncludeDatabaseContext_290 = New Global.System.Data.DataColumn("Scripting__Options_SMO_IncludeDatabaseContext_290", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_IncludeDatabaseContext_290)
            Me.columnScripting__Options_SMO_IncludeDatabaseRoleMemberships_291 = New Global.System.Data.DataColumn("Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_IncludeDatabaseRoleMemberships_291)
            Me.columnScripting__Options_SMO_IncludeHeaders_300 = New Global.System.Data.DataColumn("Scripting__Options_SMO_IncludeHeaders_300", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_IncludeHeaders_300)
            Me.columnScripting__Options_SMO_IncludeIfNotExists_301 = New Global.System.Data.DataColumn("Scripting__Options_SMO_IncludeIfNotExists_301", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_IncludeIfNotExists_301)
            Me.columnScripting__Options_SMO_Indexes_310 = New Global.System.Data.DataColumn("Scripting__Options_SMO_Indexes_310", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_Indexes_310)
            Me.columnScripting__Options_SMO_LoginSID_320 = New Global.System.Data.DataColumn("Scripting__Options_SMO_LoginSID_320", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_LoginSID_320)
            Me.columnScripting__Options_SMO_NoAssemblies_330 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoAssemblies_330", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoAssemblies_330)
            Me.columnScripting__Options_SMO_NoCollation_340 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoCollation_340", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoCollation_340)
            Me.columnScripting__Options_SMO_NoCommandTerminator_350 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoCommandTerminator_350", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoCommandTerminator_350)
            Me.columnScripting__Options_SMO_NoExecuteAs_360 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoExecuteAs_360", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoExecuteAs_360)
            Me.columnScripting__Options_SMO_NoFilegroup_370 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoFilegroup_370", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoFilegroup_370)
            Me.columnScripting__Options_SMO_NoIdentities_380 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoIdentities_380", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoIdentities_380)
            Me.columnScripting__Options_SMO_NoIndexPartitioningSchemes_390 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoIndexPartitioningSchemes_390", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoIndexPartitioningSchemes_390)
            Me.columnScripting__Options_SMO_NoMailProfileAccounts_400 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoMailProfileAccounts_400", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoMailProfileAccounts_400)
            Me.columnScripting__Options_SMO_NoMailProfilePrincipals_410 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoMailProfilePrincipals_410", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoMailProfilePrincipals_410)
            Me.columnScripting__Options_SMO_NonClusteredIndexes_420 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NonClusteredIndexes_420", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NonClusteredIndexes_420)
            Me.columnScripting__Options_SMO_NoTablePartitioningSchemes_430 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoTablePartitioningSchemes_430", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoTablePartitioningSchemes_430)
            Me.columnScripting__Options_SMO_NoVarDecimal_431 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoVarDecimal_431", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoVarDecimal_431)
            Me.columnScripting__Options_SMO_NoViewColumns_440 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoViewColumns_440", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoViewColumns_440)
            Me.columnScripting__Options_SMO_NoXMLNameSpaces_450 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoXMLNameSpaces_450", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoXMLNameSpaces_450)
            Me.columnScripting__Options_SMO_OptimizerData_460 = New Global.System.Data.DataColumn("Scripting__Options_SMO_OptimizerData_460", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_OptimizerData_460)
            Me.columnScripting__Options_SMO_Permissions_470 = New Global.System.Data.DataColumn("Scripting__Options_SMO_Permissions_470", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_Permissions_470)
            Me.columnScripting__Options_SMO_PrimaryObject_480 = New Global.System.Data.DataColumn("Scripting__Options_SMO_PrimaryObject_480", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_PrimaryObject_480)
            Me.columnScripting__Options_SMO_SchemaQualify_490 = New Global.System.Data.DataColumn("Scripting__Options_SMO_SchemaQualify_490", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_SchemaQualify_490)
            Me.columnScripting__Options_SMO_SchemaQualifyForeignKeysReferences_500 = New Global.System.Data.DataColumn("Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_SchemaQualifyForeignKeysReferences_500)
            Me.columnScripting__Options_SMO_Statistics_510 = New Global.System.Data.DataColumn("Scripting__Options_SMO_Statistics_510", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_Statistics_510)
            Me.columnScripting__Options_SMO_TimestampToBinary_520 = New Global.System.Data.DataColumn("Scripting__Options_SMO_TimestampToBinary_520", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_TimestampToBinary_520)
            Me.columnScripting__Options_SMO_TargetServerVersion_530 = New Global.System.Data.DataColumn("Scripting__Options_SMO_TargetServerVersion_530", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_TargetServerVersion_530)
            Me.columnScripting__Options_SMO_Triggers_540 = New Global.System.Data.DataColumn("Scripting__Options_SMO_Triggers_540", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_Triggers_540)
            Me.columnScripting__Options_SMO_WithDependencies_550 = New Global.System.Data.DataColumn("Scripting__Options_SMO_WithDependencies_550", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_WithDependencies_550)
            Me.columnScripting__Options_SMO_XMLIndexes_560 = New Global.System.Data.DataColumn("Scripting__Options_SMO_XMLIndexes_560", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_XMLIndexes_560)
            Me.columnScripting__Options_SMO_BatchSize_35 = New Global.System.Data.DataColumn("Scripting__Options_SMO_BatchSize_35", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_BatchSize_35)
            Me.columnScripting__Options_SMO_ChangeTracking_45 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ChangeTracking_45", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ChangeTracking_45)
            Me.columnScripting__Options_SMO_FullTextStopLists_285 = New Global.System.Data.DataColumn("Scripting__Options_SMO_FullTextStopLists_285", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_FullTextStopLists_285)
            Me.columnScripting__Options_SMO_IncludeFullTextCatalogRootPath_295 = New Global.System.Data.DataColumn("Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_IncludeFullTextCatalogRootPath_295)
            Me.columnScripting__Options_SMO_NoFileStream_373 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoFileStream_373", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoFileStream_373)
            Me.columnScripting__Options_SMO_NoFileStreamColumn_376 = New Global.System.Data.DataColumn("Scripting__Options_SMO_NoFileStreamColumn_376", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_NoFileStreamColumn_376)
            Me.columnScripting__Options_SMO_ScriptBatchTerminator_502 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ScriptBatchTerminator_502", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ScriptBatchTerminator_502)
            Me.columnScripting__Options_SMO_ScriptData_503 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ScriptData_503", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ScriptData_503)
            Me.columnScripting__Options_SMO_ScriptDataCompression_505 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ScriptDataCompression_505", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ScriptDataCompression_505)
            Me.columnScripting__Options_SMO_ScriptDrops_506 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ScriptDrops_506", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ScriptDrops_506)
            Me.columnScripting__Options_SMO_ScriptOwner_508 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ScriptOwner_508", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ScriptOwner_508)
            Me.columnScripting__Options_SMO_ScriptSchema_509 = New Global.System.Data.DataColumn("Scripting__Options_SMO_ScriptSchema_509", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScripting__Options_SMO_ScriptSchema_509)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnName}, true))
            Me.columnName.AllowDBNull = false
            Me.columnName.Unique = true
            Me.columnName.MaxLength = 128
            Me.columnAddDatabasesUponDiscovery.AllowDBNull = false
            Me.columnTargetEventNotificationDatabase.AllowDBNull = false
            Me.columnTargetEventNotificationDatabase.MaxLength = 128
            Me.columnScripting__Options_Batch__Separator.AllowDBNull = false
            Me.columnScripting__Options_Batch__Separator.MaxLength = 128
            Me.columnMisc_Ignore__Blank__Lines.AllowDBNull = false
            Me.columnMisc_Display__Output_Show__Comparison__Details.AllowDBNull = false
            Me.columnScripting__Options_Include__DROP__In__Script.AllowDBNull = false
            Me.columnScripting__Options_Include__IF__EXISTS__With__Drop.AllowDBNull = false
            Me.columnMisc_Display__Output_Show__Scripts__For__Unmatched__Items.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnoreCase_5.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_Multiline_7.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_Compiled_1.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_SingleLine_9.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_RightToLeft_8.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_ECMAScript_3.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Regex__Options_CultureInvariant_2.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Pattern_1.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Pattern_1.MaxLength = 2147483647
            Me.columnRegular__Expressions_LineReplace__Replacement_2.AllowDBNull = false
            Me.columnRegular__Expressions_LineReplace__Replacement_2.MaxLength = 2147483647
            Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnoreCase_5.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_Multiline_7.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_Compiled_1.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_SingleLine_9.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_RightToLeft_8.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_ECMAScript_3.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Regex__Options_CultureInvariant_2.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Pattern_3.AllowDBNull = false
            Me.columnRegular__Expressions_LineSplit__Pattern_3.MaxLength = 2147483647
            Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnoreCase_5.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_Multiline_7.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_Compiled_1.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_SingleLine_9.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_RightToLeft_8.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_ECMAScript_3.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Regex__Options_CultureInvariant_2.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Pattern_4.AllowDBNull = false
            Me.columnRegular__Expressions_NameMatch__Pattern_4.MaxLength = 2147483647
            Me.columnScripting__Options_SMO_AgentAlertJob_1.AllowDBNull = false
            Me.columnScripting__Options_SMO_AgentJobId_2.AllowDBNull = false
            Me.columnScripting__Options_SMO_AgentNotify_3.AllowDBNull = false
            Me.columnScripting__Options_SMO_AllowSystemObjects_10.AllowDBNull = false
            Me.columnScripting__Options_SMO_AnsiFile_20.AllowDBNull = false
            Me.columnScripting__Options_SMO_AnsiPadding_30.AllowDBNull = false
            Me.columnScripting__Options_SMO_Bindings_40.AllowDBNull = false
            Me.columnScripting__Options_SMO_ClusteredIndexes_50.AllowDBNull = false
            Me.columnScripting__Options_SMO_ContinueScriptingOnError_60.AllowDBNull = false
            Me.columnScripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70.AllowDBNull = false
            Me.columnScripting__Options_SMO_DdlBodyOnly_80.AllowDBNull = false
            Me.columnScripting__Options_SMO_DdlHeaderOnly_90.AllowDBNull = false
            Me.columnScripting__Options_SMO_Default_100.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriAll_110.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriAllConstraints_120.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriAllKeys_130.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriChecks_140.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriClustered_150.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriDefaults_160.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriForeignKeys_170.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriIncludeSystemNames_180.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriIndexes_190.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriNonClustered_200.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriPrimaryKey_210.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriUniqueKeys_220.AllowDBNull = false
            Me.columnScripting__Options_SMO_DriWithNoCheck_230.AllowDBNull = false
            Me.columnScripting__Options_SMO_Encoding_240.AllowDBNull = false
            Me.columnScripting__Options_SMO_Encoding_240.MaxLength = 50
            Me.columnScripting__Options_SMO_EnforceScriptingOptions_250.AllowDBNull = false
            Me.columnScripting__Options_SMO_ExtendedProperties_260.AllowDBNull = false
            Me.columnScripting__Options_SMO_FullTextCatalogs_270.AllowDBNull = false
            Me.columnScripting__Options_SMO_FullTextindexes_280.AllowDBNull = false
            Me.columnScripting__Options_SMO_IncludeDatabaseContext_290.AllowDBNull = false
            Me.columnScripting__Options_SMO_IncludeDatabaseRoleMemberships_291.AllowDBNull = false
            Me.columnScripting__Options_SMO_IncludeHeaders_300.AllowDBNull = false
            Me.columnScripting__Options_SMO_IncludeIfNotExists_301.AllowDBNull = false
            Me.columnScripting__Options_SMO_Indexes_310.AllowDBNull = false
            Me.columnScripting__Options_SMO_LoginSID_320.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoAssemblies_330.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoCollation_340.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoCommandTerminator_350.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoExecuteAs_360.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoFilegroup_370.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoIdentities_380.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoIndexPartitioningSchemes_390.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoMailProfileAccounts_400.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoMailProfilePrincipals_410.AllowDBNull = false
            Me.columnScripting__Options_SMO_NonClusteredIndexes_420.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoTablePartitioningSchemes_430.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoVarDecimal_431.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoViewColumns_440.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoXMLNameSpaces_450.AllowDBNull = false
            Me.columnScripting__Options_SMO_OptimizerData_460.AllowDBNull = false
            Me.columnScripting__Options_SMO_Permissions_470.AllowDBNull = false
            Me.columnScripting__Options_SMO_PrimaryObject_480.AllowDBNull = false
            Me.columnScripting__Options_SMO_SchemaQualify_490.AllowDBNull = false
            Me.columnScripting__Options_SMO_SchemaQualifyForeignKeysReferences_500.AllowDBNull = false
            Me.columnScripting__Options_SMO_Statistics_510.AllowDBNull = false
            Me.columnScripting__Options_SMO_TimestampToBinary_520.AllowDBNull = false
            Me.columnScripting__Options_SMO_TargetServerVersion_530.AllowDBNull = false
            Me.columnScripting__Options_SMO_Triggers_540.AllowDBNull = false
            Me.columnScripting__Options_SMO_WithDependencies_550.AllowDBNull = false
            Me.columnScripting__Options_SMO_XMLIndexes_560.AllowDBNull = false
            Me.columnScripting__Options_SMO_BatchSize_35.AllowDBNull = false
            Me.columnScripting__Options_SMO_ChangeTracking_45.AllowDBNull = false
            Me.columnScripting__Options_SMO_FullTextStopLists_285.AllowDBNull = false
            Me.columnScripting__Options_SMO_IncludeFullTextCatalogRootPath_295.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoFileStream_373.AllowDBNull = false
            Me.columnScripting__Options_SMO_NoFileStreamColumn_376.AllowDBNull = false
            Me.columnScripting__Options_SMO_ScriptBatchTerminator_502.AllowDBNull = false
            Me.columnScripting__Options_SMO_ScriptData_503.AllowDBNull = false
            Me.columnScripting__Options_SMO_ScriptDataCompression_505.AllowDBNull = false
            Me.columnScripting__Options_SMO_ScriptDrops_506.AllowDBNull = false
            Me.columnScripting__Options_SMO_ScriptOwner_508.AllowDBNull = false
            Me.columnScripting__Options_SMO_ScriptSchema_509.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtServiceSettingsRow() As tServiceSettingsRow
            Return CType(Me.NewRow,tServiceSettingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tServiceSettingsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tServiceSettingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tServiceSettingsRowChangedEvent) Is Nothing) Then
                RaiseEvent tServiceSettingsRowChanged(Me, New tServiceSettingsRowChangeEvent(CType(e.Row,tServiceSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tServiceSettingsRowChangingEvent) Is Nothing) Then
                RaiseEvent tServiceSettingsRowChanging(Me, New tServiceSettingsRowChangeEvent(CType(e.Row,tServiceSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tServiceSettingsRowDeletedEvent) Is Nothing) Then
                RaiseEvent tServiceSettingsRowDeleted(Me, New tServiceSettingsRowChangeEvent(CType(e.Row,tServiceSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tServiceSettingsRowDeletingEvent) Is Nothing) Then
                RaiseEvent tServiceSettingsRowDeleting(Me, New tServiceSettingsRowChangeEvent(CType(e.Row,tServiceSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetServiceSettingsRow(ByVal row As tServiceSettingsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tServiceSettingsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tChangeDataTable
        Inherits Global.System.Data.TypedTableBase(Of tChangeRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnNode As Global.System.Data.DataColumn
        
        Private columnDbName As Global.System.Data.DataColumn
        
        Private columnSubType As Global.System.Data.DataColumn
        
        Private columnCollection As Global.System.Data.DataColumn
        
        Private columnItem As Global.System.Data.DataColumn
        
        Private columnLength As Global.System.Data.DataColumn
        
        Private columnVersion As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columnHasEventData As Global.System.Data.DataColumn
        
        Private columnChangeDate As Global.System.Data.DataColumn
        
        Private columnDatabase As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tChange"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DbNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDbName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CollectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HasEventDataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHasEventData
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChangeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChangeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatabaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatabase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tChangeRow
            Get
                Return CType(Me.Rows(index),tChangeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tChangeRowChanging As tChangeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tChangeRowChanged As tChangeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tChangeRowDeleting As tChangeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tChangeRowDeleted As tChangeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtChangeRow(ByVal row As tChangeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtChangeRow(ByVal Node As String, ByVal DbName As String, ByVal SubType As String, ByVal Collection As String, ByVal Item As String, ByVal Length As Integer, ByVal Version As Integer, ByVal Action As String, ByVal HasEventData As Integer, ByVal ChangeDate As Date, ByVal Database As String) As tChangeRow
            Dim rowtChangeRow As tChangeRow = CType(Me.NewRow,tChangeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Node, DbName, SubType, Collection, Item, Length, Version, Action, HasEventData, ChangeDate, Database}
            rowtChangeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtChangeRow)
            Return rowtChangeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As tChangeRow
            Return CType(Me.Rows.Find(New Object() {Id}),tChangeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tChangeDataTable = CType(MyBase.Clone,tChangeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tChangeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnNode = MyBase.Columns("Node")
            Me.columnDbName = MyBase.Columns("DbName")
            Me.columnSubType = MyBase.Columns("SubType")
            Me.columnCollection = MyBase.Columns("Collection")
            Me.columnItem = MyBase.Columns("Item")
            Me.columnLength = MyBase.Columns("Length")
            Me.columnVersion = MyBase.Columns("Version")
            Me.columnAction = MyBase.Columns("Action")
            Me.columnHasEventData = MyBase.Columns("HasEventData")
            Me.columnChangeDate = MyBase.Columns("ChangeDate")
            Me.columnDatabase = MyBase.Columns("Database")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnNode = New Global.System.Data.DataColumn("Node", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNode)
            Me.columnDbName = New Global.System.Data.DataColumn("DbName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDbName)
            Me.columnSubType = New Global.System.Data.DataColumn("SubType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubType)
            Me.columnCollection = New Global.System.Data.DataColumn("Collection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollection)
            Me.columnItem = New Global.System.Data.DataColumn("Item", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item")
            Me.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn")
            Me.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem")
            Me.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item")
            MyBase.Columns.Add(Me.columnItem)
            Me.columnLength = New Global.System.Data.DataColumn("Length", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLength)
            Me.columnVersion = New Global.System.Data.DataColumn("Version", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columnHasEventData = New Global.System.Data.DataColumn("HasEventData", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHasEventData)
            Me.columnChangeDate = New Global.System.Data.DataColumn("ChangeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChangeDate)
            Me.columnDatabase = New Global.System.Data.DataColumn("Database", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatabase)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnNode.ReadOnly = true
            Me.columnNode.MaxLength = 4000
            Me.columnDbName.ReadOnly = true
            Me.columnDbName.MaxLength = 4000
            Me.columnSubType.ReadOnly = true
            Me.columnSubType.MaxLength = 4000
            Me.columnCollection.ReadOnly = true
            Me.columnCollection.MaxLength = 4000
            Me.columnItem.ReadOnly = true
            Me.columnItem.MaxLength = 4000
            Me.columnLength.ReadOnly = true
            Me.columnAction.AllowDBNull = false
            Me.columnAction.MaxLength = 30
            Me.columnHasEventData.ReadOnly = true
            Me.columnChangeDate.ReadOnly = true
            Me.columnDatabase.ReadOnly = true
            Me.columnDatabase.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtChangeRow() As tChangeRow
            Return CType(Me.NewRow,tChangeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tChangeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tChangeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tChangeRowChangedEvent) Is Nothing) Then
                RaiseEvent tChangeRowChanged(Me, New tChangeRowChangeEvent(CType(e.Row,tChangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tChangeRowChangingEvent) Is Nothing) Then
                RaiseEvent tChangeRowChanging(Me, New tChangeRowChangeEvent(CType(e.Row,tChangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tChangeRowDeletedEvent) Is Nothing) Then
                RaiseEvent tChangeRowDeleted(Me, New tChangeRowChangeEvent(CType(e.Row,tChangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tChangeRowDeletingEvent) Is Nothing) Then
                RaiseEvent tChangeRowDeleting(Me, New tChangeRowChangeEvent(CType(e.Row,tChangeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetChangeRow(ByVal row As tChangeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tChangeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class pChangeActionSummaryByNodeForDaysDataTable
        Inherits Global.System.Data.TypedTableBase(Of pChangeActionSummaryByNodeForDaysRow)
        
        Private columnSQLInstance As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnNode As Global.System.Data.DataColumn
        
        Private columnTotalChangeCount As Global.System.Data.DataColumn
        
        Private columnMetadataRowInserts As Global.System.Data.DataColumn
        
        Private columnMetadataRowUpdates As Global.System.Data.DataColumn
        
        Private columnMetadataRowDeletes As Global.System.Data.DataColumn
        
        Private columnSQLConfigurationAdded As Global.System.Data.DataColumn
        
        Private columnSQLConfigurationChanged As Global.System.Data.DataColumn
        
        Private columnSQLConfigurationRemoved As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "pChangeActionSummaryByNodeForDays"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SQLInstanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSQLInstance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalChangeCountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalChangeCount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MetadataRowInsertsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetadataRowInserts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MetadataRowUpdatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetadataRowUpdates
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MetadataRowDeletesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetadataRowDeletes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SQLConfigurationAddedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSQLConfigurationAdded
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SQLConfigurationChangedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSQLConfigurationChanged
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SQLConfigurationRemovedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSQLConfigurationRemoved
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As pChangeActionSummaryByNodeForDaysRow
            Get
                Return CType(Me.Rows(index),pChangeActionSummaryByNodeForDaysRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeActionSummaryByNodeForDaysRowChanging As pChangeActionSummaryByNodeForDaysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeActionSummaryByNodeForDaysRowChanged As pChangeActionSummaryByNodeForDaysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeActionSummaryByNodeForDaysRowDeleting As pChangeActionSummaryByNodeForDaysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeActionSummaryByNodeForDaysRowDeleted As pChangeActionSummaryByNodeForDaysRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddpChangeActionSummaryByNodeForDaysRow(ByVal row As pChangeActionSummaryByNodeForDaysRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddpChangeActionSummaryByNodeForDaysRow(ByVal SQLInstance As String, ByVal Type As String, ByVal Node As String, ByVal TotalChangeCount As Integer, ByVal MetadataRowInserts As Integer, ByVal MetadataRowUpdates As Integer, ByVal MetadataRowDeletes As Integer, ByVal SQLConfigurationAdded As Integer, ByVal SQLConfigurationChanged As Integer, ByVal SQLConfigurationRemoved As Integer, ByVal _Date As Date) As pChangeActionSummaryByNodeForDaysRow
            Dim rowpChangeActionSummaryByNodeForDaysRow As pChangeActionSummaryByNodeForDaysRow = CType(Me.NewRow,pChangeActionSummaryByNodeForDaysRow)
            Dim columnValuesArray() As Object = New Object() {SQLInstance, Type, Node, TotalChangeCount, MetadataRowInserts, MetadataRowUpdates, MetadataRowDeletes, SQLConfigurationAdded, SQLConfigurationChanged, SQLConfigurationRemoved, _Date}
            rowpChangeActionSummaryByNodeForDaysRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpChangeActionSummaryByNodeForDaysRow)
            Return rowpChangeActionSummaryByNodeForDaysRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As pChangeActionSummaryByNodeForDaysDataTable = CType(MyBase.Clone,pChangeActionSummaryByNodeForDaysDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New pChangeActionSummaryByNodeForDaysDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSQLInstance = MyBase.Columns("SQLInstance")
            Me.columnType = MyBase.Columns("Type")
            Me.columnNode = MyBase.Columns("Node")
            Me.columnTotalChangeCount = MyBase.Columns("TotalChangeCount")
            Me.columnMetadataRowInserts = MyBase.Columns("MetadataRowInserts")
            Me.columnMetadataRowUpdates = MyBase.Columns("MetadataRowUpdates")
            Me.columnMetadataRowDeletes = MyBase.Columns("MetadataRowDeletes")
            Me.columnSQLConfigurationAdded = MyBase.Columns("SQLConfigurationAdded")
            Me.columnSQLConfigurationChanged = MyBase.Columns("SQLConfigurationChanged")
            Me.columnSQLConfigurationRemoved = MyBase.Columns("SQLConfigurationRemoved")
            Me.columnDate = MyBase.Columns("Date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSQLInstance = New Global.System.Data.DataColumn("SQLInstance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSQLInstance)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnNode = New Global.System.Data.DataColumn("Node", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNode)
            Me.columnTotalChangeCount = New Global.System.Data.DataColumn("TotalChangeCount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalChangeCount)
            Me.columnMetadataRowInserts = New Global.System.Data.DataColumn("MetadataRowInserts", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetadataRowInserts)
            Me.columnMetadataRowUpdates = New Global.System.Data.DataColumn("MetadataRowUpdates", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetadataRowUpdates)
            Me.columnMetadataRowDeletes = New Global.System.Data.DataColumn("MetadataRowDeletes", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetadataRowDeletes)
            Me.columnSQLConfigurationAdded = New Global.System.Data.DataColumn("SQLConfigurationAdded", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSQLConfigurationAdded)
            Me.columnSQLConfigurationChanged = New Global.System.Data.DataColumn("SQLConfigurationChanged", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSQLConfigurationChanged)
            Me.columnSQLConfigurationRemoved = New Global.System.Data.DataColumn("SQLConfigurationRemoved", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSQLConfigurationRemoved)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnSQLInstance.ReadOnly = true
            Me.columnSQLInstance.MaxLength = 4000
            Me.columnType.ReadOnly = true
            Me.columnType.MaxLength = 4000
            Me.columnNode.ReadOnly = true
            Me.columnNode.MaxLength = 786
            Me.columnTotalChangeCount.ReadOnly = true
            Me.columnMetadataRowInserts.ReadOnly = true
            Me.columnMetadataRowUpdates.ReadOnly = true
            Me.columnMetadataRowDeletes.ReadOnly = true
            Me.columnSQLConfigurationAdded.ReadOnly = true
            Me.columnSQLConfigurationChanged.ReadOnly = true
            Me.columnSQLConfigurationRemoved.ReadOnly = true
            Me.columnDate.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewpChangeActionSummaryByNodeForDaysRow() As pChangeActionSummaryByNodeForDaysRow
            Return CType(Me.NewRow,pChangeActionSummaryByNodeForDaysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New pChangeActionSummaryByNodeForDaysRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(pChangeActionSummaryByNodeForDaysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.pChangeActionSummaryByNodeForDaysRowChangedEvent) Is Nothing) Then
                RaiseEvent pChangeActionSummaryByNodeForDaysRowChanged(Me, New pChangeActionSummaryByNodeForDaysRowChangeEvent(CType(e.Row,pChangeActionSummaryByNodeForDaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.pChangeActionSummaryByNodeForDaysRowChangingEvent) Is Nothing) Then
                RaiseEvent pChangeActionSummaryByNodeForDaysRowChanging(Me, New pChangeActionSummaryByNodeForDaysRowChangeEvent(CType(e.Row,pChangeActionSummaryByNodeForDaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.pChangeActionSummaryByNodeForDaysRowDeletedEvent) Is Nothing) Then
                RaiseEvent pChangeActionSummaryByNodeForDaysRowDeleted(Me, New pChangeActionSummaryByNodeForDaysRowChangeEvent(CType(e.Row,pChangeActionSummaryByNodeForDaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.pChangeActionSummaryByNodeForDaysRowDeletingEvent) Is Nothing) Then
                RaiseEvent pChangeActionSummaryByNodeForDaysRowDeleting(Me, New pChangeActionSummaryByNodeForDaysRowChangeEvent(CType(e.Row,pChangeActionSummaryByNodeForDaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovepChangeActionSummaryByNodeForDaysRow(ByVal row As pChangeActionSummaryByNodeForDaysRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "pChangeActionSummaryByNodeForDaysDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tConnectionDataTable
        Inherits Global.System.Data.TypedTableBase(Of tConnectionRow)
        
        Private columnInstanceName As Global.System.Data.DataColumn
        
        Private columnEncryptedConnection As Global.System.Data.DataColumn
        
        Private columnTrustServerCertificate As Global.System.Data.DataColumn
        
        Private columnNetworkProtocol As Global.System.Data.DataColumn
        
        Private columnConnectionTimeout As Global.System.Data.DataColumn
        
        Private columnLoginSecure As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tConnection"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstanceNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstanceName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EncryptedConnectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEncryptedConnection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrustServerCertificateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrustServerCertificate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NetworkProtocolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetworkProtocol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConnectionTimeoutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionTimeout
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoginSecureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginSecure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tConnectionRow
            Get
                Return CType(Me.Rows(index),tConnectionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tConnectionRowChanging As tConnectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tConnectionRowChanged As tConnectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tConnectionRowDeleting As tConnectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tConnectionRowDeleted As tConnectionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtConnectionRow(ByVal row As tConnectionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtConnectionRow(ByVal InstanceName As String, ByVal EncryptedConnection As Boolean, ByVal TrustServerCertificate As Boolean, ByVal NetworkProtocol As String, ByVal ConnectionTimeout As Integer, ByVal LoginSecure As Boolean) As tConnectionRow
            Dim rowtConnectionRow As tConnectionRow = CType(Me.NewRow,tConnectionRow)
            Dim columnValuesArray() As Object = New Object() {InstanceName, EncryptedConnection, TrustServerCertificate, NetworkProtocol, ConnectionTimeout, LoginSecure}
            rowtConnectionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtConnectionRow)
            Return rowtConnectionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByInstanceName(ByVal InstanceName As String) As tConnectionRow
            Return CType(Me.Rows.Find(New Object() {InstanceName}),tConnectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tConnectionDataTable = CType(MyBase.Clone,tConnectionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tConnectionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnInstanceName = MyBase.Columns("InstanceName")
            Me.columnEncryptedConnection = MyBase.Columns("EncryptedConnection")
            Me.columnTrustServerCertificate = MyBase.Columns("TrustServerCertificate")
            Me.columnNetworkProtocol = MyBase.Columns("NetworkProtocol")
            Me.columnConnectionTimeout = MyBase.Columns("ConnectionTimeout")
            Me.columnLoginSecure = MyBase.Columns("LoginSecure")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnInstanceName = New Global.System.Data.DataColumn("InstanceName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstanceName)
            Me.columnEncryptedConnection = New Global.System.Data.DataColumn("EncryptedConnection", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEncryptedConnection)
            Me.columnTrustServerCertificate = New Global.System.Data.DataColumn("TrustServerCertificate", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrustServerCertificate)
            Me.columnNetworkProtocol = New Global.System.Data.DataColumn("NetworkProtocol", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetworkProtocol)
            Me.columnConnectionTimeout = New Global.System.Data.DataColumn("ConnectionTimeout", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionTimeout)
            Me.columnLoginSecure = New Global.System.Data.DataColumn("LoginSecure", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginSecure)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnInstanceName}, true))
            Me.columnInstanceName.AllowDBNull = false
            Me.columnInstanceName.Unique = true
            Me.columnInstanceName.MaxLength = 128
            Me.columnEncryptedConnection.AllowDBNull = false
            Me.columnTrustServerCertificate.AllowDBNull = false
            Me.columnNetworkProtocol.MaxLength = 128
            Me.columnConnectionTimeout.AllowDBNull = false
            Me.columnLoginSecure.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtConnectionRow() As tConnectionRow
            Return CType(Me.NewRow,tConnectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tConnectionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tConnectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tConnectionRowChangedEvent) Is Nothing) Then
                RaiseEvent tConnectionRowChanged(Me, New tConnectionRowChangeEvent(CType(e.Row,tConnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tConnectionRowChangingEvent) Is Nothing) Then
                RaiseEvent tConnectionRowChanging(Me, New tConnectionRowChangeEvent(CType(e.Row,tConnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tConnectionRowDeletedEvent) Is Nothing) Then
                RaiseEvent tConnectionRowDeleted(Me, New tConnectionRowChangeEvent(CType(e.Row,tConnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tConnectionRowDeletingEvent) Is Nothing) Then
                RaiseEvent tConnectionRowDeleting(Me, New tConnectionRowChangeEvent(CType(e.Row,tConnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetConnectionRow(ByVal row As tConnectionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tConnectionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tJobServerDataTable
        Inherits Global.System.Data.TypedTableBase(Of tJobServerRow)
        
        Private columnInstanceName As Global.System.Data.DataColumn
        
        Private columnAlerts As Global.System.Data.DataColumn
        
        Private columnAlertSystem As Global.System.Data.DataColumn
        
        Private columnJobs As Global.System.Data.DataColumn
        
        Private columnOperators As Global.System.Data.DataColumn
        
        Private columnProxyAccounts As Global.System.Data.DataColumn
        
        Private columnTargetServers As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tJobServer"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstanceNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstanceName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlertsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlerts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlertSystemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlertSystem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JobsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OperatorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperators
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProxyAccountsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProxyAccounts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetServersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetServers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tJobServerRow
            Get
                Return CType(Me.Rows(index),tJobServerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tJobServerRowChanging As tJobServerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tJobServerRowChanged As tJobServerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tJobServerRowDeleting As tJobServerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tJobServerRowDeleted As tJobServerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtJobServerRow(ByVal row As tJobServerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtJobServerRow(ByVal parenttInstanceRowByfk_tJobServer__to__tInstance__Name As tInstanceRow, ByVal Alerts As Boolean, ByVal AlertSystem As Boolean, ByVal Jobs As Boolean, ByVal Operators As Boolean, ByVal ProxyAccounts As Boolean, ByVal TargetServers As Boolean) As tJobServerRow
            Dim rowtJobServerRow As tJobServerRow = CType(Me.NewRow,tJobServerRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Alerts, AlertSystem, Jobs, Operators, ProxyAccounts, TargetServers}
            If (Not (parenttInstanceRowByfk_tJobServer__to__tInstance__Name) Is Nothing) Then
                columnValuesArray(0) = parenttInstanceRowByfk_tJobServer__to__tInstance__Name(0)
            End If
            rowtJobServerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtJobServerRow)
            Return rowtJobServerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByInstanceName(ByVal InstanceName As String) As tJobServerRow
            Return CType(Me.Rows.Find(New Object() {InstanceName}),tJobServerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tJobServerDataTable = CType(MyBase.Clone,tJobServerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tJobServerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnInstanceName = MyBase.Columns("InstanceName")
            Me.columnAlerts = MyBase.Columns("Alerts")
            Me.columnAlertSystem = MyBase.Columns("AlertSystem")
            Me.columnJobs = MyBase.Columns("Jobs")
            Me.columnOperators = MyBase.Columns("Operators")
            Me.columnProxyAccounts = MyBase.Columns("ProxyAccounts")
            Me.columnTargetServers = MyBase.Columns("TargetServers")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnInstanceName = New Global.System.Data.DataColumn("InstanceName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstanceName)
            Me.columnAlerts = New Global.System.Data.DataColumn("Alerts", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlerts)
            Me.columnAlertSystem = New Global.System.Data.DataColumn("AlertSystem", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlertSystem)
            Me.columnJobs = New Global.System.Data.DataColumn("Jobs", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobs)
            Me.columnOperators = New Global.System.Data.DataColumn("Operators", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperators)
            Me.columnProxyAccounts = New Global.System.Data.DataColumn("ProxyAccounts", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProxyAccounts)
            Me.columnTargetServers = New Global.System.Data.DataColumn("TargetServers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetServers)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnInstanceName}, true))
            Me.columnInstanceName.AllowDBNull = false
            Me.columnInstanceName.Unique = true
            Me.columnInstanceName.MaxLength = 128
            Me.columnAlerts.AllowDBNull = false
            Me.columnAlertSystem.AllowDBNull = false
            Me.columnJobs.AllowDBNull = false
            Me.columnOperators.AllowDBNull = false
            Me.columnProxyAccounts.AllowDBNull = false
            Me.columnTargetServers.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtJobServerRow() As tJobServerRow
            Return CType(Me.NewRow,tJobServerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tJobServerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tJobServerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tJobServerRowChangedEvent) Is Nothing) Then
                RaiseEvent tJobServerRowChanged(Me, New tJobServerRowChangeEvent(CType(e.Row,tJobServerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tJobServerRowChangingEvent) Is Nothing) Then
                RaiseEvent tJobServerRowChanging(Me, New tJobServerRowChangeEvent(CType(e.Row,tJobServerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tJobServerRowDeletedEvent) Is Nothing) Then
                RaiseEvent tJobServerRowDeleted(Me, New tJobServerRowChangeEvent(CType(e.Row,tJobServerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tJobServerRowDeletingEvent) Is Nothing) Then
                RaiseEvent tJobServerRowDeleting(Me, New tJobServerRowChangeEvent(CType(e.Row,tJobServerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetJobServerRow(ByVal row As tJobServerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tJobServerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tInstanceDataTable
        Inherits Global.System.Data.TypedTableBase(Of tInstanceRow)
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnActiveDirectory As Global.System.Data.DataColumn
        
        Private columnAudits As Global.System.Data.DataColumn
        
        Private columnBackupDevices As Global.System.Data.DataColumn
        
        Private columnConfiguration As Global.System.Data.DataColumn
        
        Private columnCredentials As Global.System.Data.DataColumn
        
        Private columnCryptographicProviders As Global.System.Data.DataColumn
        
        Private columnDatabases As Global.System.Data.DataColumn
        
        Private columnEndPoints As Global.System.Data.DataColumn
        
        Private columnFullTextService As Global.System.Data.DataColumn
        
        Private columnInformation As Global.System.Data.DataColumn
        
        Private columnJobServer As Global.System.Data.DataColumn
        
        Private columnLinkedServers As Global.System.Data.DataColumn
        
        Private columnLogins As Global.System.Data.DataColumn
        
        Private columnMail As Global.System.Data.DataColumn
        
        Private columnProxyAccount As Global.System.Data.DataColumn
        
        Private columnResourceGovernor As Global.System.Data.DataColumn
        
        Private columnRoles As Global.System.Data.DataColumn
        
        Private columnServerAuditSpecifications As Global.System.Data.DataColumn
        
        Private columnSettings As Global.System.Data.DataColumn
        
        Private columnTriggers As Global.System.Data.DataColumn
        
        Private columnUserDefinedMessages As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tInstance"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveDirectoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveDirectory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AuditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAudits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BackupDevicesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackupDevices
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConfigurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConfiguration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CredentialsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCredentials
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CryptographicProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCryptographicProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatabasesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatabases
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EndPointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndPoints
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullTextServiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullTextService
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InformationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInformation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JobServerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobServer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LinkedServersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinkedServers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoginsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogins
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProxyAccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProxyAccount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResourceGovernorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResourceGovernor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RolesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ServerAuditSpecificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnServerAuditSpecifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SettingsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSettings
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TriggersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTriggers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserDefinedMessagesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserDefinedMessages
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tInstanceRow
            Get
                Return CType(Me.Rows(index),tInstanceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tInstanceRowChanging As tInstanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tInstanceRowChanged As tInstanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tInstanceRowDeleting As tInstanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tInstanceRowDeleted As tInstanceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtInstanceRow(ByVal row As tInstanceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtInstanceRow( _
                    ByVal parenttConnectionRowByfk_tInstance__Name__to__tConnection__InstanceName As tConnectionRow,  _
                    ByVal ActiveDirectory As Boolean,  _
                    ByVal Audits As Boolean,  _
                    ByVal BackupDevices As Boolean,  _
                    ByVal Configuration As Boolean,  _
                    ByVal Credentials As Boolean,  _
                    ByVal CryptographicProviders As Boolean,  _
                    ByVal Databases As Boolean,  _
                    ByVal EndPoints As Boolean,  _
                    ByVal FullTextService As Boolean,  _
                    ByVal Information As Boolean,  _
                    ByVal JobServer As Boolean,  _
                    ByVal LinkedServers As Boolean,  _
                    ByVal Logins As Boolean,  _
                    ByVal Mail As Boolean,  _
                    ByVal ProxyAccount As Boolean,  _
                    ByVal ResourceGovernor As Boolean,  _
                    ByVal Roles As Boolean,  _
                    ByVal ServerAuditSpecifications As Boolean,  _
                    ByVal Settings As Boolean,  _
                    ByVal Triggers As Boolean,  _
                    ByVal UserDefinedMessages As Boolean) As tInstanceRow
            Dim rowtInstanceRow As tInstanceRow = CType(Me.NewRow,tInstanceRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ActiveDirectory, Audits, BackupDevices, Configuration, Credentials, CryptographicProviders, Databases, EndPoints, FullTextService, Information, JobServer, LinkedServers, Logins, Mail, ProxyAccount, ResourceGovernor, Roles, ServerAuditSpecifications, Settings, Triggers, UserDefinedMessages}
            If (Not (parenttConnectionRowByfk_tInstance__Name__to__tConnection__InstanceName) Is Nothing) Then
                columnValuesArray(0) = parenttConnectionRowByfk_tInstance__Name__to__tConnection__InstanceName(0)
            End If
            rowtInstanceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtInstanceRow)
            Return rowtInstanceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByName(ByVal Name As String) As tInstanceRow
            Return CType(Me.Rows.Find(New Object() {Name}),tInstanceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tInstanceDataTable = CType(MyBase.Clone,tInstanceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tInstanceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnName = MyBase.Columns("Name")
            Me.columnActiveDirectory = MyBase.Columns("ActiveDirectory")
            Me.columnAudits = MyBase.Columns("Audits")
            Me.columnBackupDevices = MyBase.Columns("BackupDevices")
            Me.columnConfiguration = MyBase.Columns("Configuration")
            Me.columnCredentials = MyBase.Columns("Credentials")
            Me.columnCryptographicProviders = MyBase.Columns("CryptographicProviders")
            Me.columnDatabases = MyBase.Columns("Databases")
            Me.columnEndPoints = MyBase.Columns("EndPoints")
            Me.columnFullTextService = MyBase.Columns("FullTextService")
            Me.columnInformation = MyBase.Columns("Information")
            Me.columnJobServer = MyBase.Columns("JobServer")
            Me.columnLinkedServers = MyBase.Columns("LinkedServers")
            Me.columnLogins = MyBase.Columns("Logins")
            Me.columnMail = MyBase.Columns("Mail")
            Me.columnProxyAccount = MyBase.Columns("ProxyAccount")
            Me.columnResourceGovernor = MyBase.Columns("ResourceGovernor")
            Me.columnRoles = MyBase.Columns("Roles")
            Me.columnServerAuditSpecifications = MyBase.Columns("ServerAuditSpecifications")
            Me.columnSettings = MyBase.Columns("Settings")
            Me.columnTriggers = MyBase.Columns("Triggers")
            Me.columnUserDefinedMessages = MyBase.Columns("UserDefinedMessages")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnActiveDirectory = New Global.System.Data.DataColumn("ActiveDirectory", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveDirectory)
            Me.columnAudits = New Global.System.Data.DataColumn("Audits", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAudits)
            Me.columnBackupDevices = New Global.System.Data.DataColumn("BackupDevices", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackupDevices)
            Me.columnConfiguration = New Global.System.Data.DataColumn("Configuration", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConfiguration)
            Me.columnCredentials = New Global.System.Data.DataColumn("Credentials", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCredentials)
            Me.columnCryptographicProviders = New Global.System.Data.DataColumn("CryptographicProviders", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCryptographicProviders)
            Me.columnDatabases = New Global.System.Data.DataColumn("Databases", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatabases)
            Me.columnEndPoints = New Global.System.Data.DataColumn("EndPoints", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndPoints)
            Me.columnFullTextService = New Global.System.Data.DataColumn("FullTextService", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullTextService)
            Me.columnInformation = New Global.System.Data.DataColumn("Information", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInformation)
            Me.columnJobServer = New Global.System.Data.DataColumn("JobServer", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobServer)
            Me.columnLinkedServers = New Global.System.Data.DataColumn("LinkedServers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinkedServers)
            Me.columnLogins = New Global.System.Data.DataColumn("Logins", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogins)
            Me.columnMail = New Global.System.Data.DataColumn("Mail", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMail)
            Me.columnProxyAccount = New Global.System.Data.DataColumn("ProxyAccount", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProxyAccount)
            Me.columnResourceGovernor = New Global.System.Data.DataColumn("ResourceGovernor", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResourceGovernor)
            Me.columnRoles = New Global.System.Data.DataColumn("Roles", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoles)
            Me.columnServerAuditSpecifications = New Global.System.Data.DataColumn("ServerAuditSpecifications", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnServerAuditSpecifications)
            Me.columnSettings = New Global.System.Data.DataColumn("Settings", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSettings)
            Me.columnTriggers = New Global.System.Data.DataColumn("Triggers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTriggers)
            Me.columnUserDefinedMessages = New Global.System.Data.DataColumn("UserDefinedMessages", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserDefinedMessages)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnName}, true))
            Me.columnName.AllowDBNull = false
            Me.columnName.Unique = true
            Me.columnName.MaxLength = 128
            Me.columnActiveDirectory.AllowDBNull = false
            Me.columnAudits.AllowDBNull = false
            Me.columnBackupDevices.AllowDBNull = false
            Me.columnConfiguration.AllowDBNull = false
            Me.columnCredentials.AllowDBNull = false
            Me.columnCryptographicProviders.AllowDBNull = false
            Me.columnDatabases.AllowDBNull = false
            Me.columnEndPoints.AllowDBNull = false
            Me.columnFullTextService.AllowDBNull = false
            Me.columnInformation.AllowDBNull = false
            Me.columnJobServer.AllowDBNull = false
            Me.columnLinkedServers.AllowDBNull = false
            Me.columnLogins.AllowDBNull = false
            Me.columnMail.AllowDBNull = false
            Me.columnProxyAccount.AllowDBNull = false
            Me.columnResourceGovernor.AllowDBNull = false
            Me.columnRoles.AllowDBNull = false
            Me.columnServerAuditSpecifications.AllowDBNull = false
            Me.columnSettings.AllowDBNull = false
            Me.columnTriggers.AllowDBNull = false
            Me.columnUserDefinedMessages.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtInstanceRow() As tInstanceRow
            Return CType(Me.NewRow,tInstanceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tInstanceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tInstanceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tInstanceRowChangedEvent) Is Nothing) Then
                RaiseEvent tInstanceRowChanged(Me, New tInstanceRowChangeEvent(CType(e.Row,tInstanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tInstanceRowChangingEvent) Is Nothing) Then
                RaiseEvent tInstanceRowChanging(Me, New tInstanceRowChangeEvent(CType(e.Row,tInstanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tInstanceRowDeletedEvent) Is Nothing) Then
                RaiseEvent tInstanceRowDeleted(Me, New tInstanceRowChangeEvent(CType(e.Row,tInstanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tInstanceRowDeletingEvent) Is Nothing) Then
                RaiseEvent tInstanceRowDeleting(Me, New tInstanceRowChangeEvent(CType(e.Row,tInstanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetInstanceRow(ByVal row As tInstanceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tInstanceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tScheduleDataTable
        Inherits Global.System.Data.TypedTableBase(Of tScheduleRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnInstanceName As Global.System.Data.DataColumn
        
        Private columnInterval As Global.System.Data.DataColumn
        
        Private columnIntervalType As Global.System.Data.DataColumn
        
        Private columnIntervalBaseDt As Global.System.Data.DataColumn
        
        Private columnUseEventNotifications As Global.System.Data.DataColumn
        
        Private columnIsActive As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tSchedule"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstanceNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstanceName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IntervalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IntervalTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntervalType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IntervalBaseDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntervalBaseDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UseEventNotificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUseEventNotifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsActive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tScheduleRow
            Get
                Return CType(Me.Rows(index),tScheduleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tScheduleRowChanging As tScheduleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tScheduleRowChanged As tScheduleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tScheduleRowDeleting As tScheduleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tScheduleRowDeleted As tScheduleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtScheduleRow(ByVal row As tScheduleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtScheduleRow(ByVal parenttConnectionRowByfk_tSchedule__InstanceName__to__tConnection__InstanceName As tConnectionRow, ByVal Interval As Integer, ByVal IntervalType As String, ByVal IntervalBaseDt As Date, ByVal UseEventNotifications As Boolean, ByVal IsActive As Boolean) As tScheduleRow
            Dim rowtScheduleRow As tScheduleRow = CType(Me.NewRow,tScheduleRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Interval, IntervalType, IntervalBaseDt, UseEventNotifications, IsActive}
            If (Not (parenttConnectionRowByfk_tSchedule__InstanceName__to__tConnection__InstanceName) Is Nothing) Then
                columnValuesArray(1) = parenttConnectionRowByfk_tSchedule__InstanceName__to__tConnection__InstanceName(0)
            End If
            rowtScheduleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtScheduleRow)
            Return rowtScheduleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As tScheduleRow
            Return CType(Me.Rows.Find(New Object() {Id}),tScheduleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tScheduleDataTable = CType(MyBase.Clone,tScheduleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tScheduleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnInstanceName = MyBase.Columns("InstanceName")
            Me.columnInterval = MyBase.Columns("Interval")
            Me.columnIntervalType = MyBase.Columns("IntervalType")
            Me.columnIntervalBaseDt = MyBase.Columns("IntervalBaseDt")
            Me.columnUseEventNotifications = MyBase.Columns("UseEventNotifications")
            Me.columnIsActive = MyBase.Columns("IsActive")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnInstanceName = New Global.System.Data.DataColumn("InstanceName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstanceName)
            Me.columnInterval = New Global.System.Data.DataColumn("Interval", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterval)
            Me.columnIntervalType = New Global.System.Data.DataColumn("IntervalType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntervalType)
            Me.columnIntervalBaseDt = New Global.System.Data.DataColumn("IntervalBaseDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntervalBaseDt)
            Me.columnUseEventNotifications = New Global.System.Data.DataColumn("UseEventNotifications", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUseEventNotifications)
            Me.columnIsActive = New Global.System.Data.DataColumn("IsActive", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsActive)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnInstanceName.AllowDBNull = false
            Me.columnInstanceName.MaxLength = 128
            Me.columnInterval.AllowDBNull = false
            Me.columnIntervalType.AllowDBNull = false
            Me.columnIntervalType.MaxLength = 10
            Me.columnUseEventNotifications.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtScheduleRow() As tScheduleRow
            Return CType(Me.NewRow,tScheduleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tScheduleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tScheduleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tScheduleRowChangedEvent) Is Nothing) Then
                RaiseEvent tScheduleRowChanged(Me, New tScheduleRowChangeEvent(CType(e.Row,tScheduleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tScheduleRowChangingEvent) Is Nothing) Then
                RaiseEvent tScheduleRowChanging(Me, New tScheduleRowChangeEvent(CType(e.Row,tScheduleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tScheduleRowDeletedEvent) Is Nothing) Then
                RaiseEvent tScheduleRowDeleted(Me, New tScheduleRowChangeEvent(CType(e.Row,tScheduleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tScheduleRowDeletingEvent) Is Nothing) Then
                RaiseEvent tScheduleRowDeleting(Me, New tScheduleRowChangeEvent(CType(e.Row,tScheduleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetScheduleRow(ByVal row As tScheduleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tScheduleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tServiceBrokerDataTable
        Inherits Global.System.Data.TypedTableBase(Of tServiceBrokerRow)
        
        Private columnDatabaseName As Global.System.Data.DataColumn
        
        Private columnInstanceName As Global.System.Data.DataColumn
        
        Private columnMessageTypes As Global.System.Data.DataColumn
        
        Private columnPriorities As Global.System.Data.DataColumn
        
        Private columnQueues As Global.System.Data.DataColumn
        
        Private columnRemoteServiceBindings As Global.System.Data.DataColumn
        
        Private columnRoutes As Global.System.Data.DataColumn
        
        Private columnServiceContracts As Global.System.Data.DataColumn
        
        Private columnServices As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tServiceBroker"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatabaseNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatabaseName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstanceNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstanceName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MessageTypesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessageTypes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrioritiesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriorities
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QueuesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQueues
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemoteServiceBindingsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemoteServiceBindings
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RoutesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoutes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ServiceContractsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnServiceContracts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ServicesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnServices
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tServiceBrokerRow
            Get
                Return CType(Me.Rows(index),tServiceBrokerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceBrokerRowChanging As tServiceBrokerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceBrokerRowChanged As tServiceBrokerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceBrokerRowDeleting As tServiceBrokerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tServiceBrokerRowDeleted As tServiceBrokerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtServiceBrokerRow(ByVal row As tServiceBrokerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtServiceBrokerRow(ByVal DatabaseName As String, ByVal InstanceName As String, ByVal MessageTypes As Boolean, ByVal Priorities As Boolean, ByVal Queues As Boolean, ByVal RemoteServiceBindings As Boolean, ByVal Routes As Boolean, ByVal ServiceContracts As Boolean, ByVal Services As Boolean) As tServiceBrokerRow
            Dim rowtServiceBrokerRow As tServiceBrokerRow = CType(Me.NewRow,tServiceBrokerRow)
            Dim columnValuesArray() As Object = New Object() {DatabaseName, InstanceName, MessageTypes, Priorities, Queues, RemoteServiceBindings, Routes, ServiceContracts, Services}
            rowtServiceBrokerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtServiceBrokerRow)
            Return rowtServiceBrokerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDatabaseNameInstanceName(ByVal DatabaseName As String, ByVal InstanceName As String) As tServiceBrokerRow
            Return CType(Me.Rows.Find(New Object() {DatabaseName, InstanceName}),tServiceBrokerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tServiceBrokerDataTable = CType(MyBase.Clone,tServiceBrokerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tServiceBrokerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDatabaseName = MyBase.Columns("DatabaseName")
            Me.columnInstanceName = MyBase.Columns("InstanceName")
            Me.columnMessageTypes = MyBase.Columns("MessageTypes")
            Me.columnPriorities = MyBase.Columns("Priorities")
            Me.columnQueues = MyBase.Columns("Queues")
            Me.columnRemoteServiceBindings = MyBase.Columns("RemoteServiceBindings")
            Me.columnRoutes = MyBase.Columns("Routes")
            Me.columnServiceContracts = MyBase.Columns("ServiceContracts")
            Me.columnServices = MyBase.Columns("Services")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDatabaseName = New Global.System.Data.DataColumn("DatabaseName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatabaseName)
            Me.columnInstanceName = New Global.System.Data.DataColumn("InstanceName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstanceName)
            Me.columnMessageTypes = New Global.System.Data.DataColumn("MessageTypes", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessageTypes)
            Me.columnPriorities = New Global.System.Data.DataColumn("Priorities", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriorities)
            Me.columnQueues = New Global.System.Data.DataColumn("Queues", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQueues)
            Me.columnRemoteServiceBindings = New Global.System.Data.DataColumn("RemoteServiceBindings", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemoteServiceBindings)
            Me.columnRoutes = New Global.System.Data.DataColumn("Routes", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoutes)
            Me.columnServiceContracts = New Global.System.Data.DataColumn("ServiceContracts", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnServiceContracts)
            Me.columnServices = New Global.System.Data.DataColumn("Services", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnServices)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDatabaseName, Me.columnInstanceName}, true))
            Me.columnDatabaseName.AllowDBNull = false
            Me.columnDatabaseName.MaxLength = 128
            Me.columnInstanceName.AllowDBNull = false
            Me.columnInstanceName.MaxLength = 128
            Me.columnMessageTypes.AllowDBNull = false
            Me.columnPriorities.AllowDBNull = false
            Me.columnQueues.AllowDBNull = false
            Me.columnRemoteServiceBindings.AllowDBNull = false
            Me.columnRoutes.AllowDBNull = false
            Me.columnServiceContracts.AllowDBNull = false
            Me.columnServices.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtServiceBrokerRow() As tServiceBrokerRow
            Return CType(Me.NewRow,tServiceBrokerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tServiceBrokerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tServiceBrokerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tServiceBrokerRowChangedEvent) Is Nothing) Then
                RaiseEvent tServiceBrokerRowChanged(Me, New tServiceBrokerRowChangeEvent(CType(e.Row,tServiceBrokerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tServiceBrokerRowChangingEvent) Is Nothing) Then
                RaiseEvent tServiceBrokerRowChanging(Me, New tServiceBrokerRowChangeEvent(CType(e.Row,tServiceBrokerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tServiceBrokerRowDeletedEvent) Is Nothing) Then
                RaiseEvent tServiceBrokerRowDeleted(Me, New tServiceBrokerRowChangeEvent(CType(e.Row,tServiceBrokerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tServiceBrokerRowDeletingEvent) Is Nothing) Then
                RaiseEvent tServiceBrokerRowDeleting(Me, New tServiceBrokerRowChangeEvent(CType(e.Row,tServiceBrokerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetServiceBrokerRow(ByVal row As tServiceBrokerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tServiceBrokerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tDbDataTable
        Inherits Global.System.Data.TypedTableBase(Of tDbRow)
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnInstanceName As Global.System.Data.DataColumn
        
        Private columnActiveDirectory As Global.System.Data.DataColumn
        
        Private columnApplicationRoles As Global.System.Data.DataColumn
        
        Private columnAssemblies As Global.System.Data.DataColumn
        
        Private columnAsymmetricKeys As Global.System.Data.DataColumn
        
        Private columnCertificates As Global.System.Data.DataColumn
        
        Private columnDatabaseAuditSpecifications As Global.System.Data.DataColumn
        
        Private columnDatabaseOptions As Global.System.Data.DataColumn
        
        Private columnDefaults As Global.System.Data.DataColumn
        
        Private columnFullTextCatalogs As Global.System.Data.DataColumn
        
        Private columnFullTextStopLists As Global.System.Data.DataColumn
        
        Private columnPartitionFunctions As Global.System.Data.DataColumn
        
        Private columnPartitionSchemes As Global.System.Data.DataColumn
        
        Private columnPlanGuides As Global.System.Data.DataColumn
        
        Private columnRoles As Global.System.Data.DataColumn
        
        Private columnRules As Global.System.Data.DataColumn
        
        Private columnSchemas As Global.System.Data.DataColumn
        
        Private columnServiceBroker As Global.System.Data.DataColumn
        
        Private columnStoredProcedures As Global.System.Data.DataColumn
        
        Private columnSymmetricKeys As Global.System.Data.DataColumn
        
        Private columnSynonyms As Global.System.Data.DataColumn
        
        Private columnTables As Global.System.Data.DataColumn
        
        Private columnTriggers As Global.System.Data.DataColumn
        
        Private columnUserDefinedAggregates As Global.System.Data.DataColumn
        
        Private columnUserDefinedDataTypes As Global.System.Data.DataColumn
        
        Private columnUserDefinedFunctions As Global.System.Data.DataColumn
        
        Private columnUserDefinedTableTypes As Global.System.Data.DataColumn
        
        Private columnUserDefinedTypes As Global.System.Data.DataColumn
        
        Private columnUsers As Global.System.Data.DataColumn
        
        Private columnViews As Global.System.Data.DataColumn
        
        Private columnXMLSchemaCollections As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tDb"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstanceNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstanceName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveDirectoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveDirectory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApplicationRolesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApplicationRoles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AssembliesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAssemblies
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AsymmetricKeysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAsymmetricKeys
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CertificatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCertificates
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatabaseAuditSpecificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatabaseAuditSpecifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatabaseOptionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatabaseOptions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DefaultsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDefaults
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullTextCatalogsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullTextCatalogs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullTextStopListsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullTextStopLists
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PartitionFunctionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartitionFunctions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PartitionSchemesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartitionSchemes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PlanGuidesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlanGuides
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RolesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RulesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRules
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SchemasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSchemas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ServiceBrokerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnServiceBroker
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StoredProceduresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStoredProcedures
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SymmetricKeysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSymmetricKeys
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SynonymsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSynonyms
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TablesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TriggersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTriggers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserDefinedAggregatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserDefinedAggregates
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserDefinedDataTypesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserDefinedDataTypes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserDefinedFunctionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserDefinedFunctions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserDefinedTableTypesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserDefinedTableTypes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserDefinedTypesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserDefinedTypes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ViewsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnViews
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XMLSchemaCollectionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXMLSchemaCollections
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tDbRow
            Get
                Return CType(Me.Rows(index),tDbRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tDbRowChanging As tDbRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tDbRowChanged As tDbRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tDbRowDeleting As tDbRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tDbRowDeleted As tDbRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtDbRow(ByVal row As tDbRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtDbRow( _
                    ByVal Name As String,  _
                    ByVal parenttInstanceRowByfk_tDb__Instance__to__tInstance__Name As tInstanceRow,  _
                    ByVal ActiveDirectory As Boolean,  _
                    ByVal ApplicationRoles As Boolean,  _
                    ByVal Assemblies As Boolean,  _
                    ByVal AsymmetricKeys As Boolean,  _
                    ByVal Certificates As Boolean,  _
                    ByVal DatabaseAuditSpecifications As Boolean,  _
                    ByVal DatabaseOptions As Boolean,  _
                    ByVal Defaults As Boolean,  _
                    ByVal FullTextCatalogs As Boolean,  _
                    ByVal FullTextStopLists As Boolean,  _
                    ByVal PartitionFunctions As Boolean,  _
                    ByVal PartitionSchemes As Boolean,  _
                    ByVal PlanGuides As Boolean,  _
                    ByVal Roles As Boolean,  _
                    ByVal Rules As Boolean,  _
                    ByVal Schemas As Boolean,  _
                    ByVal ServiceBroker As Boolean,  _
                    ByVal StoredProcedures As Boolean,  _
                    ByVal SymmetricKeys As Boolean,  _
                    ByVal Synonyms As Boolean,  _
                    ByVal Tables As Boolean,  _
                    ByVal Triggers As Boolean,  _
                    ByVal UserDefinedAggregates As Boolean,  _
                    ByVal UserDefinedDataTypes As Boolean,  _
                    ByVal UserDefinedFunctions As Boolean,  _
                    ByVal UserDefinedTableTypes As Boolean,  _
                    ByVal UserDefinedTypes As Boolean,  _
                    ByVal Users As Boolean,  _
                    ByVal Views As Boolean,  _
                    ByVal XMLSchemaCollections As Boolean) As tDbRow
            Dim rowtDbRow As tDbRow = CType(Me.NewRow,tDbRow)
            Dim columnValuesArray() As Object = New Object() {Name, Nothing, ActiveDirectory, ApplicationRoles, Assemblies, AsymmetricKeys, Certificates, DatabaseAuditSpecifications, DatabaseOptions, Defaults, FullTextCatalogs, FullTextStopLists, PartitionFunctions, PartitionSchemes, PlanGuides, Roles, Rules, Schemas, ServiceBroker, StoredProcedures, SymmetricKeys, Synonyms, Tables, Triggers, UserDefinedAggregates, UserDefinedDataTypes, UserDefinedFunctions, UserDefinedTableTypes, UserDefinedTypes, Users, Views, XMLSchemaCollections}
            If (Not (parenttInstanceRowByfk_tDb__Instance__to__tInstance__Name) Is Nothing) Then
                columnValuesArray(1) = parenttInstanceRowByfk_tDb__Instance__to__tInstance__Name(0)
            End If
            rowtDbRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtDbRow)
            Return rowtDbRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByNameInstanceName(ByVal Name As String, ByVal InstanceName As String) As tDbRow
            Return CType(Me.Rows.Find(New Object() {Name, InstanceName}),tDbRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tDbDataTable = CType(MyBase.Clone,tDbDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tDbDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnName = MyBase.Columns("Name")
            Me.columnInstanceName = MyBase.Columns("InstanceName")
            Me.columnActiveDirectory = MyBase.Columns("ActiveDirectory")
            Me.columnApplicationRoles = MyBase.Columns("ApplicationRoles")
            Me.columnAssemblies = MyBase.Columns("Assemblies")
            Me.columnAsymmetricKeys = MyBase.Columns("AsymmetricKeys")
            Me.columnCertificates = MyBase.Columns("Certificates")
            Me.columnDatabaseAuditSpecifications = MyBase.Columns("DatabaseAuditSpecifications")
            Me.columnDatabaseOptions = MyBase.Columns("DatabaseOptions")
            Me.columnDefaults = MyBase.Columns("Defaults")
            Me.columnFullTextCatalogs = MyBase.Columns("FullTextCatalogs")
            Me.columnFullTextStopLists = MyBase.Columns("FullTextStopLists")
            Me.columnPartitionFunctions = MyBase.Columns("PartitionFunctions")
            Me.columnPartitionSchemes = MyBase.Columns("PartitionSchemes")
            Me.columnPlanGuides = MyBase.Columns("PlanGuides")
            Me.columnRoles = MyBase.Columns("Roles")
            Me.columnRules = MyBase.Columns("Rules")
            Me.columnSchemas = MyBase.Columns("Schemas")
            Me.columnServiceBroker = MyBase.Columns("ServiceBroker")
            Me.columnStoredProcedures = MyBase.Columns("StoredProcedures")
            Me.columnSymmetricKeys = MyBase.Columns("SymmetricKeys")
            Me.columnSynonyms = MyBase.Columns("Synonyms")
            Me.columnTables = MyBase.Columns("Tables")
            Me.columnTriggers = MyBase.Columns("Triggers")
            Me.columnUserDefinedAggregates = MyBase.Columns("UserDefinedAggregates")
            Me.columnUserDefinedDataTypes = MyBase.Columns("UserDefinedDataTypes")
            Me.columnUserDefinedFunctions = MyBase.Columns("UserDefinedFunctions")
            Me.columnUserDefinedTableTypes = MyBase.Columns("UserDefinedTableTypes")
            Me.columnUserDefinedTypes = MyBase.Columns("UserDefinedTypes")
            Me.columnUsers = MyBase.Columns("Users")
            Me.columnViews = MyBase.Columns("Views")
            Me.columnXMLSchemaCollections = MyBase.Columns("XMLSchemaCollections")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnInstanceName = New Global.System.Data.DataColumn("InstanceName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstanceName)
            Me.columnActiveDirectory = New Global.System.Data.DataColumn("ActiveDirectory", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveDirectory)
            Me.columnApplicationRoles = New Global.System.Data.DataColumn("ApplicationRoles", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApplicationRoles)
            Me.columnAssemblies = New Global.System.Data.DataColumn("Assemblies", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAssemblies)
            Me.columnAsymmetricKeys = New Global.System.Data.DataColumn("AsymmetricKeys", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAsymmetricKeys)
            Me.columnCertificates = New Global.System.Data.DataColumn("Certificates", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCertificates)
            Me.columnDatabaseAuditSpecifications = New Global.System.Data.DataColumn("DatabaseAuditSpecifications", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatabaseAuditSpecifications)
            Me.columnDatabaseOptions = New Global.System.Data.DataColumn("DatabaseOptions", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatabaseOptions)
            Me.columnDefaults = New Global.System.Data.DataColumn("Defaults", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDefaults)
            Me.columnFullTextCatalogs = New Global.System.Data.DataColumn("FullTextCatalogs", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullTextCatalogs)
            Me.columnFullTextStopLists = New Global.System.Data.DataColumn("FullTextStopLists", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullTextStopLists)
            Me.columnPartitionFunctions = New Global.System.Data.DataColumn("PartitionFunctions", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartitionFunctions)
            Me.columnPartitionSchemes = New Global.System.Data.DataColumn("PartitionSchemes", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartitionSchemes)
            Me.columnPlanGuides = New Global.System.Data.DataColumn("PlanGuides", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlanGuides)
            Me.columnRoles = New Global.System.Data.DataColumn("Roles", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoles)
            Me.columnRules = New Global.System.Data.DataColumn("Rules", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRules)
            Me.columnSchemas = New Global.System.Data.DataColumn("Schemas", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSchemas)
            Me.columnServiceBroker = New Global.System.Data.DataColumn("ServiceBroker", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnServiceBroker)
            Me.columnStoredProcedures = New Global.System.Data.DataColumn("StoredProcedures", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStoredProcedures)
            Me.columnSymmetricKeys = New Global.System.Data.DataColumn("SymmetricKeys", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSymmetricKeys)
            Me.columnSynonyms = New Global.System.Data.DataColumn("Synonyms", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSynonyms)
            Me.columnTables = New Global.System.Data.DataColumn("Tables", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTables)
            Me.columnTriggers = New Global.System.Data.DataColumn("Triggers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTriggers)
            Me.columnUserDefinedAggregates = New Global.System.Data.DataColumn("UserDefinedAggregates", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserDefinedAggregates)
            Me.columnUserDefinedDataTypes = New Global.System.Data.DataColumn("UserDefinedDataTypes", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserDefinedDataTypes)
            Me.columnUserDefinedFunctions = New Global.System.Data.DataColumn("UserDefinedFunctions", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserDefinedFunctions)
            Me.columnUserDefinedTableTypes = New Global.System.Data.DataColumn("UserDefinedTableTypes", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserDefinedTableTypes)
            Me.columnUserDefinedTypes = New Global.System.Data.DataColumn("UserDefinedTypes", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserDefinedTypes)
            Me.columnUsers = New Global.System.Data.DataColumn("Users", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsers)
            Me.columnViews = New Global.System.Data.DataColumn("Views", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnViews)
            Me.columnXMLSchemaCollections = New Global.System.Data.DataColumn("XMLSchemaCollections", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXMLSchemaCollections)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnName, Me.columnInstanceName}, true))
            Me.columnName.AllowDBNull = false
            Me.columnName.MaxLength = 128
            Me.columnInstanceName.AllowDBNull = false
            Me.columnInstanceName.MaxLength = 128
            Me.columnActiveDirectory.AllowDBNull = false
            Me.columnApplicationRoles.AllowDBNull = false
            Me.columnAssemblies.AllowDBNull = false
            Me.columnAsymmetricKeys.AllowDBNull = false
            Me.columnCertificates.AllowDBNull = false
            Me.columnDatabaseAuditSpecifications.AllowDBNull = false
            Me.columnDatabaseOptions.AllowDBNull = false
            Me.columnDefaults.AllowDBNull = false
            Me.columnFullTextCatalogs.AllowDBNull = false
            Me.columnFullTextStopLists.AllowDBNull = false
            Me.columnPartitionFunctions.AllowDBNull = false
            Me.columnPartitionSchemes.AllowDBNull = false
            Me.columnPlanGuides.AllowDBNull = false
            Me.columnRoles.AllowDBNull = false
            Me.columnRules.AllowDBNull = false
            Me.columnSchemas.AllowDBNull = false
            Me.columnServiceBroker.AllowDBNull = false
            Me.columnStoredProcedures.AllowDBNull = false
            Me.columnSymmetricKeys.AllowDBNull = false
            Me.columnSynonyms.AllowDBNull = false
            Me.columnTables.AllowDBNull = false
            Me.columnTriggers.AllowDBNull = false
            Me.columnUserDefinedAggregates.AllowDBNull = false
            Me.columnUserDefinedDataTypes.AllowDBNull = false
            Me.columnUserDefinedFunctions.AllowDBNull = false
            Me.columnUserDefinedTableTypes.AllowDBNull = false
            Me.columnUserDefinedTypes.AllowDBNull = false
            Me.columnUsers.AllowDBNull = false
            Me.columnViews.AllowDBNull = false
            Me.columnXMLSchemaCollections.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtDbRow() As tDbRow
            Return CType(Me.NewRow,tDbRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tDbRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tDbRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tDbRowChangedEvent) Is Nothing) Then
                RaiseEvent tDbRowChanged(Me, New tDbRowChangeEvent(CType(e.Row,tDbRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tDbRowChangingEvent) Is Nothing) Then
                RaiseEvent tDbRowChanging(Me, New tDbRowChangeEvent(CType(e.Row,tDbRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tDbRowDeletedEvent) Is Nothing) Then
                RaiseEvent tDbRowDeleted(Me, New tDbRowChangeEvent(CType(e.Row,tDbRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tDbRowDeletingEvent) Is Nothing) Then
                RaiseEvent tDbRowDeleting(Me, New tDbRowChangeEvent(CType(e.Row,tDbRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetDbRow(ByVal row As tDbRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tDbDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class pChangeSelectDefinitionByVersionDataTable
        Inherits Global.System.Data.TypedTableBase(Of pChangeSelectDefinitionByVersionRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnNode As Global.System.Data.DataColumn
        
        Private columnItem As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnVersion As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columnEventData As Global.System.Data.DataColumn
        
        Private columnDefinition As Global.System.Data.DataColumn
        
        Private columnDefinitionDt As Global.System.Data.DataColumn
        
        Private columnRecCreatedDt As Global.System.Data.DataColumn
        
        Private columnMinVersion As Global.System.Data.DataColumn
        
        Private columnMaxVersion As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "pChangeSelectDefinitionByVersion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EventDataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEventData
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DefinitionDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDefinitionDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecCreatedDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecCreatedDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MinVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MaxVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As pChangeSelectDefinitionByVersionRow
            Get
                Return CType(Me.Rows(index),pChangeSelectDefinitionByVersionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeSelectDefinitionByVersionRowChanging As pChangeSelectDefinitionByVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeSelectDefinitionByVersionRowChanged As pChangeSelectDefinitionByVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeSelectDefinitionByVersionRowDeleting As pChangeSelectDefinitionByVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangeSelectDefinitionByVersionRowDeleted As pChangeSelectDefinitionByVersionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddpChangeSelectDefinitionByVersionRow(ByVal row As pChangeSelectDefinitionByVersionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddpChangeSelectDefinitionByVersionRow(ByVal Node As String, ByVal Item As String, ByVal Type As String, ByVal Version As Integer, ByVal Action As String, ByVal EventData As String, ByVal Definition As String, ByVal DefinitionDt As Date, ByVal RecCreatedDt As Date, ByVal MinVersion As Integer, ByVal MaxVersion As Integer) As pChangeSelectDefinitionByVersionRow
            Dim rowpChangeSelectDefinitionByVersionRow As pChangeSelectDefinitionByVersionRow = CType(Me.NewRow,pChangeSelectDefinitionByVersionRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Node, Item, Type, Version, Action, EventData, Definition, DefinitionDt, RecCreatedDt, MinVersion, MaxVersion}
            rowpChangeSelectDefinitionByVersionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpChangeSelectDefinitionByVersionRow)
            Return rowpChangeSelectDefinitionByVersionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByid(ByVal id As Integer) As pChangeSelectDefinitionByVersionRow
            Return CType(Me.Rows.Find(New Object() {id}),pChangeSelectDefinitionByVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As pChangeSelectDefinitionByVersionDataTable = CType(MyBase.Clone,pChangeSelectDefinitionByVersionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New pChangeSelectDefinitionByVersionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("Id")
            Me.columnNode = MyBase.Columns("Node")
            Me.columnItem = MyBase.Columns("Item")
            Me.columnType = MyBase.Columns("Type")
            Me.columnVersion = MyBase.Columns("Version")
            Me.columnAction = MyBase.Columns("Action")
            Me.columnEventData = MyBase.Columns("EventData")
            Me.columnDefinition = MyBase.Columns("Definition")
            Me.columnDefinitionDt = MyBase.Columns("DefinitionDt")
            Me.columnRecCreatedDt = MyBase.Columns("RecCreatedDt")
            Me.columnMinVersion = MyBase.Columns("MinVersion")
            Me.columnMaxVersion = MyBase.Columns("MaxVersion")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            Me.columnid.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "id")
            Me.columnid.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "idColumn")
            Me.columnid.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnid")
            Me.columnid.ExtendedProperties.Add("Generator_UserColumnName", "Id")
            MyBase.Columns.Add(Me.columnid)
            Me.columnNode = New Global.System.Data.DataColumn("Node", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNode)
            Me.columnItem = New Global.System.Data.DataColumn("Item", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item")
            Me.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn")
            Me.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem")
            Me.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item")
            MyBase.Columns.Add(Me.columnItem)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnVersion = New Global.System.Data.DataColumn("Version", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columnEventData = New Global.System.Data.DataColumn("EventData", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEventData)
            Me.columnDefinition = New Global.System.Data.DataColumn("Definition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDefinition)
            Me.columnDefinitionDt = New Global.System.Data.DataColumn("DefinitionDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDefinitionDt)
            Me.columnRecCreatedDt = New Global.System.Data.DataColumn("RecCreatedDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecCreatedDt)
            Me.columnMinVersion = New Global.System.Data.DataColumn("MinVersion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinVersion)
            Me.columnMaxVersion = New Global.System.Data.DataColumn("MaxVersion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxVersion)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnNode.ReadOnly = true
            Me.columnNode.MaxLength = 4000
            Me.columnItem.ReadOnly = true
            Me.columnItem.MaxLength = 4000
            Me.columnType.ReadOnly = true
            Me.columnType.MaxLength = 4000
            Me.columnAction.AllowDBNull = false
            Me.columnAction.MaxLength = 30
            Me.columnEventData.ReadOnly = true
            Me.columnEventData.MaxLength = 2147483647
            Me.columnDefinition.MaxLength = 2147483647
            Me.columnRecCreatedDt.AllowDBNull = false
            Me.columnMinVersion.ReadOnly = true
            Me.columnMaxVersion.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewpChangeSelectDefinitionByVersionRow() As pChangeSelectDefinitionByVersionRow
            Return CType(Me.NewRow,pChangeSelectDefinitionByVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New pChangeSelectDefinitionByVersionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(pChangeSelectDefinitionByVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.pChangeSelectDefinitionByVersionRowChangedEvent) Is Nothing) Then
                RaiseEvent pChangeSelectDefinitionByVersionRowChanged(Me, New pChangeSelectDefinitionByVersionRowChangeEvent(CType(e.Row,pChangeSelectDefinitionByVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.pChangeSelectDefinitionByVersionRowChangingEvent) Is Nothing) Then
                RaiseEvent pChangeSelectDefinitionByVersionRowChanging(Me, New pChangeSelectDefinitionByVersionRowChangeEvent(CType(e.Row,pChangeSelectDefinitionByVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.pChangeSelectDefinitionByVersionRowDeletedEvent) Is Nothing) Then
                RaiseEvent pChangeSelectDefinitionByVersionRowDeleted(Me, New pChangeSelectDefinitionByVersionRowChangeEvent(CType(e.Row,pChangeSelectDefinitionByVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.pChangeSelectDefinitionByVersionRowDeletingEvent) Is Nothing) Then
                RaiseEvent pChangeSelectDefinitionByVersionRowDeleting(Me, New pChangeSelectDefinitionByVersionRowChangeEvent(CType(e.Row,pChangeSelectDefinitionByVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovepChangeSelectDefinitionByVersionRow(ByVal row As pChangeSelectDefinitionByVersionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "pChangeSelectDefinitionByVersionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class pChangesForArchiveDataTable
        Inherits Global.System.Data.TypedTableBase(Of pChangesForArchiveRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnNode As Global.System.Data.DataColumn
        
        Private columnDatabase As Global.System.Data.DataColumn
        
        Private columnCollection As Global.System.Data.DataColumn
        
        Private columnChangeItem As Global.System.Data.DataColumn
        
        Private columnVersion As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columnRecCreatedDt As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "pChangesForArchive"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatabaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatabase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CollectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChangeItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChangeItem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecCreatedDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecCreatedDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As pChangesForArchiveRow
            Get
                Return CType(Me.Rows(index),pChangesForArchiveRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForArchiveRowChanging As pChangesForArchiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForArchiveRowChanged As pChangesForArchiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForArchiveRowDeleting As pChangesForArchiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForArchiveRowDeleted As pChangesForArchiveRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddpChangesForArchiveRow(ByVal row As pChangesForArchiveRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddpChangesForArchiveRow(ByVal Node As String, ByVal Database As String, ByVal Collection As String, ByVal ChangeItem As String, ByVal Version As Integer, ByVal Action As String, ByVal RecCreatedDt As Date) As pChangesForArchiveRow
            Dim rowpChangesForArchiveRow As pChangesForArchiveRow = CType(Me.NewRow,pChangesForArchiveRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Node, Database, Collection, ChangeItem, Version, Action, RecCreatedDt}
            rowpChangesForArchiveRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpChangesForArchiveRow)
            Return rowpChangesForArchiveRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As pChangesForArchiveRow
            Return CType(Me.Rows.Find(New Object() {Id}),pChangesForArchiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As pChangesForArchiveDataTable = CType(MyBase.Clone,pChangesForArchiveDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New pChangesForArchiveDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnNode = MyBase.Columns("Node")
            Me.columnDatabase = MyBase.Columns("Database")
            Me.columnCollection = MyBase.Columns("Collection")
            Me.columnChangeItem = MyBase.Columns("ChangeItem")
            Me.columnVersion = MyBase.Columns("Version")
            Me.columnAction = MyBase.Columns("Action")
            Me.columnRecCreatedDt = MyBase.Columns("RecCreatedDt")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnNode = New Global.System.Data.DataColumn("Node", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNode)
            Me.columnDatabase = New Global.System.Data.DataColumn("Database", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatabase)
            Me.columnCollection = New Global.System.Data.DataColumn("Collection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollection)
            Me.columnChangeItem = New Global.System.Data.DataColumn("ChangeItem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChangeItem)
            Me.columnVersion = New Global.System.Data.DataColumn("Version", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columnRecCreatedDt = New Global.System.Data.DataColumn("RecCreatedDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecCreatedDt)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnNode.ReadOnly = true
            Me.columnNode.MaxLength = 4000
            Me.columnDatabase.ReadOnly = true
            Me.columnDatabase.MaxLength = 4000
            Me.columnCollection.ReadOnly = true
            Me.columnCollection.MaxLength = 4000
            Me.columnChangeItem.ReadOnly = true
            Me.columnChangeItem.MaxLength = 4000
            Me.columnAction.AllowDBNull = false
            Me.columnAction.MaxLength = 30
            Me.columnRecCreatedDt.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewpChangesForArchiveRow() As pChangesForArchiveRow
            Return CType(Me.NewRow,pChangesForArchiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New pChangesForArchiveRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(pChangesForArchiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.pChangesForArchiveRowChangedEvent) Is Nothing) Then
                RaiseEvent pChangesForArchiveRowChanged(Me, New pChangesForArchiveRowChangeEvent(CType(e.Row,pChangesForArchiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.pChangesForArchiveRowChangingEvent) Is Nothing) Then
                RaiseEvent pChangesForArchiveRowChanging(Me, New pChangesForArchiveRowChangeEvent(CType(e.Row,pChangesForArchiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.pChangesForArchiveRowDeletedEvent) Is Nothing) Then
                RaiseEvent pChangesForArchiveRowDeleted(Me, New pChangesForArchiveRowChangeEvent(CType(e.Row,pChangesForArchiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.pChangesForArchiveRowDeletingEvent) Is Nothing) Then
                RaiseEvent pChangesForArchiveRowDeleting(Me, New pChangesForArchiveRowChangeEvent(CType(e.Row,pChangesForArchiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovepChangesForArchiveRow(ByVal row As pChangesForArchiveRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "pChangesForArchiveDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class pChangesForDateDataTable
        Inherits Global.System.Data.TypedTableBase(Of pChangesForDateRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnNode As Global.System.Data.DataColumn
        
        Private columnDatabase As Global.System.Data.DataColumn
        
        Private columnCollection As Global.System.Data.DataColumn
        
        Private columnChangeItem As Global.System.Data.DataColumn
        
        Private columnVersion As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columnRecCreatedDt As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "pChangesForDate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatabaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatabase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CollectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChangeItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChangeItem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecCreatedDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecCreatedDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As pChangesForDateRow
            Get
                Return CType(Me.Rows(index),pChangesForDateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForDateRowChanging As pChangesForDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForDateRowChanged As pChangesForDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForDateRowDeleting As pChangesForDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pChangesForDateRowDeleted As pChangesForDateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddpChangesForDateRow(ByVal row As pChangesForDateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddpChangesForDateRow(ByVal Node As String, ByVal Database As String, ByVal Collection As String, ByVal ChangeItem As String, ByVal Version As Integer, ByVal Action As String, ByVal RecCreatedDt As Date) As pChangesForDateRow
            Dim rowpChangesForDateRow As pChangesForDateRow = CType(Me.NewRow,pChangesForDateRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Node, Database, Collection, ChangeItem, Version, Action, RecCreatedDt}
            rowpChangesForDateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpChangesForDateRow)
            Return rowpChangesForDateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As pChangesForDateRow
            Return CType(Me.Rows.Find(New Object() {Id}),pChangesForDateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As pChangesForDateDataTable = CType(MyBase.Clone,pChangesForDateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New pChangesForDateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnNode = MyBase.Columns("Node")
            Me.columnDatabase = MyBase.Columns("Database")
            Me.columnCollection = MyBase.Columns("Collection")
            Me.columnChangeItem = MyBase.Columns("ChangeItem")
            Me.columnVersion = MyBase.Columns("Version")
            Me.columnAction = MyBase.Columns("Action")
            Me.columnRecCreatedDt = MyBase.Columns("RecCreatedDt")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnNode = New Global.System.Data.DataColumn("Node", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNode)
            Me.columnDatabase = New Global.System.Data.DataColumn("Database", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatabase)
            Me.columnCollection = New Global.System.Data.DataColumn("Collection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollection)
            Me.columnChangeItem = New Global.System.Data.DataColumn("ChangeItem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChangeItem)
            Me.columnVersion = New Global.System.Data.DataColumn("Version", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columnRecCreatedDt = New Global.System.Data.DataColumn("RecCreatedDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecCreatedDt)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnNode.ReadOnly = true
            Me.columnNode.MaxLength = 4000
            Me.columnDatabase.ReadOnly = true
            Me.columnDatabase.MaxLength = 4000
            Me.columnCollection.ReadOnly = true
            Me.columnCollection.MaxLength = 4000
            Me.columnChangeItem.ReadOnly = true
            Me.columnChangeItem.MaxLength = 4000
            Me.columnAction.AllowDBNull = false
            Me.columnAction.MaxLength = 30
            Me.columnRecCreatedDt.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewpChangesForDateRow() As pChangesForDateRow
            Return CType(Me.NewRow,pChangesForDateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New pChangesForDateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(pChangesForDateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.pChangesForDateRowChangedEvent) Is Nothing) Then
                RaiseEvent pChangesForDateRowChanged(Me, New pChangesForDateRowChangeEvent(CType(e.Row,pChangesForDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.pChangesForDateRowChangingEvent) Is Nothing) Then
                RaiseEvent pChangesForDateRowChanging(Me, New pChangesForDateRowChangeEvent(CType(e.Row,pChangesForDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.pChangesForDateRowDeletedEvent) Is Nothing) Then
                RaiseEvent pChangesForDateRowDeleted(Me, New pChangesForDateRowChangeEvent(CType(e.Row,pChangesForDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.pChangesForDateRowDeletingEvent) Is Nothing) Then
                RaiseEvent pChangesForDateRowDeleting(Me, New pChangesForDateRowChangeEvent(CType(e.Row,pChangesForDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovepChangesForDateRow(ByVal row As pChangesForDateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "pChangesForDateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tArchiveLogDataTable
        Inherits Global.System.Data.TypedTableBase(Of tArchiveLogRow)
        
        Private columnScheduleId As Global.System.Data.DataColumn
        
        Private columnInstanceName As Global.System.Data.DataColumn
        
        Private columnNbrDDLEventsProcessed As Global.System.Data.DataColumn
        
        Private columnNbrItemsProcessed As Global.System.Data.DataColumn
        
        Private columnNbrItemsAdded As Global.System.Data.DataColumn
        
        Private columnNbrItemsChanged As Global.System.Data.DataColumn
        
        Private columnNbrItemsDeleted As Global.System.Data.DataColumn
        
        Private columnScheduledStartDt As Global.System.Data.DataColumn
        
        Private columnActualStartDt As Global.System.Data.DataColumn
        
        Private columnActualEndDt As Global.System.Data.DataColumn
        
        Private columnRecCreatedUser As Global.System.Data.DataColumn
        
        Private columnArchiveError As Global.System.Data.DataColumn
        
        Private columnArchiveLogId As Global.System.Data.DataColumn
        
        Private columnInterval As Global.System.Data.DataColumn
        
        Private columnIntervalType As Global.System.Data.DataColumn
        
        Private columnIntervalBaseDt As Global.System.Data.DataColumn
        
        Private columnUseEventNotifications As Global.System.Data.DataColumn
        
        Private columnIsActive As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tArchiveLog"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScheduleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScheduleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstanceNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstanceName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NbrDDLEventsProcessedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNbrDDLEventsProcessed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NbrItemsProcessedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNbrItemsProcessed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NbrItemsAddedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNbrItemsAdded
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NbrItemsChangedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNbrItemsChanged
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NbrItemsDeletedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNbrItemsDeleted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScheduledStartDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScheduledStartDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActualStartDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActualStartDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActualEndDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActualEndDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecCreatedUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecCreatedUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ArchiveErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArchiveError
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ArchiveLogIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArchiveLogId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IntervalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IntervalTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntervalType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IntervalBaseDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntervalBaseDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UseEventNotificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUseEventNotifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsActive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tArchiveLogRow
            Get
                Return CType(Me.Rows(index),tArchiveLogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tArchiveLogRowChanging As tArchiveLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tArchiveLogRowChanged As tArchiveLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tArchiveLogRowDeleting As tArchiveLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tArchiveLogRowDeleted As tArchiveLogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtArchiveLogRow(ByVal row As tArchiveLogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtArchiveLogRow( _
                    ByVal ScheduleId As Integer,  _
                    ByVal InstanceName As String,  _
                    ByVal NbrDDLEventsProcessed As Integer,  _
                    ByVal NbrItemsProcessed As Integer,  _
                    ByVal NbrItemsAdded As Integer,  _
                    ByVal NbrItemsChanged As Integer,  _
                    ByVal NbrItemsDeleted As Integer,  _
                    ByVal ScheduledStartDt As Date,  _
                    ByVal ActualStartDt As Date,  _
                    ByVal ActualEndDt As Date,  _
                    ByVal RecCreatedUser As String,  _
                    ByVal ArchiveError As String,  _
                    ByVal Interval As Integer,  _
                    ByVal IntervalType As String,  _
                    ByVal IntervalBaseDt As Date,  _
                    ByVal UseEventNotifications As Boolean,  _
                    ByVal IsActive As Boolean) As tArchiveLogRow
            Dim rowtArchiveLogRow As tArchiveLogRow = CType(Me.NewRow,tArchiveLogRow)
            Dim columnValuesArray() As Object = New Object() {ScheduleId, InstanceName, NbrDDLEventsProcessed, NbrItemsProcessed, NbrItemsAdded, NbrItemsChanged, NbrItemsDeleted, ScheduledStartDt, ActualStartDt, ActualEndDt, RecCreatedUser, ArchiveError, Nothing, Interval, IntervalType, IntervalBaseDt, UseEventNotifications, IsActive}
            rowtArchiveLogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtArchiveLogRow)
            Return rowtArchiveLogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByArchiveLogId(ByVal ArchiveLogId As Integer) As tArchiveLogRow
            Return CType(Me.Rows.Find(New Object() {ArchiveLogId}),tArchiveLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tArchiveLogDataTable = CType(MyBase.Clone,tArchiveLogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tArchiveLogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnScheduleId = MyBase.Columns("ScheduleId")
            Me.columnInstanceName = MyBase.Columns("InstanceName")
            Me.columnNbrDDLEventsProcessed = MyBase.Columns("NbrDDLEventsProcessed")
            Me.columnNbrItemsProcessed = MyBase.Columns("NbrItemsProcessed")
            Me.columnNbrItemsAdded = MyBase.Columns("NbrItemsAdded")
            Me.columnNbrItemsChanged = MyBase.Columns("NbrItemsChanged")
            Me.columnNbrItemsDeleted = MyBase.Columns("NbrItemsDeleted")
            Me.columnScheduledStartDt = MyBase.Columns("ScheduledStartDt")
            Me.columnActualStartDt = MyBase.Columns("ActualStartDt")
            Me.columnActualEndDt = MyBase.Columns("ActualEndDt")
            Me.columnRecCreatedUser = MyBase.Columns("RecCreatedUser")
            Me.columnArchiveError = MyBase.Columns("ArchiveError")
            Me.columnArchiveLogId = MyBase.Columns("ArchiveLogId")
            Me.columnInterval = MyBase.Columns("Interval")
            Me.columnIntervalType = MyBase.Columns("IntervalType")
            Me.columnIntervalBaseDt = MyBase.Columns("IntervalBaseDt")
            Me.columnUseEventNotifications = MyBase.Columns("UseEventNotifications")
            Me.columnIsActive = MyBase.Columns("IsActive")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnScheduleId = New Global.System.Data.DataColumn("ScheduleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScheduleId)
            Me.columnInstanceName = New Global.System.Data.DataColumn("InstanceName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstanceName)
            Me.columnNbrDDLEventsProcessed = New Global.System.Data.DataColumn("NbrDDLEventsProcessed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNbrDDLEventsProcessed)
            Me.columnNbrItemsProcessed = New Global.System.Data.DataColumn("NbrItemsProcessed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNbrItemsProcessed)
            Me.columnNbrItemsAdded = New Global.System.Data.DataColumn("NbrItemsAdded", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNbrItemsAdded)
            Me.columnNbrItemsChanged = New Global.System.Data.DataColumn("NbrItemsChanged", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNbrItemsChanged)
            Me.columnNbrItemsDeleted = New Global.System.Data.DataColumn("NbrItemsDeleted", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNbrItemsDeleted)
            Me.columnScheduledStartDt = New Global.System.Data.DataColumn("ScheduledStartDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScheduledStartDt)
            Me.columnActualStartDt = New Global.System.Data.DataColumn("ActualStartDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActualStartDt)
            Me.columnActualEndDt = New Global.System.Data.DataColumn("ActualEndDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActualEndDt)
            Me.columnRecCreatedUser = New Global.System.Data.DataColumn("RecCreatedUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecCreatedUser)
            Me.columnArchiveError = New Global.System.Data.DataColumn("ArchiveError", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArchiveError)
            Me.columnArchiveLogId = New Global.System.Data.DataColumn("ArchiveLogId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArchiveLogId)
            Me.columnInterval = New Global.System.Data.DataColumn("Interval", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterval)
            Me.columnIntervalType = New Global.System.Data.DataColumn("IntervalType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntervalType)
            Me.columnIntervalBaseDt = New Global.System.Data.DataColumn("IntervalBaseDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntervalBaseDt)
            Me.columnUseEventNotifications = New Global.System.Data.DataColumn("UseEventNotifications", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUseEventNotifications)
            Me.columnIsActive = New Global.System.Data.DataColumn("IsActive", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsActive)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnArchiveLogId}, true))
            Me.columnScheduleId.AllowDBNull = false
            Me.columnInstanceName.AllowDBNull = false
            Me.columnInstanceName.MaxLength = 128
            Me.columnActualStartDt.AllowDBNull = false
            Me.columnActualEndDt.AllowDBNull = false
            Me.columnRecCreatedUser.AllowDBNull = false
            Me.columnRecCreatedUser.MaxLength = 128
            Me.columnArchiveError.MaxLength = 2147483647
            Me.columnArchiveLogId.AutoIncrement = true
            Me.columnArchiveLogId.AutoIncrementSeed = -1
            Me.columnArchiveLogId.AutoIncrementStep = -1
            Me.columnArchiveLogId.AllowDBNull = false
            Me.columnArchiveLogId.ReadOnly = true
            Me.columnArchiveLogId.Unique = true
            Me.columnInterval.AllowDBNull = false
            Me.columnIntervalType.AllowDBNull = false
            Me.columnIntervalType.MaxLength = 10
            Me.columnUseEventNotifications.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtArchiveLogRow() As tArchiveLogRow
            Return CType(Me.NewRow,tArchiveLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tArchiveLogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tArchiveLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tArchiveLogRowChangedEvent) Is Nothing) Then
                RaiseEvent tArchiveLogRowChanged(Me, New tArchiveLogRowChangeEvent(CType(e.Row,tArchiveLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tArchiveLogRowChangingEvent) Is Nothing) Then
                RaiseEvent tArchiveLogRowChanging(Me, New tArchiveLogRowChangeEvent(CType(e.Row,tArchiveLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tArchiveLogRowDeletedEvent) Is Nothing) Then
                RaiseEvent tArchiveLogRowDeleted(Me, New tArchiveLogRowChangeEvent(CType(e.Row,tArchiveLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tArchiveLogRowDeletingEvent) Is Nothing) Then
                RaiseEvent tArchiveLogRowDeleting(Me, New tArchiveLogRowChangeEvent(CType(e.Row,tArchiveLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetArchiveLogRow(ByVal row As tArchiveLogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSQLConfiguration = New dsSQLConfiguration()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tArchiveLogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tSQLCfgRow
        Inherits Global.System.Data.DataRow
        
        Private tabletSQLCfg As tSQLCfgDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletSQLCfg = CType(Me.Table,tSQLCfgDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LicensedCompany() As String
            Get
                Return CType(Me(Me.tabletSQLCfg.LicensedCompanyColumn),String)
            End Get
            Set
                Me(Me.tabletSQLCfg.LicensedCompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LicensedUser() As String
            Get
                Return CType(Me(Me.tabletSQLCfg.LicensedUserColumn),String)
            End Get
            Set
                Me(Me.tabletSQLCfg.LicensedUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LicenseCode() As String
            Get
                Return CType(Me(Me.tabletSQLCfg.LicenseCodeColumn),String)
            End Get
            Set
                Me(Me.tabletSQLCfg.LicenseCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LicensedInstanceCount() As Integer
            Get
                Return CType(Me(Me.tabletSQLCfg.LicensedInstanceCountColumn),Integer)
            End Get
            Set
                Me(Me.tabletSQLCfg.LicensedInstanceCountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LicenseDate() As String
            Get
                Return CType(Me(Me.tabletSQLCfg.LicenseDateColumn),String)
            End Get
            Set
                Me(Me.tabletSQLCfg.LicenseDateColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tServiceSettingsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletServiceSettings As tServiceSettingsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletServiceSettings = CType(Me.Table,tServiceSettingsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.NameColumn),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AddDatabasesUponDiscovery() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.AddDatabasesUponDiscoveryColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.AddDatabasesUponDiscoveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetEventNotificationDatabase() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.TargetEventNotificationDatabaseColumn),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.TargetEventNotificationDatabaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_Batch__Separator() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_Batch__SeparatorColumn),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_Batch__SeparatorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Misc_Ignore__Blank__Lines() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Misc_Ignore__Blank__LinesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Misc_Ignore__Blank__LinesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Misc_Display__Output_Show__Comparison__Details() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Misc_Display__Output_Show__Comparison__DetailsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Misc_Display__Output_Show__Comparison__DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_Include__DROP__In__Script() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_Include__DROP__In__ScriptColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_Include__DROP__In__ScriptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_Include__IF__EXISTS__With__Drop() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_Include__IF__EXISTS__With__DropColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_Include__IF__EXISTS__With__DropColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Misc_Display__Output_Show__Scripts__For__Unmatched__Items() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Misc_Display__Output_Show__Scripts__For__Unmatched__ItemsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Misc_Display__Output_Show__Scripts__For__Unmatched__ItemsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_Multiline_7() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_Multiline_7Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_Multiline_7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_Compiled_1() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_Compiled_1Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_Compiled_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_SingleLine_9() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_SingleLine_9Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_SingleLine_9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Pattern_1() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Pattern_1Column),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Pattern_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineReplace__Replacement_2() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Replacement_2Column),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineReplace__Replacement_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_Multiline_7() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_Multiline_7Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_Multiline_7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_Compiled_1() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_Compiled_1Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_Compiled_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_SingleLine_9() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_SingleLine_9Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_SingleLine_9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_LineSplit__Pattern_3() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Pattern_3Column),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_LineSplit__Pattern_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_Multiline_7() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_Multiline_7Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_Multiline_7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_Compiled_1() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_Compiled_1Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_Compiled_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_SingleLine_9() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_SingleLine_9Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_SingleLine_9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular__Expressions_NameMatch__Pattern_4() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Pattern_4Column),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.Regular__Expressions_NameMatch__Pattern_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_AgentAlertJob_1() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_AgentAlertJob_1Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_AgentAlertJob_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_AgentJobId_2() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_AgentJobId_2Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_AgentJobId_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_AgentNotify_3() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_AgentNotify_3Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_AgentNotify_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_AllowSystemObjects_10() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_AllowSystemObjects_10Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_AllowSystemObjects_10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_AnsiFile_20() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_AnsiFile_20Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_AnsiFile_20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_AnsiPadding_30() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_AnsiPadding_30Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_AnsiPadding_30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_Bindings_40() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_Bindings_40Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_Bindings_40Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ClusteredIndexes_50() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ClusteredIndexes_50Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ClusteredIndexes_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ContinueScriptingOnError_60() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ContinueScriptingOnError_60Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ContinueScriptingOnError_60Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DdlBodyOnly_80() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DdlBodyOnly_80Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DdlBodyOnly_80Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DdlHeaderOnly_90() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DdlHeaderOnly_90Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DdlHeaderOnly_90Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_Default_100() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_Default_100Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_Default_100Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriAll_110() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriAll_110Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriAll_110Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriAllConstraints_120() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriAllConstraints_120Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriAllConstraints_120Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriAllKeys_130() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriAllKeys_130Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriAllKeys_130Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriChecks_140() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriChecks_140Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriChecks_140Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriClustered_150() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriClustered_150Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriClustered_150Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriDefaults_160() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriDefaults_160Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriDefaults_160Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriForeignKeys_170() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriForeignKeys_170Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriForeignKeys_170Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriIncludeSystemNames_180() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriIncludeSystemNames_180Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriIncludeSystemNames_180Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriIndexes_190() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriIndexes_190Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriIndexes_190Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriNonClustered_200() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriNonClustered_200Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriNonClustered_200Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriPrimaryKey_210() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriPrimaryKey_210Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriPrimaryKey_210Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriUniqueKeys_220() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriUniqueKeys_220Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriUniqueKeys_220Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_DriWithNoCheck_230() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriWithNoCheck_230Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_DriWithNoCheck_230Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_Encoding_240() As String
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_Encoding_240Column),String)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_Encoding_240Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_EnforceScriptingOptions_250() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_EnforceScriptingOptions_250Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_EnforceScriptingOptions_250Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ExtendedProperties_260() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ExtendedProperties_260Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ExtendedProperties_260Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_FullTextCatalogs_270() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_FullTextCatalogs_270Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_FullTextCatalogs_270Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_FullTextindexes_280() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_FullTextindexes_280Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_FullTextindexes_280Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_IncludeDatabaseContext_290() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeDatabaseContext_290Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeDatabaseContext_290Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_IncludeHeaders_300() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeHeaders_300Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeHeaders_300Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_IncludeIfNotExists_301() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeIfNotExists_301Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeIfNotExists_301Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_Indexes_310() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_Indexes_310Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_Indexes_310Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_LoginSID_320() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_LoginSID_320Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_LoginSID_320Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoAssemblies_330() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoAssemblies_330Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoAssemblies_330Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoCollation_340() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoCollation_340Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoCollation_340Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoCommandTerminator_350() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoCommandTerminator_350Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoCommandTerminator_350Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoExecuteAs_360() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoExecuteAs_360Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoExecuteAs_360Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoFilegroup_370() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoFilegroup_370Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoFilegroup_370Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoIdentities_380() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoIdentities_380Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoIdentities_380Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoIndexPartitioningSchemes_390() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoIndexPartitioningSchemes_390Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoIndexPartitioningSchemes_390Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoMailProfileAccounts_400() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoMailProfileAccounts_400Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoMailProfileAccounts_400Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoMailProfilePrincipals_410() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoMailProfilePrincipals_410Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoMailProfilePrincipals_410Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NonClusteredIndexes_420() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NonClusteredIndexes_420Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NonClusteredIndexes_420Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoTablePartitioningSchemes_430() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoTablePartitioningSchemes_430Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoTablePartitioningSchemes_430Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoVarDecimal_431() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoVarDecimal_431Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoVarDecimal_431Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoViewColumns_440() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoViewColumns_440Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoViewColumns_440Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoXMLNameSpaces_450() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoXMLNameSpaces_450Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoXMLNameSpaces_450Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_OptimizerData_460() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_OptimizerData_460Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_OptimizerData_460Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_Permissions_470() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_Permissions_470Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_Permissions_470Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_PrimaryObject_480() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_PrimaryObject_480Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_PrimaryObject_480Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_SchemaQualify_490() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_SchemaQualify_490Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_SchemaQualify_490Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_Statistics_510() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_Statistics_510Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_Statistics_510Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_TimestampToBinary_520() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_TimestampToBinary_520Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_TimestampToBinary_520Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_TargetServerVersion_530() As Integer
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_TargetServerVersion_530Column),Integer)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_TargetServerVersion_530Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_Triggers_540() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_Triggers_540Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_Triggers_540Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_WithDependencies_550() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_WithDependencies_550Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_WithDependencies_550Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_XMLIndexes_560() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_XMLIndexes_560Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_XMLIndexes_560Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_BatchSize_35() As Integer
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_BatchSize_35Column),Integer)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_BatchSize_35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ChangeTracking_45() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ChangeTracking_45Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ChangeTracking_45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_FullTextStopLists_285() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_FullTextStopLists_285Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_FullTextStopLists_285Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoFileStream_373() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoFileStream_373Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoFileStream_373Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_NoFileStreamColumn_376() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoFileStreamColumn_376Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_NoFileStreamColumn_376Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ScriptBatchTerminator_502() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptBatchTerminator_502Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptBatchTerminator_502Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ScriptData_503() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptData_503Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptData_503Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ScriptDataCompression_505() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptDataCompression_505Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptDataCompression_505Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ScriptDrops_506() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptDrops_506Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptDrops_506Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ScriptOwner_508() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptOwner_508Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptOwner_508Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scripting__Options_SMO_ScriptSchema_509() As Boolean
            Get
                Return CType(Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptSchema_509Column),Boolean)
            End Get
            Set
                Me(Me.tabletServiceSettings.Scripting__Options_SMO_ScriptSchema_509Column) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tChangeRow
        Inherits Global.System.Data.DataRow
        
        Private tabletChange As tChangeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletChange = CType(Me.Table,tChangeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tabletChange.IdColumn),Integer)
            End Get
            Set
                Me(Me.tabletChange.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Node() As String
            Get
                Try 
                    Return CType(Me(Me.tabletChange.NodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Node' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.NodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DbName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletChange.DbNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DbName' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.DbNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletChange.SubTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubType' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.SubTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Collection() As String
            Get
                Try 
                    Return CType(Me(Me.tabletChange.CollectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Collection' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.CollectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item() As String
            Get
                Try 
                    Return CType(Me(Me.tabletChange.ItemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Length() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletChange.LengthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Length' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.LengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Version() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletChange.VersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.VersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Action() As String
            Get
                Return CType(Me(Me.tabletChange.ActionColumn),String)
            End Get
            Set
                Me(Me.tabletChange.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HasEventData() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletChange.HasEventDataColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HasEventData' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.HasEventDataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChangeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletChange.ChangeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChangeDate' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.ChangeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Database() As String
            Get
                Try 
                    Return CType(Me(Me.tabletChange.DatabaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Database' in table 'tChange' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletChange.DatabaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNodeNull() As Boolean
            Return Me.IsNull(Me.tabletChange.NodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNodeNull()
            Me(Me.tabletChange.NodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDbNameNull() As Boolean
            Return Me.IsNull(Me.tabletChange.DbNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDbNameNull()
            Me(Me.tabletChange.DbNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubTypeNull() As Boolean
            Return Me.IsNull(Me.tabletChange.SubTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubTypeNull()
            Me(Me.tabletChange.SubTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCollectionNull() As Boolean
            Return Me.IsNull(Me.tabletChange.CollectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCollectionNull()
            Me(Me.tabletChange.CollectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemNull() As Boolean
            Return Me.IsNull(Me.tabletChange.ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemNull()
            Me(Me.tabletChange.ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLengthNull() As Boolean
            Return Me.IsNull(Me.tabletChange.LengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLengthNull()
            Me(Me.tabletChange.LengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVersionNull() As Boolean
            Return Me.IsNull(Me.tabletChange.VersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVersionNull()
            Me(Me.tabletChange.VersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHasEventDataNull() As Boolean
            Return Me.IsNull(Me.tabletChange.HasEventDataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHasEventDataNull()
            Me(Me.tabletChange.HasEventDataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChangeDateNull() As Boolean
            Return Me.IsNull(Me.tabletChange.ChangeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChangeDateNull()
            Me(Me.tabletChange.ChangeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatabaseNull() As Boolean
            Return Me.IsNull(Me.tabletChange.DatabaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatabaseNull()
            Me(Me.tabletChange.DatabaseColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class pChangeActionSummaryByNodeForDaysRow
        Inherits Global.System.Data.DataRow
        
        Private tablepChangeActionSummaryByNodeForDays As pChangeActionSummaryByNodeForDaysDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepChangeActionSummaryByNodeForDays = CType(Me.Table,pChangeActionSummaryByNodeForDaysDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SQLInstance() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.SQLInstanceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SQLInstance' in table 'pChangeActionSummaryByNodeForDays' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.SQLInstanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'pChangeActionSummaryByNodeForDays' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Node() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.NodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Node' in table 'pChangeActionSummaryByNodeForDays' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.NodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalChangeCount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.TotalChangeCountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalChangeCount' in table 'pChangeActionSummaryByNodeForDa"& _ 
                            "ys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.TotalChangeCountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MetadataRowInserts() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowInsertsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MetadataRowInserts' in table 'pChangeActionSummaryByNodeFor"& _ 
                            "Days' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowInsertsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MetadataRowUpdates() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowUpdatesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MetadataRowUpdates' in table 'pChangeActionSummaryByNodeFor"& _ 
                            "Days' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowUpdatesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MetadataRowDeletes() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowDeletesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MetadataRowDeletes' in table 'pChangeActionSummaryByNodeFor"& _ 
                            "Days' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowDeletesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SQLConfigurationAdded() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationAddedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SQLConfigurationAdded' in table 'pChangeActionSummaryByNode"& _ 
                            "ForDays' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationAddedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SQLConfigurationChanged() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationChangedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SQLConfigurationChanged' in table 'pChangeActionSummaryByNo"& _ 
                            "deForDays' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationChangedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SQLConfigurationRemoved() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationRemovedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SQLConfigurationRemoved' in table 'pChangeActionSummaryByNo"& _ 
                            "deForDays' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationRemovedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablepChangeActionSummaryByNodeForDays.DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'pChangeActionSummaryByNodeForDays' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeActionSummaryByNodeForDays.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSQLInstanceNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.SQLInstanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSQLInstanceNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.SQLInstanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNodeNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.NodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNodeNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.NodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalChangeCountNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.TotalChangeCountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalChangeCountNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.TotalChangeCountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMetadataRowInsertsNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowInsertsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMetadataRowInsertsNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowInsertsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMetadataRowUpdatesNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowUpdatesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMetadataRowUpdatesNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowUpdatesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMetadataRowDeletesNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowDeletesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMetadataRowDeletesNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.MetadataRowDeletesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSQLConfigurationAddedNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationAddedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSQLConfigurationAddedNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationAddedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSQLConfigurationChangedNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationChangedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSQLConfigurationChangedNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationChangedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSQLConfigurationRemovedNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationRemovedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSQLConfigurationRemovedNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.SQLConfigurationRemovedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tablepChangeActionSummaryByNodeForDays.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_DateNull()
            Me(Me.tablepChangeActionSummaryByNodeForDays.DateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tConnectionRow
        Inherits Global.System.Data.DataRow
        
        Private tabletConnection As tConnectionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletConnection = CType(Me.Table,tConnectionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InstanceName() As String
            Get
                Return CType(Me(Me.tabletConnection.InstanceNameColumn),String)
            End Get
            Set
                Me(Me.tabletConnection.InstanceNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EncryptedConnection() As Boolean
            Get
                Return CType(Me(Me.tabletConnection.EncryptedConnectionColumn),Boolean)
            End Get
            Set
                Me(Me.tabletConnection.EncryptedConnectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrustServerCertificate() As Boolean
            Get
                Return CType(Me(Me.tabletConnection.TrustServerCertificateColumn),Boolean)
            End Get
            Set
                Me(Me.tabletConnection.TrustServerCertificateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NetworkProtocol() As String
            Get
                Try 
                    Return CType(Me(Me.tabletConnection.NetworkProtocolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetworkProtocol' in table 'tConnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletConnection.NetworkProtocolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConnectionTimeout() As Integer
            Get
                Return CType(Me(Me.tabletConnection.ConnectionTimeoutColumn),Integer)
            End Get
            Set
                Me(Me.tabletConnection.ConnectionTimeoutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LoginSecure() As Boolean
            Get
                Return CType(Me(Me.tabletConnection.LoginSecureColumn),Boolean)
            End Get
            Set
                Me(Me.tabletConnection.LoginSecureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNetworkProtocolNull() As Boolean
            Return Me.IsNull(Me.tabletConnection.NetworkProtocolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNetworkProtocolNull()
            Me(Me.tabletConnection.NetworkProtocolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GettInstanceRows() As tInstanceRow()
            If (Me.Table.ChildRelations("fk_tInstance__Name__to__tConnection__InstanceName") Is Nothing) Then
                Return New tInstanceRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_tInstance__Name__to__tConnection__InstanceName")),tInstanceRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GettScheduleRows() As tScheduleRow()
            If (Me.Table.ChildRelations("fk_tSchedule__InstanceName__to__tConnection__InstanceName") Is Nothing) Then
                Return New tScheduleRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_tSchedule__InstanceName__to__tConnection__InstanceName")),tScheduleRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tJobServerRow
        Inherits Global.System.Data.DataRow
        
        Private tabletJobServer As tJobServerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletJobServer = CType(Me.Table,tJobServerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InstanceName() As String
            Get
                Return CType(Me(Me.tabletJobServer.InstanceNameColumn),String)
            End Get
            Set
                Me(Me.tabletJobServer.InstanceNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Alerts() As Boolean
            Get
                Return CType(Me(Me.tabletJobServer.AlertsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletJobServer.AlertsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlertSystem() As Boolean
            Get
                Return CType(Me(Me.tabletJobServer.AlertSystemColumn),Boolean)
            End Get
            Set
                Me(Me.tabletJobServer.AlertSystemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Jobs() As Boolean
            Get
                Return CType(Me(Me.tabletJobServer.JobsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletJobServer.JobsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Operators() As Boolean
            Get
                Return CType(Me(Me.tabletJobServer.OperatorsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletJobServer.OperatorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProxyAccounts() As Boolean
            Get
                Return CType(Me(Me.tabletJobServer.ProxyAccountsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletJobServer.ProxyAccountsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetServers() As Boolean
            Get
                Return CType(Me(Me.tabletJobServer.TargetServersColumn),Boolean)
            End Get
            Set
                Me(Me.tabletJobServer.TargetServersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tInstanceRow() As tInstanceRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_tJobServer__to__tInstance__Name")),tInstanceRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_tJobServer__to__tInstance__Name"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tInstanceRow
        Inherits Global.System.Data.DataRow
        
        Private tabletInstance As tInstanceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletInstance = CType(Me.Table,tInstanceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name() As String
            Get
                Return CType(Me(Me.tabletInstance.NameColumn),String)
            End Get
            Set
                Me(Me.tabletInstance.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveDirectory() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.ActiveDirectoryColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.ActiveDirectoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Audits() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.AuditsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.AuditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDevices() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.BackupDevicesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.BackupDevicesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Configuration() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.ConfigurationColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.ConfigurationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Credentials() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.CredentialsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.CredentialsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CryptographicProviders() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.CryptographicProvidersColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.CryptographicProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Databases() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.DatabasesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.DatabasesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EndPoints() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.EndPointsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.EndPointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullTextService() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.FullTextServiceColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.FullTextServiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Information() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.InformationColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.InformationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JobServer() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.JobServerColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.JobServerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LinkedServers() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.LinkedServersColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.LinkedServersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Logins() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.LoginsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.LoginsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mail() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.MailColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.MailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProxyAccount() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.ProxyAccountColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.ProxyAccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResourceGovernor() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.ResourceGovernorColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.ResourceGovernorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Roles() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.RolesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.RolesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ServerAuditSpecifications() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.ServerAuditSpecificationsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.ServerAuditSpecificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Settings() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.SettingsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.SettingsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Triggers() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.TriggersColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.TriggersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserDefinedMessages() As Boolean
            Get
                Return CType(Me(Me.tabletInstance.UserDefinedMessagesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletInstance.UserDefinedMessagesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tConnectionRow() As tConnectionRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_tInstance__Name__to__tConnection__InstanceName")),tConnectionRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_tInstance__Name__to__tConnection__InstanceName"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GettJobServerRows() As tJobServerRow()
            If (Me.Table.ChildRelations("fk_tJobServer__to__tInstance__Name") Is Nothing) Then
                Return New tJobServerRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_tJobServer__to__tInstance__Name")),tJobServerRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GettDbRows() As tDbRow()
            If (Me.Table.ChildRelations("fk_tDb__Instance__to__tInstance__Name") Is Nothing) Then
                Return New tDbRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_tDb__Instance__to__tInstance__Name")),tDbRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tScheduleRow
        Inherits Global.System.Data.DataRow
        
        Private tabletSchedule As tScheduleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletSchedule = CType(Me.Table,tScheduleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tabletSchedule.IdColumn),Integer)
            End Get
            Set
                Me(Me.tabletSchedule.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InstanceName() As String
            Get
                Return CType(Me(Me.tabletSchedule.InstanceNameColumn),String)
            End Get
            Set
                Me(Me.tabletSchedule.InstanceNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Interval() As Integer
            Get
                Return CType(Me(Me.tabletSchedule.IntervalColumn),Integer)
            End Get
            Set
                Me(Me.tabletSchedule.IntervalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IntervalType() As String
            Get
                Return CType(Me(Me.tabletSchedule.IntervalTypeColumn),String)
            End Get
            Set
                Me(Me.tabletSchedule.IntervalTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IntervalBaseDt() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletSchedule.IntervalBaseDtColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IntervalBaseDt' in table 'tSchedule' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletSchedule.IntervalBaseDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UseEventNotifications() As Boolean
            Get
                Return CType(Me(Me.tabletSchedule.UseEventNotificationsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletSchedule.UseEventNotificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsActive() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletSchedule.IsActiveColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsActive' in table 'tSchedule' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletSchedule.IsActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tConnectionRow() As tConnectionRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_tSchedule__InstanceName__to__tConnection__InstanceName")),tConnectionRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_tSchedule__InstanceName__to__tConnection__InstanceName"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIntervalBaseDtNull() As Boolean
            Return Me.IsNull(Me.tabletSchedule.IntervalBaseDtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIntervalBaseDtNull()
            Me(Me.tabletSchedule.IntervalBaseDtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsActiveNull() As Boolean
            Return Me.IsNull(Me.tabletSchedule.IsActiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsActiveNull()
            Me(Me.tabletSchedule.IsActiveColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tServiceBrokerRow
        Inherits Global.System.Data.DataRow
        
        Private tabletServiceBroker As tServiceBrokerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletServiceBroker = CType(Me.Table,tServiceBrokerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatabaseName() As String
            Get
                Return CType(Me(Me.tabletServiceBroker.DatabaseNameColumn),String)
            End Get
            Set
                Me(Me.tabletServiceBroker.DatabaseNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InstanceName() As String
            Get
                Return CType(Me(Me.tabletServiceBroker.InstanceNameColumn),String)
            End Get
            Set
                Me(Me.tabletServiceBroker.InstanceNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MessageTypes() As Boolean
            Get
                Return CType(Me(Me.tabletServiceBroker.MessageTypesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceBroker.MessageTypesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Priorities() As Boolean
            Get
                Return CType(Me(Me.tabletServiceBroker.PrioritiesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceBroker.PrioritiesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Queues() As Boolean
            Get
                Return CType(Me(Me.tabletServiceBroker.QueuesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceBroker.QueuesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RemoteServiceBindings() As Boolean
            Get
                Return CType(Me(Me.tabletServiceBroker.RemoteServiceBindingsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceBroker.RemoteServiceBindingsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Routes() As Boolean
            Get
                Return CType(Me(Me.tabletServiceBroker.RoutesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceBroker.RoutesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ServiceContracts() As Boolean
            Get
                Return CType(Me(Me.tabletServiceBroker.ServiceContractsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceBroker.ServiceContractsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Services() As Boolean
            Get
                Return CType(Me(Me.tabletServiceBroker.ServicesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletServiceBroker.ServicesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tDbRowParent() As tDbRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_tServiceBroker__to__tDB__InstanceName__DBName")),tDbRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_tServiceBroker__to__tDB__InstanceName__DBName"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tDbRow
        Inherits Global.System.Data.DataRow
        
        Private tabletDb As tDbDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletDb = CType(Me.Table,tDbDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name() As String
            Get
                Return CType(Me(Me.tabletDb.NameColumn),String)
            End Get
            Set
                Me(Me.tabletDb.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InstanceName() As String
            Get
                Return CType(Me(Me.tabletDb.InstanceNameColumn),String)
            End Get
            Set
                Me(Me.tabletDb.InstanceNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveDirectory() As Boolean
            Get
                Return CType(Me(Me.tabletDb.ActiveDirectoryColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.ActiveDirectoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApplicationRoles() As Boolean
            Get
                Return CType(Me(Me.tabletDb.ApplicationRolesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.ApplicationRolesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Assemblies() As Boolean
            Get
                Return CType(Me(Me.tabletDb.AssembliesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.AssembliesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AsymmetricKeys() As Boolean
            Get
                Return CType(Me(Me.tabletDb.AsymmetricKeysColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.AsymmetricKeysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Certificates() As Boolean
            Get
                Return CType(Me(Me.tabletDb.CertificatesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.CertificatesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatabaseAuditSpecifications() As Boolean
            Get
                Return CType(Me(Me.tabletDb.DatabaseAuditSpecificationsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.DatabaseAuditSpecificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatabaseOptions() As Boolean
            Get
                Return CType(Me(Me.tabletDb.DatabaseOptionsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.DatabaseOptionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Defaults() As Boolean
            Get
                Return CType(Me(Me.tabletDb.DefaultsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.DefaultsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullTextCatalogs() As Boolean
            Get
                Return CType(Me(Me.tabletDb.FullTextCatalogsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.FullTextCatalogsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullTextStopLists() As Boolean
            Get
                Return CType(Me(Me.tabletDb.FullTextStopListsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.FullTextStopListsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PartitionFunctions() As Boolean
            Get
                Return CType(Me(Me.tabletDb.PartitionFunctionsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.PartitionFunctionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PartitionSchemes() As Boolean
            Get
                Return CType(Me(Me.tabletDb.PartitionSchemesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.PartitionSchemesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PlanGuides() As Boolean
            Get
                Return CType(Me(Me.tabletDb.PlanGuidesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.PlanGuidesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Roles() As Boolean
            Get
                Return CType(Me(Me.tabletDb.RolesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.RolesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rules() As Boolean
            Get
                Return CType(Me(Me.tabletDb.RulesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.RulesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Schemas() As Boolean
            Get
                Return CType(Me(Me.tabletDb.SchemasColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.SchemasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ServiceBroker() As Boolean
            Get
                Return CType(Me(Me.tabletDb.ServiceBrokerColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.ServiceBrokerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StoredProcedures() As Boolean
            Get
                Return CType(Me(Me.tabletDb.StoredProceduresColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.StoredProceduresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SymmetricKeys() As Boolean
            Get
                Return CType(Me(Me.tabletDb.SymmetricKeysColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.SymmetricKeysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Synonyms() As Boolean
            Get
                Return CType(Me(Me.tabletDb.SynonymsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.SynonymsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tables() As Boolean
            Get
                Return CType(Me(Me.tabletDb.TablesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.TablesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Triggers() As Boolean
            Get
                Return CType(Me(Me.tabletDb.TriggersColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.TriggersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserDefinedAggregates() As Boolean
            Get
                Return CType(Me(Me.tabletDb.UserDefinedAggregatesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.UserDefinedAggregatesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserDefinedDataTypes() As Boolean
            Get
                Return CType(Me(Me.tabletDb.UserDefinedDataTypesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.UserDefinedDataTypesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserDefinedFunctions() As Boolean
            Get
                Return CType(Me(Me.tabletDb.UserDefinedFunctionsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.UserDefinedFunctionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserDefinedTableTypes() As Boolean
            Get
                Return CType(Me(Me.tabletDb.UserDefinedTableTypesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.UserDefinedTableTypesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserDefinedTypes() As Boolean
            Get
                Return CType(Me(Me.tabletDb.UserDefinedTypesColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.UserDefinedTypesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Users() As Boolean
            Get
                Return CType(Me(Me.tabletDb.UsersColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.UsersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Views() As Boolean
            Get
                Return CType(Me(Me.tabletDb.ViewsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.ViewsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XMLSchemaCollections() As Boolean
            Get
                Return CType(Me(Me.tabletDb.XMLSchemaCollectionsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletDb.XMLSchemaCollectionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tInstanceRow() As tInstanceRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_tDb__Instance__to__tInstance__Name")),tInstanceRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_tDb__Instance__to__tInstance__Name"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GettServiceBrokerRows() As tServiceBrokerRow()
            If (Me.Table.ChildRelations("fk_tServiceBroker__to__tDB__InstanceName__DBName") Is Nothing) Then
                Return New tServiceBrokerRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_tServiceBroker__to__tDB__InstanceName__DBName")),tServiceBrokerRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class pChangeSelectDefinitionByVersionRow
        Inherits Global.System.Data.DataRow
        
        Private tablepChangeSelectDefinitionByVersion As pChangeSelectDefinitionByVersionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepChangeSelectDefinitionByVersion = CType(Me.Table,pChangeSelectDefinitionByVersionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.idColumn),Integer)
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Node() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.NodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Node' in table 'pChangeSelectDefinitionByVersion' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.NodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.ItemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item' in table 'pChangeSelectDefinitionByVersion' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'pChangeSelectDefinitionByVersion' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Version() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.VersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version' in table 'pChangeSelectDefinitionByVersion' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.VersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Action() As String
            Get
                Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.ActionColumn),String)
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EventData() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.EventDataColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EventData' in table 'pChangeSelectDefinitionByVersion' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.EventDataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Definition() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.DefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Definition' in table 'pChangeSelectDefinitionByVersion' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.DefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DefinitionDt() As Date
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.DefinitionDtColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DefinitionDt' in table 'pChangeSelectDefinitionByVersion' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.DefinitionDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecCreatedDt() As Date
            Get
                Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.RecCreatedDtColumn),Date)
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.RecCreatedDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MinVersion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.MinVersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinVersion' in table 'pChangeSelectDefinitionByVersion' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.MinVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MaxVersion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangeSelectDefinitionByVersion.MaxVersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxVersion' in table 'pChangeSelectDefinitionByVersion' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangeSelectDefinitionByVersion.MaxVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNodeNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.NodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNodeNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.NodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVersionNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.VersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVersionNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.VersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEventDataNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.EventDataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEventDataNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.EventDataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDefinitionNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.DefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDefinitionNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.DefinitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDefinitionDtNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.DefinitionDtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDefinitionDtNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.DefinitionDtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMinVersionNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.MinVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMinVersionNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.MinVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMaxVersionNull() As Boolean
            Return Me.IsNull(Me.tablepChangeSelectDefinitionByVersion.MaxVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMaxVersionNull()
            Me(Me.tablepChangeSelectDefinitionByVersion.MaxVersionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class pChangesForArchiveRow
        Inherits Global.System.Data.DataRow
        
        Private tablepChangesForArchive As pChangesForArchiveDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepChangesForArchive = CType(Me.Table,pChangesForArchiveDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tablepChangesForArchive.IdColumn),Integer)
            End Get
            Set
                Me(Me.tablepChangesForArchive.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Node() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForArchive.NodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Node' in table 'pChangesForArchive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForArchive.NodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Database() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForArchive.DatabaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Database' in table 'pChangesForArchive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForArchive.DatabaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Collection() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForArchive.CollectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Collection' in table 'pChangesForArchive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForArchive.CollectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChangeItem() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForArchive.ChangeItemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChangeItem' in table 'pChangesForArchive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForArchive.ChangeItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Version() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForArchive.VersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version' in table 'pChangesForArchive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForArchive.VersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Action() As String
            Get
                Return CType(Me(Me.tablepChangesForArchive.ActionColumn),String)
            End Get
            Set
                Me(Me.tablepChangesForArchive.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecCreatedDt() As Date
            Get
                Return CType(Me(Me.tablepChangesForArchive.RecCreatedDtColumn),Date)
            End Get
            Set
                Me(Me.tablepChangesForArchive.RecCreatedDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNodeNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForArchive.NodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNodeNull()
            Me(Me.tablepChangesForArchive.NodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatabaseNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForArchive.DatabaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatabaseNull()
            Me(Me.tablepChangesForArchive.DatabaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCollectionNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForArchive.CollectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCollectionNull()
            Me(Me.tablepChangesForArchive.CollectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChangeItemNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForArchive.ChangeItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChangeItemNull()
            Me(Me.tablepChangesForArchive.ChangeItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVersionNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForArchive.VersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVersionNull()
            Me(Me.tablepChangesForArchive.VersionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class pChangesForDateRow
        Inherits Global.System.Data.DataRow
        
        Private tablepChangesForDate As pChangesForDateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepChangesForDate = CType(Me.Table,pChangesForDateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tablepChangesForDate.IdColumn),Integer)
            End Get
            Set
                Me(Me.tablepChangesForDate.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Node() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForDate.NodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Node' in table 'pChangesForDate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForDate.NodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Database() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForDate.DatabaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Database' in table 'pChangesForDate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForDate.DatabaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Collection() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForDate.CollectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Collection' in table 'pChangesForDate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForDate.CollectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChangeItem() As String
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForDate.ChangeItemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChangeItem' in table 'pChangesForDate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForDate.ChangeItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Version() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepChangesForDate.VersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version' in table 'pChangesForDate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepChangesForDate.VersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Action() As String
            Get
                Return CType(Me(Me.tablepChangesForDate.ActionColumn),String)
            End Get
            Set
                Me(Me.tablepChangesForDate.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecCreatedDt() As Date
            Get
                Return CType(Me(Me.tablepChangesForDate.RecCreatedDtColumn),Date)
            End Get
            Set
                Me(Me.tablepChangesForDate.RecCreatedDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNodeNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForDate.NodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNodeNull()
            Me(Me.tablepChangesForDate.NodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatabaseNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForDate.DatabaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatabaseNull()
            Me(Me.tablepChangesForDate.DatabaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCollectionNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForDate.CollectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCollectionNull()
            Me(Me.tablepChangesForDate.CollectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChangeItemNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForDate.ChangeItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChangeItemNull()
            Me(Me.tablepChangesForDate.ChangeItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVersionNull() As Boolean
            Return Me.IsNull(Me.tablepChangesForDate.VersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVersionNull()
            Me(Me.tablepChangesForDate.VersionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tArchiveLogRow
        Inherits Global.System.Data.DataRow
        
        Private tabletArchiveLog As tArchiveLogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletArchiveLog = CType(Me.Table,tArchiveLogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ScheduleId() As Integer
            Get
                Return CType(Me(Me.tabletArchiveLog.ScheduleIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletArchiveLog.ScheduleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InstanceName() As String
            Get
                Return CType(Me(Me.tabletArchiveLog.InstanceNameColumn),String)
            End Get
            Set
                Me(Me.tabletArchiveLog.InstanceNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NbrDDLEventsProcessed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.NbrDDLEventsProcessedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NbrDDLEventsProcessed' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.NbrDDLEventsProcessedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NbrItemsProcessed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.NbrItemsProcessedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NbrItemsProcessed' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.NbrItemsProcessedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NbrItemsAdded() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.NbrItemsAddedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NbrItemsAdded' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.NbrItemsAddedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NbrItemsChanged() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.NbrItemsChangedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NbrItemsChanged' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.NbrItemsChangedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NbrItemsDeleted() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.NbrItemsDeletedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NbrItemsDeleted' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.NbrItemsDeletedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ScheduledStartDt() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.ScheduledStartDtColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScheduledStartDt' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.ScheduledStartDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActualStartDt() As Date
            Get
                Return CType(Me(Me.tabletArchiveLog.ActualStartDtColumn),Date)
            End Get
            Set
                Me(Me.tabletArchiveLog.ActualStartDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActualEndDt() As Date
            Get
                Return CType(Me(Me.tabletArchiveLog.ActualEndDtColumn),Date)
            End Get
            Set
                Me(Me.tabletArchiveLog.ActualEndDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecCreatedUser() As String
            Get
                Return CType(Me(Me.tabletArchiveLog.RecCreatedUserColumn),String)
            End Get
            Set
                Me(Me.tabletArchiveLog.RecCreatedUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ArchiveError() As String
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.ArchiveErrorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArchiveError' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.ArchiveErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ArchiveLogId() As Integer
            Get
                Return CType(Me(Me.tabletArchiveLog.ArchiveLogIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletArchiveLog.ArchiveLogIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Interval() As Integer
            Get
                Return CType(Me(Me.tabletArchiveLog.IntervalColumn),Integer)
            End Get
            Set
                Me(Me.tabletArchiveLog.IntervalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IntervalType() As String
            Get
                Return CType(Me(Me.tabletArchiveLog.IntervalTypeColumn),String)
            End Get
            Set
                Me(Me.tabletArchiveLog.IntervalTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IntervalBaseDt() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.IntervalBaseDtColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IntervalBaseDt' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.IntervalBaseDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UseEventNotifications() As Boolean
            Get
                Return CType(Me(Me.tabletArchiveLog.UseEventNotificationsColumn),Boolean)
            End Get
            Set
                Me(Me.tabletArchiveLog.UseEventNotificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsActive() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletArchiveLog.IsActiveColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsActive' in table 'tArchiveLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletArchiveLog.IsActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNbrDDLEventsProcessedNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.NbrDDLEventsProcessedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNbrDDLEventsProcessedNull()
            Me(Me.tabletArchiveLog.NbrDDLEventsProcessedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNbrItemsProcessedNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.NbrItemsProcessedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNbrItemsProcessedNull()
            Me(Me.tabletArchiveLog.NbrItemsProcessedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNbrItemsAddedNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.NbrItemsAddedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNbrItemsAddedNull()
            Me(Me.tabletArchiveLog.NbrItemsAddedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNbrItemsChangedNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.NbrItemsChangedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNbrItemsChangedNull()
            Me(Me.tabletArchiveLog.NbrItemsChangedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNbrItemsDeletedNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.NbrItemsDeletedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNbrItemsDeletedNull()
            Me(Me.tabletArchiveLog.NbrItemsDeletedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScheduledStartDtNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.ScheduledStartDtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScheduledStartDtNull()
            Me(Me.tabletArchiveLog.ScheduledStartDtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsArchiveErrorNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.ArchiveErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetArchiveErrorNull()
            Me(Me.tabletArchiveLog.ArchiveErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIntervalBaseDtNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.IntervalBaseDtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIntervalBaseDtNull()
            Me(Me.tabletArchiveLog.IntervalBaseDtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsActiveNull() As Boolean
            Return Me.IsNull(Me.tabletArchiveLog.IsActiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsActiveNull()
            Me(Me.tabletArchiveLog.IsActiveColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tSQLCfgRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tSQLCfgRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tSQLCfgRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tSQLCfgRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tServiceSettingsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tServiceSettingsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tServiceSettingsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tServiceSettingsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tChangeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tChangeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tChangeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tChangeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class pChangeActionSummaryByNodeForDaysRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As pChangeActionSummaryByNodeForDaysRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As pChangeActionSummaryByNodeForDaysRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As pChangeActionSummaryByNodeForDaysRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tConnectionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tConnectionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tConnectionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tConnectionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tJobServerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tJobServerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tJobServerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tJobServerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tInstanceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tInstanceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tInstanceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tInstanceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tScheduleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tScheduleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tScheduleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tScheduleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tServiceBrokerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tServiceBrokerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tServiceBrokerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tServiceBrokerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tDbRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tDbRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tDbRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tDbRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class pChangeSelectDefinitionByVersionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As pChangeSelectDefinitionByVersionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As pChangeSelectDefinitionByVersionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As pChangeSelectDefinitionByVersionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class pChangesForArchiveRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As pChangesForArchiveRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As pChangesForArchiveRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As pChangesForArchiveRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class pChangesForDateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As pChangesForDateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As pChangesForDateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As pChangesForDateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tArchiveLogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tArchiveLogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tArchiveLogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tArchiveLogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsSQLConfigurationTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tSQLCfgTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tSQLCfg"
            tableMapping.ColumnMappings.Add("LicensedCompany", "LicensedCompany")
            tableMapping.ColumnMappings.Add("LicensedUser", "LicensedUser")
            tableMapping.ColumnMappings.Add("LicenseCode", "LicenseCode")
            tableMapping.ColumnMappings.Add("LicensedInstanceCount", "LicensedInstanceCount")
            tableMapping.ColumnMappings.Add("LicenseDate", "LicenseDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "SQLCfg.pSQLCfgInsert"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedCompany", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "LicensedCompany", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedUser", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "LicensedUser", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicenseCode", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "LicenseCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedInstanceCount", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "LicensedInstanceCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicenseDate", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "LicenseDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "SQLCfg.pSQLCfgUpdate"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedCompany", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "LicensedCompany", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedUser", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "LicensedUser", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicenseCode", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "LicenseCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedInstanceCount", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "LicensedInstanceCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicenseDate", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "LicenseDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pSQLCfgSelect"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pSQLCfgGet"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedCompany", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedUser", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicenseCode", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicensedInstanceCount", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.InputOutput, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LicenseDate", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tSQLCfgDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsSQLConfiguration.tSQLCfgDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsSQLConfiguration.tSQLCfgDataTable = New dsSQLConfiguration.tSQLCfgDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsSQLConfiguration.tSQLCfgDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsSQLConfiguration) As Integer
            Return Me.Adapter.Update(dataSet, "tSQLCfg")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pSQLCfgGet(ByRef LicensedCompany As String, ByRef LicensedUser As String, ByRef LicenseCode As String, ByRef LicensedInstanceCount As Global.System.Nullable(Of Integer), ByRef LicenseDate As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (LicensedCompany Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(LicensedCompany,String)
            End If
            If (LicensedUser Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(LicensedUser,String)
            End If
            If (LicenseCode Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(LicenseCode,String)
            End If
            If (LicensedInstanceCount.HasValue = true) Then
                command.Parameters(4).Value = CType(LicensedInstanceCount.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (LicenseDate Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(LicenseDate,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(1).Value Is Nothing)  _
                        OrElse (command.Parameters(1).Value.GetType Is GetType(Global.System.DBNull))) Then
                LicensedCompany = Nothing
            Else
                LicensedCompany = CType(command.Parameters(1).Value,String)
            End If
            If ((command.Parameters(2).Value Is Nothing)  _
                        OrElse (command.Parameters(2).Value.GetType Is GetType(Global.System.DBNull))) Then
                LicensedUser = Nothing
            Else
                LicensedUser = CType(command.Parameters(2).Value,String)
            End If
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                LicenseCode = Nothing
            Else
                LicenseCode = CType(command.Parameters(3).Value,String)
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                LicensedInstanceCount = New Global.System.Nullable(Of Integer)()
            Else
                LicensedInstanceCount = New Global.System.Nullable(Of Integer)(CType(command.Parameters(4).Value,Integer))
            End If
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                LicenseDate = Nothing
            Else
                LicenseDate = CType(command.Parameters(5).Value,String)
            End If
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tServiceSettingsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tServiceSettings"
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("AddDatabasesUponDiscovery", "AddDatabasesUponDiscovery")
            tableMapping.ColumnMappings.Add("TargetEventNotificationDatabase", "TargetEventNotificationDatabase")
            tableMapping.ColumnMappings.Add("Scripting__Options_Batch__Separator", "Scripting__Options_Batch__Separator")
            tableMapping.ColumnMappings.Add("Misc_Ignore__Blank__Lines", "Misc_Ignore__Blank__Lines")
            tableMapping.ColumnMappings.Add("Misc_Display__Output_Show__Comparison__Details", "Misc_Display__Output_Show__Comparison__Details")
            tableMapping.ColumnMappings.Add("Scripting__Options_Include__DROP__In__Script", "Scripting__Options_Include__DROP__In__Script")
            tableMapping.ColumnMappings.Add("Scripting__Options_Include__IF__EXISTS__With__Drop", "Scripting__Options_Include__IF__EXISTS__With__Drop")
            tableMapping.ColumnMappings.Add("Misc_Display__Output_Show__Scripts__For__Unmatched__Items", "Misc_Display__Output_Show__Scripts__For__Unmatched__Items")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5", "Regular__Expressions_LineReplace__Regex__Options_IgnoreCase_5")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_Multiline_7", "Regular__Expressions_LineReplace__Regex__Options_Multiline_7")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4", "Regular__Expressions_LineReplace__Regex__Options_ExplicitCapture_4")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_Compiled_1", "Regular__Expressions_LineReplace__Regex__Options_Compiled_1")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_SingleLine_9", "Regular__Expressions_LineReplace__Regex__Options_SingleLine_9")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6", "Regular__Expressions_LineReplace__Regex__Options_IgnorePatternWhiteSpace_6")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8", "Regular__Expressions_LineReplace__Regex__Options_RightToLeft_8")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3", "Regular__Expressions_LineReplace__Regex__Options_ECMAScript_3")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2", "Regular__Expressions_LineReplace__Regex__Options_CultureInvariant_2")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Pattern_1", "Regular__Expressions_LineReplace__Pattern_1")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineReplace__Replacement_2", "Regular__Expressions_LineReplace__Replacement_2")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5", "Regular__Expressions_LineSplit__Regex__Options_IgnoreCase_5")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_Multiline_7", "Regular__Expressions_LineSplit__Regex__Options_Multiline_7")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4", "Regular__Expressions_LineSplit__Regex__Options_ExplicitCapture_4")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_Compiled_1", "Regular__Expressions_LineSplit__Regex__Options_Compiled_1")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_SingleLine_9", "Regular__Expressions_LineSplit__Regex__Options_SingleLine_9")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6", "Regular__Expressions_LineSplit__Regex__Options_IgnorePatternWhiteSpace_6")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8", "Regular__Expressions_LineSplit__Regex__Options_RightToLeft_8")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3", "Regular__Expressions_LineSplit__Regex__Options_ECMAScript_3")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2", "Regular__Expressions_LineSplit__Regex__Options_CultureInvariant_2")
            tableMapping.ColumnMappings.Add("Regular__Expressions_LineSplit__Pattern_3", "Regular__Expressions_LineSplit__Pattern_3")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5", "Regular__Expressions_NameMatch__Regex__Options_IgnoreCase_5")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_Multiline_7", "Regular__Expressions_NameMatch__Regex__Options_Multiline_7")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4", "Regular__Expressions_NameMatch__Regex__Options_ExplicitCapture_4")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_Compiled_1", "Regular__Expressions_NameMatch__Regex__Options_Compiled_1")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_SingleLine_9", "Regular__Expressions_NameMatch__Regex__Options_SingleLine_9")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6", "Regular__Expressions_NameMatch__Regex__Options_IgnorePatternWhiteSpace_6")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8", "Regular__Expressions_NameMatch__Regex__Options_RightToLeft_8")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3", "Regular__Expressions_NameMatch__Regex__Options_ECMAScript_3")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2", "Regular__Expressions_NameMatch__Regex__Options_CultureInvariant_2")
            tableMapping.ColumnMappings.Add("Regular__Expressions_NameMatch__Pattern_4", "Regular__Expressions_NameMatch__Pattern_4")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_AgentAlertJob_1", "Scripting__Options_SMO_AgentAlertJob_1")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_AgentJobId_2", "Scripting__Options_SMO_AgentJobId_2")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_AgentNotify_3", "Scripting__Options_SMO_AgentNotify_3")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_AllowSystemObjects_10", "Scripting__Options_SMO_AllowSystemObjects_10")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_AnsiFile_20", "Scripting__Options_SMO_AnsiFile_20")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_AnsiPadding_30", "Scripting__Options_SMO_AnsiPadding_30")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_Bindings_40", "Scripting__Options_SMO_Bindings_40")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ClusteredIndexes_50", "Scripting__Options_SMO_ClusteredIndexes_50")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ContinueScriptingOnError_60", "Scripting__Options_SMO_ContinueScriptingOnError_60")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70", "Scripting__Options_SMO_ConvertUserDefinedDataTypesToBaseType_70")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DdlBodyOnly_80", "Scripting__Options_SMO_DdlBodyOnly_80")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DdlHeaderOnly_90", "Scripting__Options_SMO_DdlHeaderOnly_90")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_Default_100", "Scripting__Options_SMO_Default_100")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriAll_110", "Scripting__Options_SMO_DriAll_110")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriAllConstraints_120", "Scripting__Options_SMO_DriAllConstraints_120")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriAllKeys_130", "Scripting__Options_SMO_DriAllKeys_130")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriChecks_140", "Scripting__Options_SMO_DriChecks_140")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriClustered_150", "Scripting__Options_SMO_DriClustered_150")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriDefaults_160", "Scripting__Options_SMO_DriDefaults_160")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriForeignKeys_170", "Scripting__Options_SMO_DriForeignKeys_170")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriIncludeSystemNames_180", "Scripting__Options_SMO_DriIncludeSystemNames_180")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriIndexes_190", "Scripting__Options_SMO_DriIndexes_190")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriNonClustered_200", "Scripting__Options_SMO_DriNonClustered_200")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriPrimaryKey_210", "Scripting__Options_SMO_DriPrimaryKey_210")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriUniqueKeys_220", "Scripting__Options_SMO_DriUniqueKeys_220")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_DriWithNoCheck_230", "Scripting__Options_SMO_DriWithNoCheck_230")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_Encoding_240", "Scripting__Options_SMO_Encoding_240")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_EnforceScriptingOptions_250", "Scripting__Options_SMO_EnforceScriptingOptions_250")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ExtendedProperties_260", "Scripting__Options_SMO_ExtendedProperties_260")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_FullTextCatalogs_270", "Scripting__Options_SMO_FullTextCatalogs_270")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_FullTextindexes_280", "Scripting__Options_SMO_FullTextindexes_280")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_IncludeDatabaseContext_290", "Scripting__Options_SMO_IncludeDatabaseContext_290")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291", "Scripting__Options_SMO_IncludeDatabaseRoleMemberships_291")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_IncludeHeaders_300", "Scripting__Options_SMO_IncludeHeaders_300")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_IncludeIfNotExists_301", "Scripting__Options_SMO_IncludeIfNotExists_301")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_Indexes_310", "Scripting__Options_SMO_Indexes_310")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_LoginSID_320", "Scripting__Options_SMO_LoginSID_320")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoAssemblies_330", "Scripting__Options_SMO_NoAssemblies_330")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoCollation_340", "Scripting__Options_SMO_NoCollation_340")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoCommandTerminator_350", "Scripting__Options_SMO_NoCommandTerminator_350")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoExecuteAs_360", "Scripting__Options_SMO_NoExecuteAs_360")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoFilegroup_370", "Scripting__Options_SMO_NoFilegroup_370")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoIdentities_380", "Scripting__Options_SMO_NoIdentities_380")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoIndexPartitioningSchemes_390", "Scripting__Options_SMO_NoIndexPartitioningSchemes_390")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoMailProfileAccounts_400", "Scripting__Options_SMO_NoMailProfileAccounts_400")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoMailProfilePrincipals_410", "Scripting__Options_SMO_NoMailProfilePrincipals_410")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NonClusteredIndexes_420", "Scripting__Options_SMO_NonClusteredIndexes_420")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoTablePartitioningSchemes_430", "Scripting__Options_SMO_NoTablePartitioningSchemes_430")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoVarDecimal_431", "Scripting__Options_SMO_NoVarDecimal_431")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoViewColumns_440", "Scripting__Options_SMO_NoViewColumns_440")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoXMLNameSpaces_450", "Scripting__Options_SMO_NoXMLNameSpaces_450")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_OptimizerData_460", "Scripting__Options_SMO_OptimizerData_460")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_Permissions_470", "Scripting__Options_SMO_Permissions_470")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_PrimaryObject_480", "Scripting__Options_SMO_PrimaryObject_480")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_SchemaQualify_490", "Scripting__Options_SMO_SchemaQualify_490")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500", "Scripting__Options_SMO_SchemaQualifyForeignKeysReferences_500")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_Statistics_510", "Scripting__Options_SMO_Statistics_510")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_TimestampToBinary_520", "Scripting__Options_SMO_TimestampToBinary_520")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_TargetServerVersion_530", "Scripting__Options_SMO_TargetServerVersion_530")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_Triggers_540", "Scripting__Options_SMO_Triggers_540")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_WithDependencies_550", "Scripting__Options_SMO_WithDependencies_550")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_XMLIndexes_560", "Scripting__Options_SMO_XMLIndexes_560")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_BatchSize_35", "Scripting__Options_SMO_BatchSize_35")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ChangeTracking_45", "Scripting__Options_SMO_ChangeTracking_45")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_FullTextStopLists_285", "Scripting__Options_SMO_FullTextStopLists_285")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295", "Scripting__Options_SMO_IncludeFullTextCatalogRootPath_295")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoFileStream_373", "Scripting__Options_SMO_NoFileStream_373")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_NoFileStreamColumn_376", "Scripting__Options_SMO_NoFileStreamColumn_376")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ScriptBatchTerminator_502", "Scripting__Options_SMO_ScriptBatchTerminator_502")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ScriptData_503", "Scripting__Options_SMO_ScriptData_503")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ScriptDataCompression_505", "Scripting__Options_SMO_ScriptDataCompression_505")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ScriptDrops_506", "Scripting__Options_SMO_ScriptDrops_506")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ScriptOwner_508", "Scripting__Options_SMO_ScriptOwner_508")
            tableMapping.ColumnMappings.Add("Scripting__Options_SMO_ScriptSchema_509", "Scripting__Options_SMO_ScriptSchema_509")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClue1_3_5_1ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pServiceSettingsSelect"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tServiceSettingsDataTable, ByVal Name As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Name,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Name As String) As dsSQLConfiguration.tServiceSettingsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Name,String)
            End If
            Dim dataTable As dsSQLConfiguration.tServiceSettingsDataTable = New dsSQLConfiguration.tServiceSettingsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tChangeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tChange"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Node", "Node")
            tableMapping.ColumnMappings.Add("DbName", "DbName")
            tableMapping.ColumnMappings.Add("SubType", "SubType")
            tableMapping.ColumnMappings.Add("Collection", "Collection")
            tableMapping.ColumnMappings.Add("Item", "Item")
            tableMapping.ColumnMappings.Add("Length", "Length")
            tableMapping.ColumnMappings.Add("Version", "Version")
            tableMapping.ColumnMappings.Add("Action", "Action")
            tableMapping.ColumnMappings.Add("HasEventData", "HasEventData")
            tableMapping.ColumnMappings.Add("ChangeDate", "ChangeDate")
            tableMapping.ColumnMappings.Add("Database", "Database")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClue1_3_5_1ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pChangeGetAllNodesForInstance"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SQLInstance", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillByInstance(ByVal dataTable As dsSQLConfiguration.tChangeDataTable, ByVal SQLInstance As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SQLInstance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SQLInstance,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataByInstance(ByVal SQLInstance As String) As dsSQLConfiguration.tChangeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SQLInstance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SQLInstance,String)
            End If
            Dim dataTable As dsSQLConfiguration.tChangeDataTable = New dsSQLConfiguration.tChangeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class pChangeActionSummaryByNodeForDaysTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "pChangeActionSummaryByNodeForDays"
            tableMapping.ColumnMappings.Add("SQLInstance", "SQLInstance")
            tableMapping.ColumnMappings.Add("Type", "Type")
            tableMapping.ColumnMappings.Add("Node", "Node")
            tableMapping.ColumnMappings.Add("TotalChangeCount", "TotalChangeCount")
            tableMapping.ColumnMappings.Add("MetadataRowInserts", "MetadataRowInserts")
            tableMapping.ColumnMappings.Add("MetadataRowUpdates", "MetadataRowUpdates")
            tableMapping.ColumnMappings.Add("MetadataRowDeletes", "MetadataRowDeletes")
            tableMapping.ColumnMappings.Add("SQLConfigurationAdded", "SQLConfigurationAdded")
            tableMapping.ColumnMappings.Add("SQLConfigurationChanged", "SQLConfigurationChanged")
            tableMapping.ColumnMappings.Add("SQLConfigurationRemoved", "SQLConfigurationRemoved")
            tableMapping.ColumnMappings.Add("Date", "Date")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pChangeActionSummaryByNodeForDays"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaysToShow", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Node", Global.System.Data.SqlDbType.NVarChar, 786, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.pChangeActionSummaryByNodeForDaysDataTable, ByVal DaysToShow As Global.System.Nullable(Of Integer), ByVal Node As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DaysToShow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DaysToShow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Node Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Node,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DaysToShow As Global.System.Nullable(Of Integer), ByVal Node As String) As dsSQLConfiguration.pChangeActionSummaryByNodeForDaysDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DaysToShow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DaysToShow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Node Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Node,String)
            End If
            Dim dataTable As dsSQLConfiguration.pChangeActionSummaryByNodeForDaysDataTable = New dsSQLConfiguration.pChangeActionSummaryByNodeForDaysDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tConnectionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tConnection"
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName")
            tableMapping.ColumnMappings.Add("EncryptedConnection", "EncryptedConnection")
            tableMapping.ColumnMappings.Add("TrustServerCertificate", "TrustServerCertificate")
            tableMapping.ColumnMappings.Add("NetworkProtocol", "NetworkProtocol")
            tableMapping.ColumnMappings.Add("ConnectionTimeout", "ConnectionTimeout")
            tableMapping.ColumnMappings.Add("LoginSecure", "LoginSecure")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "SQLCfg.pConnectionDelete"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EncryptedConnection", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "EncryptedConnection", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrustServerCertificate", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TrustServerCertificate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetworkProtocol", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "NetworkProtocol", Global.System.Data.DataRowVersion.Current, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetworkProtocol", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "NetworkProtocol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConnectionTimeout", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "ConnectionTimeout", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginSecure", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "LoginSecure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "SQLCfg.pConnectionInsert"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EncryptedConnection", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "EncryptedConnection", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrustServerCertificate", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TrustServerCertificate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetworkProtocol", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "NetworkProtocol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConnectionTimeout", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "ConnectionTimeout", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginSecure", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "LoginSecure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "SQLCfg.pConnectionUpdate"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EncryptedConnection", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "EncryptedConnection", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrustServerCertificate", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TrustServerCertificate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetworkProtocol", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "NetworkProtocol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConnectionTimeout", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "ConnectionTimeout", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginSecure", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "LoginSecure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EncryptedConnection", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "EncryptedConnection", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TrustServerCertificate", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TrustServerCertificate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetworkProtocol", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "NetworkProtocol", Global.System.Data.DataRowVersion.Current, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetworkProtocol", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "NetworkProtocol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConnectionTimeout", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "ConnectionTimeout", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LoginSecure", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "LoginSecure", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClue1_3_5_1ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pConnectionSelectAll"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pConnectionGet"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EncryptedConnection", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrustServerCertificate", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetworkProtocol", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConnectionTimeout", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.InputOutput, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginSecure", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tConnectionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsSQLConfiguration.tConnectionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsSQLConfiguration.tConnectionDataTable = New dsSQLConfiguration.tConnectionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsSQLConfiguration.tConnectionDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsSQLConfiguration) As Integer
            Return Me.Adapter.Update(dataSet, "tConnection")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal InstanceName As String, ByVal EncryptedConnection As Global.System.Nullable(Of Boolean), ByVal TrustServerCertificate As Global.System.Nullable(Of Boolean), ByVal NetworkProtocol As String, ByVal ConnectionTimeout As Global.System.Nullable(Of Integer), ByVal LoginSecure As Global.System.Nullable(Of Boolean)) As Integer
            If (InstanceName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (EncryptedConnection.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(EncryptedConnection.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TrustServerCertificate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(TrustServerCertificate.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NetworkProtocol Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(NetworkProtocol,String)
            End If
            If (ConnectionTimeout.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(ConnectionTimeout.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (LoginSecure.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(LoginSecure.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal InstanceName As String, ByVal EncryptedConnection As Global.System.Nullable(Of Boolean), ByVal TrustServerCertificate As Global.System.Nullable(Of Boolean), ByVal NetworkProtocol As String, ByVal ConnectionTimeout As Global.System.Nullable(Of Integer), ByVal LoginSecure As Global.System.Nullable(Of Boolean)) As Integer
            If (InstanceName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (EncryptedConnection.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EncryptedConnection.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TrustServerCertificate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TrustServerCertificate.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NetworkProtocol Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NetworkProtocol,String)
            End If
            If (ConnectionTimeout.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ConnectionTimeout.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (LoginSecure.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LoginSecure.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal InstanceName As String, ByVal EncryptedConnection As Global.System.Nullable(Of Boolean), ByVal TrustServerCertificate As Global.System.Nullable(Of Boolean), ByVal NetworkProtocol As String, ByVal ConnectionTimeout As Global.System.Nullable(Of Integer), ByVal LoginSecure As Global.System.Nullable(Of Boolean), ByVal Original_InstanceName As String, ByVal Original_EncryptedConnection As Global.System.Nullable(Of Boolean), ByVal Original_TrustServerCertificate As Global.System.Nullable(Of Boolean), ByVal Original_NetworkProtocol As String, ByVal Original_ConnectionTimeout As Global.System.Nullable(Of Integer), ByVal Original_LoginSecure As Global.System.Nullable(Of Boolean)) As Integer
            If (InstanceName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (EncryptedConnection.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EncryptedConnection.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TrustServerCertificate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TrustServerCertificate.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NetworkProtocol Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NetworkProtocol,String)
            End If
            If (ConnectionTimeout.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ConnectionTimeout.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (LoginSecure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(LoginSecure.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_InstanceName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_InstanceName,String)
            End If
            If (Original_EncryptedConnection.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_EncryptedConnection.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_TrustServerCertificate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_TrustServerCertificate.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_NetworkProtocol Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_NetworkProtocol,String)
            End If
            If (Original_ConnectionTimeout.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ConnectionTimeout.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_LoginSecure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_LoginSecure.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal EncryptedConnection As Global.System.Nullable(Of Boolean), ByVal TrustServerCertificate As Global.System.Nullable(Of Boolean), ByVal NetworkProtocol As String, ByVal ConnectionTimeout As Global.System.Nullable(Of Integer), ByVal LoginSecure As Global.System.Nullable(Of Boolean), ByVal Original_InstanceName As String, ByVal Original_EncryptedConnection As Global.System.Nullable(Of Boolean), ByVal Original_TrustServerCertificate As Global.System.Nullable(Of Boolean), ByVal Original_NetworkProtocol As String, ByVal Original_ConnectionTimeout As Global.System.Nullable(Of Integer), ByVal Original_LoginSecure As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(Original_InstanceName, EncryptedConnection, TrustServerCertificate, NetworkProtocol, ConnectionTimeout, LoginSecure, Original_InstanceName, Original_EncryptedConnection, Original_TrustServerCertificate, Original_NetworkProtocol, Original_ConnectionTimeout, Original_LoginSecure)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pConnectionGet(ByVal InstanceName As String, ByRef EncryptedConnection As Global.System.Nullable(Of Boolean), ByRef TrustServerCertificate As Global.System.Nullable(Of Boolean), ByRef NetworkProtocol As String, ByRef ConnectionTimeout As Global.System.Nullable(Of Integer), ByRef LoginSecure As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (EncryptedConnection.HasValue = true) Then
                command.Parameters(2).Value = CType(EncryptedConnection.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TrustServerCertificate.HasValue = true) Then
                command.Parameters(3).Value = CType(TrustServerCertificate.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NetworkProtocol Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(NetworkProtocol,String)
            End If
            If (ConnectionTimeout.HasValue = true) Then
                command.Parameters(5).Value = CType(ConnectionTimeout.Value,Integer)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (LoginSecure.HasValue = true) Then
                command.Parameters(6).Value = CType(LoginSecure.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(2).Value Is Nothing)  _
                        OrElse (command.Parameters(2).Value.GetType Is GetType(Global.System.DBNull))) Then
                EncryptedConnection = New Global.System.Nullable(Of Boolean)()
            Else
                EncryptedConnection = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(2).Value,Boolean))
            End If
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                TrustServerCertificate = New Global.System.Nullable(Of Boolean)()
            Else
                TrustServerCertificate = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(3).Value,Boolean))
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                NetworkProtocol = Nothing
            Else
                NetworkProtocol = CType(command.Parameters(4).Value,String)
            End If
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                ConnectionTimeout = New Global.System.Nullable(Of Integer)()
            Else
                ConnectionTimeout = New Global.System.Nullable(Of Integer)(CType(command.Parameters(5).Value,Integer))
            End If
            If ((command.Parameters(6).Value Is Nothing)  _
                        OrElse (command.Parameters(6).Value.GetType Is GetType(Global.System.DBNull))) Then
                LoginSecure = New Global.System.Nullable(Of Boolean)()
            Else
                LoginSecure = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(6).Value,Boolean))
            End If
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tJobServerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tJobServer"
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName")
            tableMapping.ColumnMappings.Add("Alerts", "Alerts")
            tableMapping.ColumnMappings.Add("AlertSystem", "AlertSystem")
            tableMapping.ColumnMappings.Add("Jobs", "Jobs")
            tableMapping.ColumnMappings.Add("Operators", "Operators")
            tableMapping.ColumnMappings.Add("ProxyAccounts", "ProxyAccounts")
            tableMapping.ColumnMappings.Add("TargetServers", "TargetServers")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "SQLCfg.pJobServerDelete"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "SQLCfg.pJobServerInsert"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Alerts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Alerts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlertSystem", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "AlertSystem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jobs", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Jobs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operators", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Operators", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProxyAccounts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ProxyAccounts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TargetServers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TargetServers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "SQLCfg.pJobServerUpdate"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Alerts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Alerts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlertSystem", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "AlertSystem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jobs", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Jobs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operators", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Operators", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProxyAccounts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ProxyAccounts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TargetServers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TargetServers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClue1_3_5_1ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pJobServerSelectAll"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pJobServerGet"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Alerts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlertSystem", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jobs", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operators", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProxyAccounts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TargetServers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tJobServerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsSQLConfiguration.tJobServerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsSQLConfiguration.tJobServerDataTable = New dsSQLConfiguration.tJobServerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsSQLConfiguration.tJobServerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsSQLConfiguration) As Integer
            Return Me.Adapter.Update(dataSet, "tJobServer")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal InstanceName As String) As Integer
            If (InstanceName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal InstanceName As String, ByVal Alerts As Global.System.Nullable(Of Boolean), ByVal AlertSystem As Global.System.Nullable(Of Boolean), ByVal Jobs As Global.System.Nullable(Of Boolean), ByVal Operators As Global.System.Nullable(Of Boolean), ByVal ProxyAccounts As Global.System.Nullable(Of Boolean), ByVal TargetServers As Global.System.Nullable(Of Boolean)) As Integer
            If (InstanceName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (Alerts.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Alerts.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AlertSystem.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(AlertSystem.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Jobs.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Jobs.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Operators.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Operators.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ProxyAccounts.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ProxyAccounts.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TargetServers.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TargetServers.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal InstanceName As String, ByVal Alerts As Global.System.Nullable(Of Boolean), ByVal AlertSystem As Global.System.Nullable(Of Boolean), ByVal Jobs As Global.System.Nullable(Of Boolean), ByVal Operators As Global.System.Nullable(Of Boolean), ByVal ProxyAccounts As Global.System.Nullable(Of Boolean), ByVal TargetServers As Global.System.Nullable(Of Boolean)) As Integer
            If (InstanceName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (Alerts.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Alerts.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AlertSystem.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(AlertSystem.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Jobs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Jobs.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Operators.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Operators.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ProxyAccounts.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ProxyAccounts.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TargetServers.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TargetServers.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pJobServerGet(ByVal InstanceName As String, ByRef Alerts As Global.System.Nullable(Of Boolean), ByRef AlertSystem As Global.System.Nullable(Of Boolean), ByRef Jobs As Global.System.Nullable(Of Boolean), ByRef Operators As Global.System.Nullable(Of Boolean), ByRef ProxyAccounts As Global.System.Nullable(Of Boolean), ByRef TargetServers As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (Alerts.HasValue = true) Then
                command.Parameters(2).Value = CType(Alerts.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AlertSystem.HasValue = true) Then
                command.Parameters(3).Value = CType(AlertSystem.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Jobs.HasValue = true) Then
                command.Parameters(4).Value = CType(Jobs.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Operators.HasValue = true) Then
                command.Parameters(5).Value = CType(Operators.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ProxyAccounts.HasValue = true) Then
                command.Parameters(6).Value = CType(ProxyAccounts.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TargetServers.HasValue = true) Then
                command.Parameters(7).Value = CType(TargetServers.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(2).Value Is Nothing)  _
                        OrElse (command.Parameters(2).Value.GetType Is GetType(Global.System.DBNull))) Then
                Alerts = New Global.System.Nullable(Of Boolean)()
            Else
                Alerts = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(2).Value,Boolean))
            End If
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                AlertSystem = New Global.System.Nullable(Of Boolean)()
            Else
                AlertSystem = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(3).Value,Boolean))
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                Jobs = New Global.System.Nullable(Of Boolean)()
            Else
                Jobs = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(4).Value,Boolean))
            End If
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                Operators = New Global.System.Nullable(Of Boolean)()
            Else
                Operators = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(5).Value,Boolean))
            End If
            If ((command.Parameters(6).Value Is Nothing)  _
                        OrElse (command.Parameters(6).Value.GetType Is GetType(Global.System.DBNull))) Then
                ProxyAccounts = New Global.System.Nullable(Of Boolean)()
            Else
                ProxyAccounts = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(6).Value,Boolean))
            End If
            If ((command.Parameters(7).Value Is Nothing)  _
                        OrElse (command.Parameters(7).Value.GetType Is GetType(Global.System.DBNull))) Then
                TargetServers = New Global.System.Nullable(Of Boolean)()
            Else
                TargetServers = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(7).Value,Boolean))
            End If
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tInstanceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tInstance"
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("ActiveDirectory", "ActiveDirectory")
            tableMapping.ColumnMappings.Add("Audits", "Audits")
            tableMapping.ColumnMappings.Add("BackupDevices", "BackupDevices")
            tableMapping.ColumnMappings.Add("Configuration", "Configuration")
            tableMapping.ColumnMappings.Add("Credentials", "Credentials")
            tableMapping.ColumnMappings.Add("CryptographicProviders", "CryptographicProviders")
            tableMapping.ColumnMappings.Add("Databases", "Databases")
            tableMapping.ColumnMappings.Add("EndPoints", "EndPoints")
            tableMapping.ColumnMappings.Add("FullTextService", "FullTextService")
            tableMapping.ColumnMappings.Add("Information", "Information")
            tableMapping.ColumnMappings.Add("JobServer", "JobServer")
            tableMapping.ColumnMappings.Add("LinkedServers", "LinkedServers")
            tableMapping.ColumnMappings.Add("Logins", "Logins")
            tableMapping.ColumnMappings.Add("Mail", "Mail")
            tableMapping.ColumnMappings.Add("ProxyAccount", "ProxyAccount")
            tableMapping.ColumnMappings.Add("ResourceGovernor", "ResourceGovernor")
            tableMapping.ColumnMappings.Add("Roles", "Roles")
            tableMapping.ColumnMappings.Add("ServerAuditSpecifications", "ServerAuditSpecifications")
            tableMapping.ColumnMappings.Add("Settings", "Settings")
            tableMapping.ColumnMappings.Add("Triggers", "Triggers")
            tableMapping.ColumnMappings.Add("UserDefinedMessages", "UserDefinedMessages")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "SQLCfg.pInstanceDelete"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "SQLCfg.pInstanceInsert"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActiveDirectory", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ActiveDirectory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Audits", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Audits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BackupDevices", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "BackupDevices", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Configuration", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Configuration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Credentials", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Credentials", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CryptographicProviders", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "CryptographicProviders", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Databases", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Databases", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndPoints", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "EndPoints", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextService", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "FullTextService", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Information", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Information", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JobServer", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "JobServer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Logins", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Logins", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LinkedServers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "LinkedServers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mail", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Mail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProxyAccount", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ProxyAccount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResourceGovernor", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ResourceGovernor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Roles", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServerAuditSpecifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ServerAuditSpecifications", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Settings", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Settings", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Triggers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Triggers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedMessages", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedMessages", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "SQLCfg.pInstanceUpdate"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActiveDirectory", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ActiveDirectory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Audits", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Audits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BackupDevices", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "BackupDevices", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Configuration", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Configuration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Credentials", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Credentials", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CryptographicProviders", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "CryptographicProviders", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Databases", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Databases", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndPoints", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "EndPoints", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextService", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "FullTextService", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Information", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Information", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JobServer", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "JobServer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Logins", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Logins", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LinkedServers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "LinkedServers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mail", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Mail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProxyAccount", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ProxyAccount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResourceGovernor", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ResourceGovernor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Roles", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServerAuditSpecifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ServerAuditSpecifications", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Settings", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Settings", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Triggers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Triggers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedMessages", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedMessages", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pInstanceSelectAll"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pInstanceGet"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActiveDirectory", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Audits", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BackupDevices", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Configuration", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Credentials", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CryprographicProviders", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Databases", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndPoints", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextService", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Information", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JobServer", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Logins", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LinkedServers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mail", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProxyAccount", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResourceGovernor", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServerAuditSpecifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Settings", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Triggers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedMessages", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SQLCfg.pInstanceInit"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionMajor", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EngineEdition", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tInstanceDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsSQLConfiguration.tInstanceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsSQLConfiguration.tInstanceDataTable = New dsSQLConfiguration.tInstanceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsSQLConfiguration.tInstanceDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsSQLConfiguration) As Integer
            Return Me.Adapter.Update(dataSet, "tInstance")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Name As String) As Integer
            If (Name Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Name As String,  _
                    ByVal ActiveDirectory As Global.System.Nullable(Of Boolean),  _
                    ByVal Audits As Global.System.Nullable(Of Boolean),  _
                    ByVal BackupDevices As Global.System.Nullable(Of Boolean),  _
                    ByVal Configuration As Global.System.Nullable(Of Boolean),  _
                    ByVal Credentials As Global.System.Nullable(Of Boolean),  _
                    ByVal CryptographicProviders As Global.System.Nullable(Of Boolean),  _
                    ByVal Databases As Global.System.Nullable(Of Boolean),  _
                    ByVal EndPoints As Global.System.Nullable(Of Boolean),  _
                    ByVal FullTextService As Global.System.Nullable(Of Boolean),  _
                    ByVal Information As Global.System.Nullable(Of Boolean),  _
                    ByVal JobServer As Global.System.Nullable(Of Boolean),  _
                    ByVal Logins As Global.System.Nullable(Of Boolean),  _
                    ByVal LinkedServers As Global.System.Nullable(Of Boolean),  _
                    ByVal Mail As Global.System.Nullable(Of Boolean),  _
                    ByVal ProxyAccount As Global.System.Nullable(Of Boolean),  _
                    ByVal ResourceGovernor As Global.System.Nullable(Of Boolean),  _
                    ByVal Roles As Global.System.Nullable(Of Boolean),  _
                    ByVal ServerAuditSpecifications As Global.System.Nullable(Of Boolean),  _
                    ByVal Settings As Global.System.Nullable(Of Boolean),  _
                    ByVal Triggers As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedMessages As Global.System.Nullable(Of Boolean)) As Integer
            If (Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Name,String)
            End If
            If (ActiveDirectory.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ActiveDirectory.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Audits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Audits.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (BackupDevices.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(BackupDevices.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Configuration.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Configuration.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Credentials.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Credentials.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CryptographicProviders.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CryptographicProviders.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Databases.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Databases.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (EndPoints.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(EndPoints.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (FullTextService.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(FullTextService.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Information.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Information.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (JobServer.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(JobServer.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Logins.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Logins.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LinkedServers.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LinkedServers.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Mail.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Mail.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (ProxyAccount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(ProxyAccount.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ResourceGovernor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ResourceGovernor.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Roles.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Roles.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ServerAuditSpecifications.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ServerAuditSpecifications.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Settings.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Settings.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Triggers.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Triggers.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedMessages.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(UserDefinedMessages.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Name As String,  _
                    ByVal ActiveDirectory As Global.System.Nullable(Of Boolean),  _
                    ByVal Audits As Global.System.Nullable(Of Boolean),  _
                    ByVal BackupDevices As Global.System.Nullable(Of Boolean),  _
                    ByVal Configuration As Global.System.Nullable(Of Boolean),  _
                    ByVal Credentials As Global.System.Nullable(Of Boolean),  _
                    ByVal CryptographicProviders As Global.System.Nullable(Of Boolean),  _
                    ByVal Databases As Global.System.Nullable(Of Boolean),  _
                    ByVal EndPoints As Global.System.Nullable(Of Boolean),  _
                    ByVal FullTextService As Global.System.Nullable(Of Boolean),  _
                    ByVal Information As Global.System.Nullable(Of Boolean),  _
                    ByVal JobServer As Global.System.Nullable(Of Boolean),  _
                    ByVal Logins As Global.System.Nullable(Of Boolean),  _
                    ByVal LinkedServers As Global.System.Nullable(Of Boolean),  _
                    ByVal Mail As Global.System.Nullable(Of Boolean),  _
                    ByVal ProxyAccount As Global.System.Nullable(Of Boolean),  _
                    ByVal ResourceGovernor As Global.System.Nullable(Of Boolean),  _
                    ByVal Roles As Global.System.Nullable(Of Boolean),  _
                    ByVal ServerAuditSpecifications As Global.System.Nullable(Of Boolean),  _
                    ByVal Settings As Global.System.Nullable(Of Boolean),  _
                    ByVal Triggers As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedMessages As Global.System.Nullable(Of Boolean)) As Integer
            If (Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Name,String)
            End If
            If (ActiveDirectory.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ActiveDirectory.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Audits.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Audits.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (BackupDevices.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(BackupDevices.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Configuration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Configuration.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Credentials.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Credentials.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CryptographicProviders.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CryptographicProviders.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Databases.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Databases.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (EndPoints.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(EndPoints.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (FullTextService.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(FullTextService.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Information.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Information.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (JobServer.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(JobServer.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Logins.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Logins.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LinkedServers.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(LinkedServers.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Mail.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Mail.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (ProxyAccount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ProxyAccount.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ResourceGovernor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ResourceGovernor.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Roles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Roles.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ServerAuditSpecifications.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ServerAuditSpecifications.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Settings.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Settings.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Triggers.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Triggers.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedMessages.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(UserDefinedMessages.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pInstanceGet( _
                    ByVal Name As String,  _
                    ByRef ActiveDirectory As Global.System.Nullable(Of Boolean),  _
                    ByRef Audits As Global.System.Nullable(Of Boolean),  _
                    ByRef BackupDevices As Global.System.Nullable(Of Boolean),  _
                    ByRef Configuration As Global.System.Nullable(Of Boolean),  _
                    ByRef Credentials As Global.System.Nullable(Of Boolean),  _
                    ByRef CryprographicProviders As Global.System.Nullable(Of Boolean),  _
                    ByRef Databases As Global.System.Nullable(Of Boolean),  _
                    ByRef EndPoints As Global.System.Nullable(Of Boolean),  _
                    ByRef FullTextService As Global.System.Nullable(Of Boolean),  _
                    ByRef Information As Global.System.Nullable(Of Boolean),  _
                    ByRef JobServer As Global.System.Nullable(Of Boolean),  _
                    ByRef Logins As Global.System.Nullable(Of Boolean),  _
                    ByRef LinkedServers As Global.System.Nullable(Of Boolean),  _
                    ByRef Mail As Global.System.Nullable(Of Boolean),  _
                    ByRef ProxyAccount As Global.System.Nullable(Of Boolean),  _
                    ByRef ResourceGovernor As Global.System.Nullable(Of Boolean),  _
                    ByRef Roles As Global.System.Nullable(Of Boolean),  _
                    ByRef ServerAuditSpecifications As Global.System.Nullable(Of Boolean),  _
                    ByRef Settings As Global.System.Nullable(Of Boolean),  _
                    ByRef Triggers As Global.System.Nullable(Of Boolean),  _
                    ByRef UserDefinedMessages As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (Name Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Name,String)
            End If
            If (ActiveDirectory.HasValue = true) Then
                command.Parameters(2).Value = CType(ActiveDirectory.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Audits.HasValue = true) Then
                command.Parameters(3).Value = CType(Audits.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (BackupDevices.HasValue = true) Then
                command.Parameters(4).Value = CType(BackupDevices.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Configuration.HasValue = true) Then
                command.Parameters(5).Value = CType(Configuration.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Credentials.HasValue = true) Then
                command.Parameters(6).Value = CType(Credentials.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CryprographicProviders.HasValue = true) Then
                command.Parameters(7).Value = CType(CryprographicProviders.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Databases.HasValue = true) Then
                command.Parameters(8).Value = CType(Databases.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (EndPoints.HasValue = true) Then
                command.Parameters(9).Value = CType(EndPoints.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (FullTextService.HasValue = true) Then
                command.Parameters(10).Value = CType(FullTextService.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Information.HasValue = true) Then
                command.Parameters(11).Value = CType(Information.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (JobServer.HasValue = true) Then
                command.Parameters(12).Value = CType(JobServer.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Logins.HasValue = true) Then
                command.Parameters(13).Value = CType(Logins.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LinkedServers.HasValue = true) Then
                command.Parameters(14).Value = CType(LinkedServers.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Mail.HasValue = true) Then
                command.Parameters(15).Value = CType(Mail.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (ProxyAccount.HasValue = true) Then
                command.Parameters(16).Value = CType(ProxyAccount.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ResourceGovernor.HasValue = true) Then
                command.Parameters(17).Value = CType(ResourceGovernor.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Roles.HasValue = true) Then
                command.Parameters(18).Value = CType(Roles.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ServerAuditSpecifications.HasValue = true) Then
                command.Parameters(19).Value = CType(ServerAuditSpecifications.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Settings.HasValue = true) Then
                command.Parameters(20).Value = CType(Settings.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Triggers.HasValue = true) Then
                command.Parameters(21).Value = CType(Triggers.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedMessages.HasValue = true) Then
                command.Parameters(22).Value = CType(UserDefinedMessages.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(2).Value Is Nothing)  _
                        OrElse (command.Parameters(2).Value.GetType Is GetType(Global.System.DBNull))) Then
                ActiveDirectory = New Global.System.Nullable(Of Boolean)()
            Else
                ActiveDirectory = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(2).Value,Boolean))
            End If
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                Audits = New Global.System.Nullable(Of Boolean)()
            Else
                Audits = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(3).Value,Boolean))
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                BackupDevices = New Global.System.Nullable(Of Boolean)()
            Else
                BackupDevices = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(4).Value,Boolean))
            End If
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                Configuration = New Global.System.Nullable(Of Boolean)()
            Else
                Configuration = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(5).Value,Boolean))
            End If
            If ((command.Parameters(6).Value Is Nothing)  _
                        OrElse (command.Parameters(6).Value.GetType Is GetType(Global.System.DBNull))) Then
                Credentials = New Global.System.Nullable(Of Boolean)()
            Else
                Credentials = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(6).Value,Boolean))
            End If
            If ((command.Parameters(7).Value Is Nothing)  _
                        OrElse (command.Parameters(7).Value.GetType Is GetType(Global.System.DBNull))) Then
                CryprographicProviders = New Global.System.Nullable(Of Boolean)()
            Else
                CryprographicProviders = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(7).Value,Boolean))
            End If
            If ((command.Parameters(8).Value Is Nothing)  _
                        OrElse (command.Parameters(8).Value.GetType Is GetType(Global.System.DBNull))) Then
                Databases = New Global.System.Nullable(Of Boolean)()
            Else
                Databases = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(8).Value,Boolean))
            End If
            If ((command.Parameters(9).Value Is Nothing)  _
                        OrElse (command.Parameters(9).Value.GetType Is GetType(Global.System.DBNull))) Then
                EndPoints = New Global.System.Nullable(Of Boolean)()
            Else
                EndPoints = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(9).Value,Boolean))
            End If
            If ((command.Parameters(10).Value Is Nothing)  _
                        OrElse (command.Parameters(10).Value.GetType Is GetType(Global.System.DBNull))) Then
                FullTextService = New Global.System.Nullable(Of Boolean)()
            Else
                FullTextService = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(10).Value,Boolean))
            End If
            If ((command.Parameters(11).Value Is Nothing)  _
                        OrElse (command.Parameters(11).Value.GetType Is GetType(Global.System.DBNull))) Then
                Information = New Global.System.Nullable(Of Boolean)()
            Else
                Information = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(11).Value,Boolean))
            End If
            If ((command.Parameters(12).Value Is Nothing)  _
                        OrElse (command.Parameters(12).Value.GetType Is GetType(Global.System.DBNull))) Then
                JobServer = New Global.System.Nullable(Of Boolean)()
            Else
                JobServer = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(12).Value,Boolean))
            End If
            If ((command.Parameters(13).Value Is Nothing)  _
                        OrElse (command.Parameters(13).Value.GetType Is GetType(Global.System.DBNull))) Then
                Logins = New Global.System.Nullable(Of Boolean)()
            Else
                Logins = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(13).Value,Boolean))
            End If
            If ((command.Parameters(14).Value Is Nothing)  _
                        OrElse (command.Parameters(14).Value.GetType Is GetType(Global.System.DBNull))) Then
                LinkedServers = New Global.System.Nullable(Of Boolean)()
            Else
                LinkedServers = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(14).Value,Boolean))
            End If
            If ((command.Parameters(15).Value Is Nothing)  _
                        OrElse (command.Parameters(15).Value.GetType Is GetType(Global.System.DBNull))) Then
                Mail = New Global.System.Nullable(Of Boolean)()
            Else
                Mail = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(15).Value,Boolean))
            End If
            If ((command.Parameters(16).Value Is Nothing)  _
                        OrElse (command.Parameters(16).Value.GetType Is GetType(Global.System.DBNull))) Then
                ProxyAccount = New Global.System.Nullable(Of Boolean)()
            Else
                ProxyAccount = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(16).Value,Boolean))
            End If
            If ((command.Parameters(17).Value Is Nothing)  _
                        OrElse (command.Parameters(17).Value.GetType Is GetType(Global.System.DBNull))) Then
                ResourceGovernor = New Global.System.Nullable(Of Boolean)()
            Else
                ResourceGovernor = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(17).Value,Boolean))
            End If
            If ((command.Parameters(18).Value Is Nothing)  _
                        OrElse (command.Parameters(18).Value.GetType Is GetType(Global.System.DBNull))) Then
                Roles = New Global.System.Nullable(Of Boolean)()
            Else
                Roles = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(18).Value,Boolean))
            End If
            If ((command.Parameters(19).Value Is Nothing)  _
                        OrElse (command.Parameters(19).Value.GetType Is GetType(Global.System.DBNull))) Then
                ServerAuditSpecifications = New Global.System.Nullable(Of Boolean)()
            Else
                ServerAuditSpecifications = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(19).Value,Boolean))
            End If
            If ((command.Parameters(20).Value Is Nothing)  _
                        OrElse (command.Parameters(20).Value.GetType Is GetType(Global.System.DBNull))) Then
                Settings = New Global.System.Nullable(Of Boolean)()
            Else
                Settings = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(20).Value,Boolean))
            End If
            If ((command.Parameters(21).Value Is Nothing)  _
                        OrElse (command.Parameters(21).Value.GetType Is GetType(Global.System.DBNull))) Then
                Triggers = New Global.System.Nullable(Of Boolean)()
            Else
                Triggers = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(21).Value,Boolean))
            End If
            If ((command.Parameters(22).Value Is Nothing)  _
                        OrElse (command.Parameters(22).Value.GetType Is GetType(Global.System.DBNull))) Then
                UserDefinedMessages = New Global.System.Nullable(Of Boolean)()
            Else
                UserDefinedMessages = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(22).Value,Boolean))
            End If
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pInstanceInit(ByVal InstanceName As String, ByVal VersionMajor As Global.System.Nullable(Of Integer), ByVal EngineEdition As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (InstanceName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (VersionMajor.HasValue = true) Then
                command.Parameters(2).Value = CType(VersionMajor.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EngineEdition.HasValue = true) Then
                command.Parameters(3).Value = CType(EngineEdition.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tScheduleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tSchedule"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName")
            tableMapping.ColumnMappings.Add("Interval", "Interval")
            tableMapping.ColumnMappings.Add("IntervalType", "IntervalType")
            tableMapping.ColumnMappings.Add("IntervalBaseDt", "IntervalBaseDt")
            tableMapping.ColumnMappings.Add("UseEventNotifications", "UseEventNotifications")
            tableMapping.ColumnMappings.Add("IsActive", "IsActive")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "SQLCfg.pScheduleDelete"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "SQLCfg.pScheduleInsert"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Interval", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Interval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntervalType", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "IntervalType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntervalBaseDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, "IntervalBaseDt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UseEventNotifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UseEventNotifications", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsActive", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "IsActive", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.InputOutput, 10, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "SQLCfg.pScheduleUpdate"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Interval", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Interval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntervalType", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "IntervalType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntervalBaseDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, "IntervalBaseDt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UseEventNotifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UseEventNotifications", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsActive", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "IsActive", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pScheduleSelectAll"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pScheduleSelectAllForInstance"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SQLCfg.pScheduleGet"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Interval", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.InputOutput, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntervalType", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntervalBaseDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.InputOutput, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UseEventNotifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsActive", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tScheduleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsSQLConfiguration.tScheduleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsSQLConfiguration.tScheduleDataTable = New dsSQLConfiguration.tScheduleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByInstanceName(ByVal dataTable As dsSQLConfiguration.tScheduleDataTable, ByVal InstanceName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByInstanceName(ByVal InstanceName As String) As dsSQLConfiguration.tScheduleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            Dim dataTable As dsSQLConfiguration.tScheduleDataTable = New dsSQLConfiguration.tScheduleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsSQLConfiguration.tScheduleDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsSQLConfiguration) As Integer
            Return Me.Adapter.Update(dataSet, "tSchedule")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Integer)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal InstanceName As String, ByVal Interval As Global.System.Nullable(Of Integer), ByVal IntervalType As String, ByVal IntervalBaseDt As Global.System.Nullable(Of Date), ByVal UseEventNotifications As Global.System.Nullable(Of Boolean), ByVal IsActive As Global.System.Nullable(Of Boolean), ByRef Id As Global.System.Nullable(Of Integer)) As Integer
            If (InstanceName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (Interval.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Interval.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (IntervalType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(IntervalType,String)
            End If
            If (IntervalBaseDt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IntervalBaseDt.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (UseEventNotifications.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(UseEventNotifications.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (IsActive.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(IsActive.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                If ((Me.Adapter.InsertCommand.Parameters(7).Value Is Nothing)  _
                            OrElse (Me.Adapter.InsertCommand.Parameters(7).Value.GetType Is GetType(Global.System.DBNull))) Then
                    Id = New Global.System.Nullable(Of Integer)()
                Else
                    Id = New Global.System.Nullable(Of Integer)(CType(Me.Adapter.InsertCommand.Parameters(7).Value,Integer))
                End If
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Global.System.Nullable(Of Integer), ByVal InstanceName As String, ByVal Interval As Global.System.Nullable(Of Integer), ByVal IntervalType As String, ByVal IntervalBaseDt As Global.System.Nullable(Of Date), ByVal UseEventNotifications As Global.System.Nullable(Of Boolean), ByVal IsActive As Global.System.Nullable(Of Boolean)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (InstanceName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (Interval.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Interval.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IntervalType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IntervalType,String)
            End If
            If (IntervalBaseDt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(IntervalBaseDt.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (UseEventNotifications.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(UseEventNotifications.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IsActive.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IsActive.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pScheduleGet(ByVal Id As Global.System.Nullable(Of Integer), ByRef InstanceName As String, ByRef Interval As Global.System.Nullable(Of Integer), ByRef IntervalType As String, ByRef IntervalBaseDt As Global.System.Nullable(Of Date), ByRef UseEventNotifications As Global.System.Nullable(Of Boolean), ByRef IsActive As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (Id.HasValue = true) Then
                command.Parameters(1).Value = CType(Id.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (InstanceName Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (Interval.HasValue = true) Then
                command.Parameters(3).Value = CType(Interval.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IntervalType Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(IntervalType,String)
            End If
            If (IntervalBaseDt.HasValue = true) Then
                command.Parameters(5).Value = CType(IntervalBaseDt.Value,Date)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (UseEventNotifications.HasValue = true) Then
                command.Parameters(6).Value = CType(UseEventNotifications.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IsActive.HasValue = true) Then
                command.Parameters(7).Value = CType(IsActive.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(2).Value Is Nothing)  _
                        OrElse (command.Parameters(2).Value.GetType Is GetType(Global.System.DBNull))) Then
                InstanceName = Nothing
            Else
                InstanceName = CType(command.Parameters(2).Value,String)
            End If
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                Interval = New Global.System.Nullable(Of Integer)()
            Else
                Interval = New Global.System.Nullable(Of Integer)(CType(command.Parameters(3).Value,Integer))
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                IntervalType = Nothing
            Else
                IntervalType = CType(command.Parameters(4).Value,String)
            End If
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                IntervalBaseDt = New Global.System.Nullable(Of Date)()
            Else
                IntervalBaseDt = New Global.System.Nullable(Of Date)(CType(command.Parameters(5).Value,Date))
            End If
            If ((command.Parameters(6).Value Is Nothing)  _
                        OrElse (command.Parameters(6).Value.GetType Is GetType(Global.System.DBNull))) Then
                UseEventNotifications = New Global.System.Nullable(Of Boolean)()
            Else
                UseEventNotifications = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(6).Value,Boolean))
            End If
            If ((command.Parameters(7).Value Is Nothing)  _
                        OrElse (command.Parameters(7).Value.GetType Is GetType(Global.System.DBNull))) Then
                IsActive = New Global.System.Nullable(Of Boolean)()
            Else
                IsActive = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(7).Value,Boolean))
            End If
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tServiceBrokerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tServiceBroker"
            tableMapping.ColumnMappings.Add("DatabaseName", "DatabaseName")
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName")
            tableMapping.ColumnMappings.Add("MessageTypes", "MessageTypes")
            tableMapping.ColumnMappings.Add("Priorities", "Priorities")
            tableMapping.ColumnMappings.Add("Queues", "Queues")
            tableMapping.ColumnMappings.Add("RemoteServiceBindings", "RemoteServiceBindings")
            tableMapping.ColumnMappings.Add("Routes", "Routes")
            tableMapping.ColumnMappings.Add("ServiceContracts", "ServiceContracts")
            tableMapping.ColumnMappings.Add("Services", "Services")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "SQLCfg.pServiceBrokerDelete"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "DatabaseName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "SQLCfg.pServiceBrokerInsert"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "DatabaseName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "MessageTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Priorities", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Priorities", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Queues", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Queues", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RemoteServiceBindings", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "RemoteServiceBindings", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Routes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Routes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServiceContracts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ServiceContracts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Services", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Services", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "SQLCfg.pServiceBrokerUpdate"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "DatabaseName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "MessageTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Priorities", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Priorities", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Queues", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Queues", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RemoteServiceBindings", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "RemoteServiceBindings", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Routes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Routes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServiceContracts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ServiceContracts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Services", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Services", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClue1_3_5_1ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pServiceBrokerSelectAll"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pServiceBrokerSelectAllForInstance"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SQLCfg.pServiceBrokerGet"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Priorities", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Queues", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RemoteServiceBindings", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Routes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServiceContracts", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Services", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tServiceBrokerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsSQLConfiguration.tServiceBrokerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsSQLConfiguration.tServiceBrokerDataTable = New dsSQLConfiguration.tServiceBrokerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByInstanceName(ByVal dataTable As dsSQLConfiguration.tServiceBrokerDataTable, ByVal InstanceName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByInstanceName(ByVal InstanceName As String) As dsSQLConfiguration.tServiceBrokerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            Dim dataTable As dsSQLConfiguration.tServiceBrokerDataTable = New dsSQLConfiguration.tServiceBrokerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsSQLConfiguration.tServiceBrokerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsSQLConfiguration) As Integer
            Return Me.Adapter.Update(dataSet, "tServiceBroker")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal DatabaseName As String, ByVal InstanceName As String) As Integer
            If (DatabaseName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(DatabaseName,String)
            End If
            If (InstanceName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(InstanceName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DatabaseName As String, ByVal InstanceName As String, ByVal MessageTypes As Global.System.Nullable(Of Boolean), ByVal Priorities As Global.System.Nullable(Of Boolean), ByVal Queues As Global.System.Nullable(Of Boolean), ByVal RemoteServiceBindings As Global.System.Nullable(Of Boolean), ByVal Routes As Global.System.Nullable(Of Boolean), ByVal ServiceContracts As Global.System.Nullable(Of Boolean), ByVal Services As Global.System.Nullable(Of Boolean)) As Integer
            If (DatabaseName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DatabaseName,String)
            End If
            If (InstanceName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (MessageTypes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MessageTypes.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Priorities.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Priorities.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Queues.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Queues.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (RemoteServiceBindings.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(RemoteServiceBindings.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Routes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Routes.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (ServiceContracts.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ServiceContracts.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Services.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Services.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DatabaseName As String, ByVal InstanceName As String, ByVal MessageTypes As Global.System.Nullable(Of Boolean), ByVal Priorities As Global.System.Nullable(Of Boolean), ByVal Queues As Global.System.Nullable(Of Boolean), ByVal RemoteServiceBindings As Global.System.Nullable(Of Boolean), ByVal Routes As Global.System.Nullable(Of Boolean), ByVal ServiceContracts As Global.System.Nullable(Of Boolean), ByVal Services As Global.System.Nullable(Of Boolean)) As Integer
            If (DatabaseName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DatabaseName,String)
            End If
            If (InstanceName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (MessageTypes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MessageTypes.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Priorities.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Priorities.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Queues.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Queues.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (RemoteServiceBindings.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(RemoteServiceBindings.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Routes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Routes.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (ServiceContracts.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ServiceContracts.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Services.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Services.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pServiceBrokerGet(ByVal DatabaseName As String, ByVal InstanceName As String, ByRef MessageTypes As Global.System.Nullable(Of Boolean), ByRef Priorities As Global.System.Nullable(Of Boolean), ByRef Queues As Global.System.Nullable(Of Boolean), ByRef RemoteServiceBindings As Global.System.Nullable(Of Boolean), ByRef Routes As Global.System.Nullable(Of Boolean), ByRef ServiceContracts As Global.System.Nullable(Of Boolean), ByRef Services As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (DatabaseName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DatabaseName,String)
            End If
            If (InstanceName Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (MessageTypes.HasValue = true) Then
                command.Parameters(3).Value = CType(MessageTypes.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Priorities.HasValue = true) Then
                command.Parameters(4).Value = CType(Priorities.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Queues.HasValue = true) Then
                command.Parameters(5).Value = CType(Queues.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (RemoteServiceBindings.HasValue = true) Then
                command.Parameters(6).Value = CType(RemoteServiceBindings.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Routes.HasValue = true) Then
                command.Parameters(7).Value = CType(Routes.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (ServiceContracts.HasValue = true) Then
                command.Parameters(8).Value = CType(ServiceContracts.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Services.HasValue = true) Then
                command.Parameters(9).Value = CType(Services.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                MessageTypes = New Global.System.Nullable(Of Boolean)()
            Else
                MessageTypes = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(3).Value,Boolean))
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                Priorities = New Global.System.Nullable(Of Boolean)()
            Else
                Priorities = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(4).Value,Boolean))
            End If
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                Queues = New Global.System.Nullable(Of Boolean)()
            Else
                Queues = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(5).Value,Boolean))
            End If
            If ((command.Parameters(6).Value Is Nothing)  _
                        OrElse (command.Parameters(6).Value.GetType Is GetType(Global.System.DBNull))) Then
                RemoteServiceBindings = New Global.System.Nullable(Of Boolean)()
            Else
                RemoteServiceBindings = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(6).Value,Boolean))
            End If
            If ((command.Parameters(7).Value Is Nothing)  _
                        OrElse (command.Parameters(7).Value.GetType Is GetType(Global.System.DBNull))) Then
                Routes = New Global.System.Nullable(Of Boolean)()
            Else
                Routes = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(7).Value,Boolean))
            End If
            If ((command.Parameters(8).Value Is Nothing)  _
                        OrElse (command.Parameters(8).Value.GetType Is GetType(Global.System.DBNull))) Then
                ServiceContracts = New Global.System.Nullable(Of Boolean)()
            Else
                ServiceContracts = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(8).Value,Boolean))
            End If
            If ((command.Parameters(9).Value Is Nothing)  _
                        OrElse (command.Parameters(9).Value.GetType Is GetType(Global.System.DBNull))) Then
                Services = New Global.System.Nullable(Of Boolean)()
            Else
                Services = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(9).Value,Boolean))
            End If
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tDbTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tDb"
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName")
            tableMapping.ColumnMappings.Add("ActiveDirectory", "ActiveDirectory")
            tableMapping.ColumnMappings.Add("ApplicationRoles", "ApplicationRoles")
            tableMapping.ColumnMappings.Add("Assemblies", "Assemblies")
            tableMapping.ColumnMappings.Add("AsymmetricKeys", "AsymmetricKeys")
            tableMapping.ColumnMappings.Add("Certificates", "Certificates")
            tableMapping.ColumnMappings.Add("DatabaseAuditSpecifications", "DatabaseAuditSpecifications")
            tableMapping.ColumnMappings.Add("DatabaseOptions", "DatabaseOptions")
            tableMapping.ColumnMappings.Add("Defaults", "Defaults")
            tableMapping.ColumnMappings.Add("FullTextCatalogs", "FullTextCatalogs")
            tableMapping.ColumnMappings.Add("FullTextStopLists", "FullTextStopLists")
            tableMapping.ColumnMappings.Add("PartitionFunctions", "PartitionFunctions")
            tableMapping.ColumnMappings.Add("PartitionSchemes", "PartitionSchemes")
            tableMapping.ColumnMappings.Add("PlanGuides", "PlanGuides")
            tableMapping.ColumnMappings.Add("Roles", "Roles")
            tableMapping.ColumnMappings.Add("Rules", "Rules")
            tableMapping.ColumnMappings.Add("Schemas", "Schemas")
            tableMapping.ColumnMappings.Add("ServiceBroker", "ServiceBroker")
            tableMapping.ColumnMappings.Add("StoredProcedures", "StoredProcedures")
            tableMapping.ColumnMappings.Add("SymmetricKeys", "SymmetricKeys")
            tableMapping.ColumnMappings.Add("Synonyms", "Synonyms")
            tableMapping.ColumnMappings.Add("Tables", "Tables")
            tableMapping.ColumnMappings.Add("Triggers", "Triggers")
            tableMapping.ColumnMappings.Add("UserDefinedAggregates", "UserDefinedAggregates")
            tableMapping.ColumnMappings.Add("UserDefinedDataTypes", "UserDefinedDataTypes")
            tableMapping.ColumnMappings.Add("UserDefinedFunctions", "UserDefinedFunctions")
            tableMapping.ColumnMappings.Add("UserDefinedTableTypes", "UserDefinedTableTypes")
            tableMapping.ColumnMappings.Add("UserDefinedTypes", "UserDefinedTypes")
            tableMapping.ColumnMappings.Add("Users", "Users")
            tableMapping.ColumnMappings.Add("Views", "Views")
            tableMapping.ColumnMappings.Add("XMLSchemaCollections", "XMLSchemaCollections")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "SQLCfg.pDbDelete"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "SQLCfg.pDbInsert"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActiveDirectory", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ActiveDirectory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApplicationRoles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ApplicationRoles", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Assemblies", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Assemblies", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AsymmetricKeys", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "AsymmetricKeys", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Certificates", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Certificates", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseAuditSpecifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "DatabaseAuditSpecifications", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseOptions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "DatabaseOptions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Defaults", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Defaults", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextCatalogs", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "FullTextCatalogs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextStopLists", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "FullTextStopLists", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartitionFunctions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "PartitionFunctions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartitionSchemes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "PartitionSchemes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PlanGuides", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "PlanGuides", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Roles", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rules", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Rules", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Schemas", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Schemas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServiceBroker", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ServiceBroker", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoredProcedures", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "StoredProcedures", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SymmetricKeys", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "SymmetricKeys", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Synonyms", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Synonyms", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tables", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Tables", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Triggers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Triggers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedAggregates", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedAggregates", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedDataTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedDataTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedFunctions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedFunctions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedTableTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedTableTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Users", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Users", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Views", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Views", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XMLSchemaCollections", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "XMLSchemaCollections", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "SQLCfg.pDbUpdate"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "InstanceName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActiveDirectory", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ActiveDirectory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApplicationRoles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ApplicationRoles", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Assemblies", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Assemblies", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AsymmetricKeys", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "AsymmetricKeys", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Certificates", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Certificates", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseAuditSpecifications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "DatabaseAuditSpecifications", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseOptions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "DatabaseOptions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Defaults", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Defaults", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextCatalogs", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "FullTextCatalogs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextStopLists", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "FullTextStopLists", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartitionFunctions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "PartitionFunctions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartitionSchemes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "PartitionSchemes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PlanGuides", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "PlanGuides", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Roles", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rules", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Rules", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Schemas", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Schemas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServiceBroker", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "ServiceBroker", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoredProcedures", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "StoredProcedures", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SymmetricKeys", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "SymmetricKeys", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Synonyms", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Synonyms", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tables", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Tables", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Triggers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Triggers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedAggregates", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedAggregates", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedDataTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedDataTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedFunctions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedFunctions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedTableTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedTableTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "UserDefinedTypes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Users", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Users", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Views", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "Views", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XMLSchemaCollections", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "XMLSchemaCollections", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pDbSelectAll"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pDbSelectAllForInstance"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SQLCfg.pDbGet"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActiveDirectory", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApplicationRoles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Assemblies", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AsymmetricKeys", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Certificates", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseAuditSpecfications", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatabaseOptions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Defaults", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextCatalogs", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullTextStopLists", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartitionFunctions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartitionSchemes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PlanGuides", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roles", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rules", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Schemas", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServiceBroker", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoredProcedures", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SymmetricKeys", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Synonyms", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tables", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Triggers", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedAggregates", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedDataTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedFunctions", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedTableTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserDefinedTypes", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Users", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Views", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XMLSchemaCollections", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.InputOutput, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SQLCfg.pDbInit"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstanceName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DBName", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionMajor", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tDbDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsSQLConfiguration.tDbDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsSQLConfiguration.tDbDataTable = New dsSQLConfiguration.tDbDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByInstanceName(ByVal dataTable As dsSQLConfiguration.tDbDataTable, ByVal InstanceName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByInstanceName(ByVal InstanceName As String) As dsSQLConfiguration.tDbDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (InstanceName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(InstanceName,String)
            End If
            Dim dataTable As dsSQLConfiguration.tDbDataTable = New dsSQLConfiguration.tDbDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsSQLConfiguration.tDbDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsSQLConfiguration) As Integer
            Return Me.Adapter.Update(dataSet, "tDb")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Name As String, ByVal InstanceName As String) As Integer
            If (Name Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Name,String)
            End If
            If (InstanceName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(InstanceName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Name As String,  _
                    ByVal InstanceName As String,  _
                    ByVal ActiveDirectory As Global.System.Nullable(Of Boolean),  _
                    ByVal ApplicationRoles As Global.System.Nullable(Of Boolean),  _
                    ByVal Assemblies As Global.System.Nullable(Of Boolean),  _
                    ByVal AsymmetricKeys As Global.System.Nullable(Of Boolean),  _
                    ByVal Certificates As Global.System.Nullable(Of Boolean),  _
                    ByVal DatabaseAuditSpecifications As Global.System.Nullable(Of Boolean),  _
                    ByVal DatabaseOptions As Global.System.Nullable(Of Boolean),  _
                    ByVal Defaults As Global.System.Nullable(Of Boolean),  _
                    ByVal FullTextCatalogs As Global.System.Nullable(Of Boolean),  _
                    ByVal FullTextStopLists As Global.System.Nullable(Of Boolean),  _
                    ByVal PartitionFunctions As Global.System.Nullable(Of Boolean),  _
                    ByVal PartitionSchemes As Global.System.Nullable(Of Boolean),  _
                    ByVal PlanGuides As Global.System.Nullable(Of Boolean),  _
                    ByVal Roles As Global.System.Nullable(Of Boolean),  _
                    ByVal Rules As Global.System.Nullable(Of Boolean),  _
                    ByVal Schemas As Global.System.Nullable(Of Boolean),  _
                    ByVal ServiceBroker As Global.System.Nullable(Of Boolean),  _
                    ByVal StoredProcedures As Global.System.Nullable(Of Boolean),  _
                    ByVal SymmetricKeys As Global.System.Nullable(Of Boolean),  _
                    ByVal Synonyms As Global.System.Nullable(Of Boolean),  _
                    ByVal Tables As Global.System.Nullable(Of Boolean),  _
                    ByVal Triggers As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedAggregates As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedDataTypes As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedFunctions As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedTableTypes As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedTypes As Global.System.Nullable(Of Boolean),  _
                    ByVal Users As Global.System.Nullable(Of Boolean),  _
                    ByVal Views As Global.System.Nullable(Of Boolean),  _
                    ByVal XMLSchemaCollections As Global.System.Nullable(Of Boolean)) As Integer
            If (Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Name,String)
            End If
            If (InstanceName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (ActiveDirectory.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ActiveDirectory.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ApplicationRoles.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ApplicationRoles.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Assemblies.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Assemblies.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AsymmetricKeys.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(AsymmetricKeys.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Certificates.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Certificates.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DatabaseAuditSpecifications.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DatabaseAuditSpecifications.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (DatabaseOptions.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DatabaseOptions.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Defaults.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Defaults.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (FullTextCatalogs.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FullTextCatalogs.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FullTextStopLists.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FullTextStopLists.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (PartitionFunctions.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PartitionFunctions.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (PartitionSchemes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PartitionSchemes.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PlanGuides.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PlanGuides.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Roles.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Roles.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Rules.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Rules.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Schemas.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Schemas.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ServiceBroker.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ServiceBroker.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (StoredProcedures.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(StoredProcedures.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SymmetricKeys.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SymmetricKeys.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Synonyms.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Synonyms.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Tables.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Tables.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Triggers.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Triggers.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedAggregates.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(UserDefinedAggregates.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedDataTypes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(UserDefinedDataTypes.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedFunctions.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(UserDefinedFunctions.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedTableTypes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(UserDefinedTableTypes.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedTypes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(UserDefinedTypes.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Users.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Users.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Views.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Views.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (XMLSchemaCollections.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(XMLSchemaCollections.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Name As String,  _
                    ByVal InstanceName As String,  _
                    ByVal ActiveDirectory As Global.System.Nullable(Of Boolean),  _
                    ByVal ApplicationRoles As Global.System.Nullable(Of Boolean),  _
                    ByVal Assemblies As Global.System.Nullable(Of Boolean),  _
                    ByVal AsymmetricKeys As Global.System.Nullable(Of Boolean),  _
                    ByVal Certificates As Global.System.Nullable(Of Boolean),  _
                    ByVal DatabaseAuditSpecifications As Global.System.Nullable(Of Boolean),  _
                    ByVal DatabaseOptions As Global.System.Nullable(Of Boolean),  _
                    ByVal Defaults As Global.System.Nullable(Of Boolean),  _
                    ByVal FullTextCatalogs As Global.System.Nullable(Of Boolean),  _
                    ByVal FullTextStopLists As Global.System.Nullable(Of Boolean),  _
                    ByVal PartitionFunctions As Global.System.Nullable(Of Boolean),  _
                    ByVal PartitionSchemes As Global.System.Nullable(Of Boolean),  _
                    ByVal PlanGuides As Global.System.Nullable(Of Boolean),  _
                    ByVal Roles As Global.System.Nullable(Of Boolean),  _
                    ByVal Rules As Global.System.Nullable(Of Boolean),  _
                    ByVal Schemas As Global.System.Nullable(Of Boolean),  _
                    ByVal ServiceBroker As Global.System.Nullable(Of Boolean),  _
                    ByVal StoredProcedures As Global.System.Nullable(Of Boolean),  _
                    ByVal SymmetricKeys As Global.System.Nullable(Of Boolean),  _
                    ByVal Synonyms As Global.System.Nullable(Of Boolean),  _
                    ByVal Tables As Global.System.Nullable(Of Boolean),  _
                    ByVal Triggers As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedAggregates As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedDataTypes As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedFunctions As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedTableTypes As Global.System.Nullable(Of Boolean),  _
                    ByVal UserDefinedTypes As Global.System.Nullable(Of Boolean),  _
                    ByVal Users As Global.System.Nullable(Of Boolean),  _
                    ByVal Views As Global.System.Nullable(Of Boolean),  _
                    ByVal XMLSchemaCollections As Global.System.Nullable(Of Boolean)) As Integer
            If (Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Name,String)
            End If
            If (InstanceName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (ActiveDirectory.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ActiveDirectory.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ApplicationRoles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ApplicationRoles.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Assemblies.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Assemblies.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AsymmetricKeys.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(AsymmetricKeys.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Certificates.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Certificates.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DatabaseAuditSpecifications.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DatabaseAuditSpecifications.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (DatabaseOptions.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DatabaseOptions.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Defaults.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Defaults.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (FullTextCatalogs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(FullTextCatalogs.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FullTextStopLists.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(FullTextStopLists.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (PartitionFunctions.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(PartitionFunctions.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (PartitionSchemes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PartitionSchemes.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PlanGuides.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PlanGuides.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Roles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Roles.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Rules.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Rules.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Schemas.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Schemas.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ServiceBroker.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ServiceBroker.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (StoredProcedures.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(StoredProcedures.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SymmetricKeys.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(SymmetricKeys.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Synonyms.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Synonyms.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Tables.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Tables.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Triggers.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Triggers.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedAggregates.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(UserDefinedAggregates.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedDataTypes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(UserDefinedDataTypes.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedFunctions.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(UserDefinedFunctions.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedTableTypes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(UserDefinedTableTypes.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedTypes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(UserDefinedTypes.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Users.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Users.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Views.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Views.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (XMLSchemaCollections.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(XMLSchemaCollections.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pDbGet( _
                    ByVal Name As String,  _
                    ByVal InstanceName As String,  _
                    ByRef ActiveDirectory As Global.System.Nullable(Of Boolean),  _
                    ByRef ApplicationRoles As Global.System.Nullable(Of Boolean),  _
                    ByRef Assemblies As Global.System.Nullable(Of Boolean),  _
                    ByRef AsymmetricKeys As Global.System.Nullable(Of Boolean),  _
                    ByRef Certificates As Global.System.Nullable(Of Boolean),  _
                    ByRef DatabaseAuditSpecfications As Global.System.Nullable(Of Boolean),  _
                    ByRef DatabaseOptions As Global.System.Nullable(Of Boolean),  _
                    ByRef Defaults As Global.System.Nullable(Of Boolean),  _
                    ByRef FullTextCatalogs As Global.System.Nullable(Of Boolean),  _
                    ByRef FullTextStopLists As Global.System.Nullable(Of Boolean),  _
                    ByRef PartitionFunctions As Global.System.Nullable(Of Boolean),  _
                    ByRef PartitionSchemes As Global.System.Nullable(Of Boolean),  _
                    ByRef PlanGuides As Global.System.Nullable(Of Boolean),  _
                    ByRef Roles As Global.System.Nullable(Of Boolean),  _
                    ByRef Rules As Global.System.Nullable(Of Boolean),  _
                    ByRef Schemas As Global.System.Nullable(Of Boolean),  _
                    ByRef ServiceBroker As Global.System.Nullable(Of Boolean),  _
                    ByRef StoredProcedures As Global.System.Nullable(Of Boolean),  _
                    ByRef SymmetricKeys As Global.System.Nullable(Of Boolean),  _
                    ByRef Synonyms As Global.System.Nullable(Of Boolean),  _
                    ByRef Tables As Global.System.Nullable(Of Boolean),  _
                    ByRef Triggers As Global.System.Nullable(Of Boolean),  _
                    ByRef UserDefinedAggregates As Global.System.Nullable(Of Boolean),  _
                    ByRef UserDefinedDataTypes As Global.System.Nullable(Of Boolean),  _
                    ByRef UserDefinedFunctions As Global.System.Nullable(Of Boolean),  _
                    ByRef UserDefinedTableTypes As Global.System.Nullable(Of Boolean),  _
                    ByRef UserDefinedTypes As Global.System.Nullable(Of Boolean),  _
                    ByRef Users As Global.System.Nullable(Of Boolean),  _
                    ByRef Views As Global.System.Nullable(Of Boolean),  _
                    ByRef XMLSchemaCollections As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (Name Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Name,String)
            End If
            If (InstanceName Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(InstanceName,String)
            End If
            If (ActiveDirectory.HasValue = true) Then
                command.Parameters(3).Value = CType(ActiveDirectory.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ApplicationRoles.HasValue = true) Then
                command.Parameters(4).Value = CType(ApplicationRoles.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Assemblies.HasValue = true) Then
                command.Parameters(5).Value = CType(Assemblies.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AsymmetricKeys.HasValue = true) Then
                command.Parameters(6).Value = CType(AsymmetricKeys.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Certificates.HasValue = true) Then
                command.Parameters(7).Value = CType(Certificates.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DatabaseAuditSpecfications.HasValue = true) Then
                command.Parameters(8).Value = CType(DatabaseAuditSpecfications.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (DatabaseOptions.HasValue = true) Then
                command.Parameters(9).Value = CType(DatabaseOptions.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Defaults.HasValue = true) Then
                command.Parameters(10).Value = CType(Defaults.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (FullTextCatalogs.HasValue = true) Then
                command.Parameters(11).Value = CType(FullTextCatalogs.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FullTextStopLists.HasValue = true) Then
                command.Parameters(12).Value = CType(FullTextStopLists.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (PartitionFunctions.HasValue = true) Then
                command.Parameters(13).Value = CType(PartitionFunctions.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (PartitionSchemes.HasValue = true) Then
                command.Parameters(14).Value = CType(PartitionSchemes.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PlanGuides.HasValue = true) Then
                command.Parameters(15).Value = CType(PlanGuides.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Roles.HasValue = true) Then
                command.Parameters(16).Value = CType(Roles.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Rules.HasValue = true) Then
                command.Parameters(17).Value = CType(Rules.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Schemas.HasValue = true) Then
                command.Parameters(18).Value = CType(Schemas.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ServiceBroker.HasValue = true) Then
                command.Parameters(19).Value = CType(ServiceBroker.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (StoredProcedures.HasValue = true) Then
                command.Parameters(20).Value = CType(StoredProcedures.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SymmetricKeys.HasValue = true) Then
                command.Parameters(21).Value = CType(SymmetricKeys.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Synonyms.HasValue = true) Then
                command.Parameters(22).Value = CType(Synonyms.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Tables.HasValue = true) Then
                command.Parameters(23).Value = CType(Tables.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Triggers.HasValue = true) Then
                command.Parameters(24).Value = CType(Triggers.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedAggregates.HasValue = true) Then
                command.Parameters(25).Value = CType(UserDefinedAggregates.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedDataTypes.HasValue = true) Then
                command.Parameters(26).Value = CType(UserDefinedDataTypes.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedFunctions.HasValue = true) Then
                command.Parameters(27).Value = CType(UserDefinedFunctions.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedTableTypes.HasValue = true) Then
                command.Parameters(28).Value = CType(UserDefinedTableTypes.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (UserDefinedTypes.HasValue = true) Then
                command.Parameters(29).Value = CType(UserDefinedTypes.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Users.HasValue = true) Then
                command.Parameters(30).Value = CType(Users.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Views.HasValue = true) Then
                command.Parameters(31).Value = CType(Views.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (XMLSchemaCollections.HasValue = true) Then
                command.Parameters(32).Value = CType(XMLSchemaCollections.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                ActiveDirectory = New Global.System.Nullable(Of Boolean)()
            Else
                ActiveDirectory = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(3).Value,Boolean))
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                ApplicationRoles = New Global.System.Nullable(Of Boolean)()
            Else
                ApplicationRoles = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(4).Value,Boolean))
            End If
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                Assemblies = New Global.System.Nullable(Of Boolean)()
            Else
                Assemblies = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(5).Value,Boolean))
            End If
            If ((command.Parameters(6).Value Is Nothing)  _
                        OrElse (command.Parameters(6).Value.GetType Is GetType(Global.System.DBNull))) Then
                AsymmetricKeys = New Global.System.Nullable(Of Boolean)()
            Else
                AsymmetricKeys = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(6).Value,Boolean))
            End If
            If ((command.Parameters(7).Value Is Nothing)  _
                        OrElse (command.Parameters(7).Value.GetType Is GetType(Global.System.DBNull))) Then
                Certificates = New Global.System.Nullable(Of Boolean)()
            Else
                Certificates = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(7).Value,Boolean))
            End If
            If ((command.Parameters(8).Value Is Nothing)  _
                        OrElse (command.Parameters(8).Value.GetType Is GetType(Global.System.DBNull))) Then
                DatabaseAuditSpecfications = New Global.System.Nullable(Of Boolean)()
            Else
                DatabaseAuditSpecfications = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(8).Value,Boolean))
            End If
            If ((command.Parameters(9).Value Is Nothing)  _
                        OrElse (command.Parameters(9).Value.GetType Is GetType(Global.System.DBNull))) Then
                DatabaseOptions = New Global.System.Nullable(Of Boolean)()
            Else
                DatabaseOptions = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(9).Value,Boolean))
            End If
            If ((command.Parameters(10).Value Is Nothing)  _
                        OrElse (command.Parameters(10).Value.GetType Is GetType(Global.System.DBNull))) Then
                Defaults = New Global.System.Nullable(Of Boolean)()
            Else
                Defaults = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(10).Value,Boolean))
            End If
            If ((command.Parameters(11).Value Is Nothing)  _
                        OrElse (command.Parameters(11).Value.GetType Is GetType(Global.System.DBNull))) Then
                FullTextCatalogs = New Global.System.Nullable(Of Boolean)()
            Else
                FullTextCatalogs = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(11).Value,Boolean))
            End If
            If ((command.Parameters(12).Value Is Nothing)  _
                        OrElse (command.Parameters(12).Value.GetType Is GetType(Global.System.DBNull))) Then
                FullTextStopLists = New Global.System.Nullable(Of Boolean)()
            Else
                FullTextStopLists = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(12).Value,Boolean))
            End If
            If ((command.Parameters(13).Value Is Nothing)  _
                        OrElse (command.Parameters(13).Value.GetType Is GetType(Global.System.DBNull))) Then
                PartitionFunctions = New Global.System.Nullable(Of Boolean)()
            Else
                PartitionFunctions = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(13).Value,Boolean))
            End If
            If ((command.Parameters(14).Value Is Nothing)  _
                        OrElse (command.Parameters(14).Value.GetType Is GetType(Global.System.DBNull))) Then
                PartitionSchemes = New Global.System.Nullable(Of Boolean)()
            Else
                PartitionSchemes = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(14).Value,Boolean))
            End If
            If ((command.Parameters(15).Value Is Nothing)  _
                        OrElse (command.Parameters(15).Value.GetType Is GetType(Global.System.DBNull))) Then
                PlanGuides = New Global.System.Nullable(Of Boolean)()
            Else
                PlanGuides = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(15).Value,Boolean))
            End If
            If ((command.Parameters(16).Value Is Nothing)  _
                        OrElse (command.Parameters(16).Value.GetType Is GetType(Global.System.DBNull))) Then
                Roles = New Global.System.Nullable(Of Boolean)()
            Else
                Roles = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(16).Value,Boolean))
            End If
            If ((command.Parameters(17).Value Is Nothing)  _
                        OrElse (command.Parameters(17).Value.GetType Is GetType(Global.System.DBNull))) Then
                Rules = New Global.System.Nullable(Of Boolean)()
            Else
                Rules = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(17).Value,Boolean))
            End If
            If ((command.Parameters(18).Value Is Nothing)  _
                        OrElse (command.Parameters(18).Value.GetType Is GetType(Global.System.DBNull))) Then
                Schemas = New Global.System.Nullable(Of Boolean)()
            Else
                Schemas = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(18).Value,Boolean))
            End If
            If ((command.Parameters(19).Value Is Nothing)  _
                        OrElse (command.Parameters(19).Value.GetType Is GetType(Global.System.DBNull))) Then
                ServiceBroker = New Global.System.Nullable(Of Boolean)()
            Else
                ServiceBroker = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(19).Value,Boolean))
            End If
            If ((command.Parameters(20).Value Is Nothing)  _
                        OrElse (command.Parameters(20).Value.GetType Is GetType(Global.System.DBNull))) Then
                StoredProcedures = New Global.System.Nullable(Of Boolean)()
            Else
                StoredProcedures = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(20).Value,Boolean))
            End If
            If ((command.Parameters(21).Value Is Nothing)  _
                        OrElse (command.Parameters(21).Value.GetType Is GetType(Global.System.DBNull))) Then
                SymmetricKeys = New Global.System.Nullable(Of Boolean)()
            Else
                SymmetricKeys = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(21).Value,Boolean))
            End If
            If ((command.Parameters(22).Value Is Nothing)  _
                        OrElse (command.Parameters(22).Value.GetType Is GetType(Global.System.DBNull))) Then
                Synonyms = New Global.System.Nullable(Of Boolean)()
            Else
                Synonyms = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(22).Value,Boolean))
            End If
            If ((command.Parameters(23).Value Is Nothing)  _
                        OrElse (command.Parameters(23).Value.GetType Is GetType(Global.System.DBNull))) Then
                Tables = New Global.System.Nullable(Of Boolean)()
            Else
                Tables = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(23).Value,Boolean))
            End If
            If ((command.Parameters(24).Value Is Nothing)  _
                        OrElse (command.Parameters(24).Value.GetType Is GetType(Global.System.DBNull))) Then
                Triggers = New Global.System.Nullable(Of Boolean)()
            Else
                Triggers = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(24).Value,Boolean))
            End If
            If ((command.Parameters(25).Value Is Nothing)  _
                        OrElse (command.Parameters(25).Value.GetType Is GetType(Global.System.DBNull))) Then
                UserDefinedAggregates = New Global.System.Nullable(Of Boolean)()
            Else
                UserDefinedAggregates = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(25).Value,Boolean))
            End If
            If ((command.Parameters(26).Value Is Nothing)  _
                        OrElse (command.Parameters(26).Value.GetType Is GetType(Global.System.DBNull))) Then
                UserDefinedDataTypes = New Global.System.Nullable(Of Boolean)()
            Else
                UserDefinedDataTypes = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(26).Value,Boolean))
            End If
            If ((command.Parameters(27).Value Is Nothing)  _
                        OrElse (command.Parameters(27).Value.GetType Is GetType(Global.System.DBNull))) Then
                UserDefinedFunctions = New Global.System.Nullable(Of Boolean)()
            Else
                UserDefinedFunctions = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(27).Value,Boolean))
            End If
            If ((command.Parameters(28).Value Is Nothing)  _
                        OrElse (command.Parameters(28).Value.GetType Is GetType(Global.System.DBNull))) Then
                UserDefinedTableTypes = New Global.System.Nullable(Of Boolean)()
            Else
                UserDefinedTableTypes = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(28).Value,Boolean))
            End If
            If ((command.Parameters(29).Value Is Nothing)  _
                        OrElse (command.Parameters(29).Value.GetType Is GetType(Global.System.DBNull))) Then
                UserDefinedTypes = New Global.System.Nullable(Of Boolean)()
            Else
                UserDefinedTypes = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(29).Value,Boolean))
            End If
            If ((command.Parameters(30).Value Is Nothing)  _
                        OrElse (command.Parameters(30).Value.GetType Is GetType(Global.System.DBNull))) Then
                Users = New Global.System.Nullable(Of Boolean)()
            Else
                Users = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(30).Value,Boolean))
            End If
            If ((command.Parameters(31).Value Is Nothing)  _
                        OrElse (command.Parameters(31).Value.GetType Is GetType(Global.System.DBNull))) Then
                Views = New Global.System.Nullable(Of Boolean)()
            Else
                Views = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(31).Value,Boolean))
            End If
            If ((command.Parameters(32).Value Is Nothing)  _
                        OrElse (command.Parameters(32).Value.GetType Is GetType(Global.System.DBNull))) Then
                XMLSchemaCollections = New Global.System.Nullable(Of Boolean)()
            Else
                XMLSchemaCollections = New Global.System.Nullable(Of Boolean)(CType(command.Parameters(32).Value,Boolean))
            End If
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function pDbInit(ByVal InstanceName As String, ByVal DBName As String, ByVal VersionMajor As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (InstanceName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(InstanceName,String)
            End If
            If (DBName Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(DBName,String)
            End If
            If (VersionMajor.HasValue = true) Then
                command.Parameters(3).Value = CType(VersionMajor.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class pChangeSelectDefinitionByVersionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "pChangeSelectDefinitionByVersion"
            tableMapping.ColumnMappings.Add("Node", "Node")
            tableMapping.ColumnMappings.Add("Item", "Item")
            tableMapping.ColumnMappings.Add("Type", "Type")
            tableMapping.ColumnMappings.Add("Version", "Version")
            tableMapping.ColumnMappings.Add("Action", "Action")
            tableMapping.ColumnMappings.Add("EventData", "EventData")
            tableMapping.ColumnMappings.Add("Definition", "Definition")
            tableMapping.ColumnMappings.Add("DefinitionDt", "DefinitionDt")
            tableMapping.ColumnMappings.Add("RecCreatedDt", "RecCreatedDt")
            tableMapping.ColumnMappings.Add("MinVersion", "MinVersion")
            tableMapping.ColumnMappings.Add("MaxVersion", "MaxVersion")
            tableMapping.ColumnMappings.Add("Id", "Id")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pChangeSelectDefinitionByVersion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Node", Global.System.Data.SqlDbType.NVarChar, 786, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Version", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.pChangeSelectDefinitionByVersionDataTable, ByVal Node As String, ByVal Version As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Node Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Node,String)
            End If
            If (Version.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Version.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Node As String, ByVal Version As Global.System.Nullable(Of Integer)) As dsSQLConfiguration.pChangeSelectDefinitionByVersionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Node Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Node,String)
            End If
            If (Version.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Version.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsSQLConfiguration.pChangeSelectDefinitionByVersionDataTable = New dsSQLConfiguration.pChangeSelectDefinitionByVersionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class pChangesForArchiveTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "pChangesForArchive"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Node", "Node")
            tableMapping.ColumnMappings.Add("Database", "Database")
            tableMapping.ColumnMappings.Add("Collection", "Collection")
            tableMapping.ColumnMappings.Add("ChangeItem", "ChangeItem")
            tableMapping.ColumnMappings.Add("Version", "Version")
            tableMapping.ColumnMappings.Add("Action", "Action")
            tableMapping.ColumnMappings.Add("RecCreatedDt", "RecCreatedDt")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClue1_3_5_1ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pChangesForArchive"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArchiveLogId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RootNode", Global.System.Data.SqlDbType.NVarChar, 786, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.pChangesForArchiveDataTable, ByVal ArchiveLogId As Global.System.Nullable(Of Integer), ByVal RootNode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ArchiveLogId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ArchiveLogId.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RootNode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(RootNode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ArchiveLogId As Global.System.Nullable(Of Integer), ByVal RootNode As String) As dsSQLConfiguration.pChangesForArchiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ArchiveLogId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ArchiveLogId.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RootNode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(RootNode,String)
            End If
            Dim dataTable As dsSQLConfiguration.pChangesForArchiveDataTable = New dsSQLConfiguration.pChangesForArchiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class pChangesForDateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "pChangesForDate"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Node", "Node")
            tableMapping.ColumnMappings.Add("Database", "Database")
            tableMapping.ColumnMappings.Add("Collection", "Collection")
            tableMapping.ColumnMappings.Add("ChangeItem", "ChangeItem")
            tableMapping.ColumnMappings.Add("Version", "Version")
            tableMapping.ColumnMappings.Add("Action", "Action")
            tableMapping.ColumnMappings.Add("RecCreatedDt", "RecCreatedDt")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pChangesForDate"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChangeDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SQLInstance", Global.System.Data.SqlDbType.NVarChar, 786, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NodeType", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Action", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.pChangesForDateDataTable, ByVal ChangeDate As Global.System.Nullable(Of Date), ByVal SQLInstance As String, ByVal NodeType As String, ByVal Action As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ChangeDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ChangeDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SQLInstance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SQLInstance,String)
            End If
            If (NodeType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NodeType,String)
            End If
            If (Action Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Action,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ChangeDate As Global.System.Nullable(Of Date), ByVal SQLInstance As String, ByVal NodeType As String, ByVal Action As String) As dsSQLConfiguration.pChangesForDateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ChangeDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ChangeDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SQLInstance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SQLInstance,String)
            End If
            If (NodeType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NodeType,String)
            End If
            If (Action Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Action,String)
            End If
            Dim dataTable As dsSQLConfiguration.pChangesForDateDataTable = New dsSQLConfiguration.pChangesForDateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tArchiveLogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tArchiveLog"
            tableMapping.ColumnMappings.Add("ScheduleId", "ScheduleId")
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName")
            tableMapping.ColumnMappings.Add("NbrDDLEventsProcessed", "NbrDDLEventsProcessed")
            tableMapping.ColumnMappings.Add("NbrItemsProcessed", "NbrItemsProcessed")
            tableMapping.ColumnMappings.Add("NbrItemsAdded", "NbrItemsAdded")
            tableMapping.ColumnMappings.Add("NbrItemsChanged", "NbrItemsChanged")
            tableMapping.ColumnMappings.Add("NbrItemsDeleted", "NbrItemsDeleted")
            tableMapping.ColumnMappings.Add("ScheduledStartDt", "ScheduledStartDt")
            tableMapping.ColumnMappings.Add("ActualStartDt", "ActualStartDt")
            tableMapping.ColumnMappings.Add("ActualEndDt", "ActualEndDt")
            tableMapping.ColumnMappings.Add("RecCreatedUser", "RecCreatedUser")
            tableMapping.ColumnMappings.Add("ArchiveError", "ArchiveError")
            tableMapping.ColumnMappings.Add("ArchiveLogId", "ArchiveLogId")
            tableMapping.ColumnMappings.Add("Interval", "Interval")
            tableMapping.ColumnMappings.Add("IntervalType", "IntervalType")
            tableMapping.ColumnMappings.Add("IntervalBaseDt", "IntervalBaseDt")
            tableMapping.ColumnMappings.Add("UseEventNotifications", "UseEventNotifications")
            tableMapping.ColumnMappings.Add("IsActive", "IsActive")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.cCommon.My.MySettings.Default.SQLClueConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SQLCfg.pArchiveLogSelectScheduleHistory"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SQLInstance", Global.System.Data.SqlDbType.NVarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SQLCfg.pArchiveLogSelectScheduleHistoryByScheduleId"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScheduleId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SQLCfg.pArchiveLogSelectSQLInstanceHistoryByScheduleId"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScheduleId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsSQLConfiguration.tArchiveLogDataTable, ByVal SQLInstance As String, ByVal BeginDt As Global.System.Nullable(Of Date), ByVal EndDt As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SQLInstance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SQLInstance,String)
            End If
            If (BeginDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BeginDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EndDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SQLInstance As String, ByVal BeginDt As Global.System.Nullable(Of Date), ByVal EndDt As Global.System.Nullable(Of Date)) As dsSQLConfiguration.tArchiveLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SQLInstance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SQLInstance,String)
            End If
            If (BeginDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BeginDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EndDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsSQLConfiguration.tArchiveLogDataTable = New dsSQLConfiguration.tArchiveLogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByScheduleId(ByVal dataTable As dsSQLConfiguration.tArchiveLogDataTable, ByVal ScheduleId As Global.System.Nullable(Of Integer), ByVal BeginDt As Global.System.Nullable(Of Date), ByVal EndDt As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ScheduleId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ScheduleId.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BeginDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BeginDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EndDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByScheduleId(ByVal ScheduleId As Global.System.Nullable(Of Integer), ByVal BeginDt As Global.System.Nullable(Of Date), ByVal EndDt As Global.System.Nullable(Of Date)) As dsSQLConfiguration.tArchiveLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ScheduleId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ScheduleId.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BeginDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BeginDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EndDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsSQLConfiguration.tArchiveLogDataTable = New dsSQLConfiguration.tArchiveLogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySQLInstanceByScheduleId(ByVal dataTable As dsSQLConfiguration.tArchiveLogDataTable, ByVal ScheduleId As Global.System.Nullable(Of Integer), ByVal BeginDt As Global.System.Nullable(Of Date), ByVal EndDt As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (ScheduleId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ScheduleId.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BeginDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BeginDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EndDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySQLInstanceByScheduleId(ByVal ScheduleId As Global.System.Nullable(Of Integer), ByVal BeginDt As Global.System.Nullable(Of Date), ByVal EndDt As Global.System.Nullable(Of Date)) As dsSQLConfiguration.tArchiveLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (ScheduleId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ScheduleId.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BeginDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BeginDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EndDt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsSQLConfiguration.tArchiveLogDataTable = New dsSQLConfiguration.tArchiveLogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
