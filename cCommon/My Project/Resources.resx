<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveDirectory" xml:space="preserve">
    <value>ActiveDirectory</value>
  </data>
  <data name="Alerts" xml:space="preserve">
    <value>Alerts</value>
  </data>
  <data name="AlertSystem" xml:space="preserve">
    <value>AlertSystem</value>
  </data>
  <data name="AllowedCertificateScriptingException" xml:space="preserve">
    <value>Invalid column name 'pvt_key_last_backup_date'.</value>
  </data>
  <data name="ApplicationRoles" xml:space="preserve">
    <value>ApplicationRoles</value>
  </data>
  <data name="Assemblies" xml:space="preserve">
    <value>Assemblies</value>
  </data>
  <data name="AsymmetricKeys" xml:space="preserve">
    <value>AsymmetricKeys</value>
  </data>
  <data name="Attributes" xml:space="preserve">
    <value>Attributes</value>
  </data>
  <data name="Audits" xml:space="preserve">
    <value>Audits</value>
  </data>
  <data name="BackupDevices" xml:space="preserve">
    <value>BackupDevices</value>
  </data>
  <data name="Certificates" xml:space="preserve">
    <value>Certificates</value>
  </data>
  <data name="CommentBegin" xml:space="preserve">
    <value>/**************** Begin {0} *****************</value>
  </data>
  <data name="CommentEnd" xml:space="preserve">
    <value>****************** End {0} ******************/</value>
  </data>
  <data name="CompareLine1Blank" xml:space="preserve">
    <value>Line1Blank</value>
  </data>
  <data name="CompareLine2Blank" xml:space="preserve">
    <value>Line2Blank</value>
  </data>
  <data name="CompareLineDifferent" xml:space="preserve">
    <value>LineDifferent</value>
  </data>
  <data name="CompareLineMatch" xml:space="preserve">
    <value>LineMatch</value>
  </data>
  <data name="CompareName1Blank" xml:space="preserve">
    <value>Name1Blank</value>
  </data>
  <data name="CompareName2Blank" xml:space="preserve">
    <value>Name2Blank</value>
  </data>
  <data name="CompareNamesDifferent" xml:space="preserve">
    <value>NamesDifferent</value>
  </data>
  <data name="CompareNamesMatch" xml:space="preserve">
    <value>NamesMatch</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Credentials" xml:space="preserve">
    <value>Credentials</value>
  </data>
  <data name="CryptographicProviders" xml:space="preserve">
    <value>CryptographicProviders</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="DatabaseAuditSpecifications" xml:space="preserve">
    <value>DatabaseAuditSpecifications</value>
  </data>
  <data name="DatabaseEventNotifciationsCatalog" xml:space="preserve">
    <value>event_notifications</value>
  </data>
  <data name="DatabaseMasterKey" xml:space="preserve">
    <value>DatabaseMasterKey</value>
  </data>
  <data name="DatabaseOptions" xml:space="preserve">
    <value>DatabaseOptions</value>
  </data>
  <data name="Databases" xml:space="preserve">
    <value>Databases</value>
  </data>
  <data name="DBOffline" xml:space="preserve">
    <value>Unable to access database {0} on SQL Server {1} for scripting.
It may be offline.</value>
  </data>
  <data name="Defaults" xml:space="preserve">
    <value>Defaults</value>
  </data>
  <data name="Endpoints" xml:space="preserve">
    <value>Endpoints</value>
  </data>
  <data name="EventNotifications" xml:space="preserve">
    <value>EventNotifications</value>
  </data>
  <data name="FullTextCatalogs" xml:space="preserve">
    <value>FullTextCatalogs</value>
  </data>
  <data name="FullTextService" xml:space="preserve">
    <value>FullTextService</value>
  </data>
  <data name="FullTextStopLists" xml:space="preserve">
    <value>FullTextStopLists</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="ItemScriptingCompletionMessage" xml:space="preserve">
    <value> Item [{0}] scripting complete</value>
  </data>
  <data name="ItemScriptingStartMessage" xml:space="preserve">
    <value>Scripting item [{0}]</value>
  </data>
  <data name="Jobs" xml:space="preserve">
    <value>Jobs</value>
  </data>
  <data name="JobServer" xml:space="preserve">
    <value>JobServer</value>
  </data>
  <data name="LinkedServers" xml:space="preserve">
    <value>LinkedServers</value>
  </data>
  <data name="Logins" xml:space="preserve">
    <value>Logins</value>
  </data>
  <data name="Mail" xml:space="preserve">
    <value>Mail</value>
  </data>
  <data name="MessageTypes" xml:space="preserve">
    <value>MessageTypes</value>
  </data>
  <data name="NodePathDelimiter" xml:space="preserve">
    <value>|</value>
  </data>
  <data name="NoExpressSupport" xml:space="preserve">
    <value>Item not supported in Express Edition SQL Server</value>
  </data>
  <data name="OleDbProviders" xml:space="preserve">
    <value>OleDbProviders</value>
  </data>
  <data name="Operators" xml:space="preserve">
    <value>Operators</value>
  </data>
  <data name="OriginFile" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="OriginRepository" xml:space="preserve">
    <value>Repository</value>
  </data>
  <data name="OriginSQLInstance" xml:space="preserve">
    <value>SQLInstance</value>
  </data>
  <data name="PartitionFunctions" xml:space="preserve">
    <value>PartitionFunctions</value>
  </data>
  <data name="PartitionSchemes" xml:space="preserve">
    <value>PartitionSchemes</value>
  </data>
  <data name="PlanGuides" xml:space="preserve">
    <value>PlanGuides</value>
  </data>
  <data name="Policies" xml:space="preserve">
    <value>Policies</value>
  </data>
  <data name="Priorities" xml:space="preserve">
    <value>Priorities</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="ProxyAccount" xml:space="preserve">
    <value>ProxyAccount</value>
  </data>
  <data name="ProxyAccounts" xml:space="preserve">
    <value>ProxyAccounts</value>
  </data>
  <data name="Queues" xml:space="preserve">
    <value>Queues</value>
  </data>
  <data name="RemoteServiceBindings" xml:space="preserve">
    <value>RemoteServiceBindings</value>
  </data>
  <data name="ResourceGovernor" xml:space="preserve">
    <value>ResourceGovernor</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Routes" xml:space="preserve">
    <value>Routes</value>
  </data>
  <data name="Rules" xml:space="preserve">
    <value>Rules</value>
  </data>
  <data name="SchemaINFORMATION_SCHEMA" xml:space="preserve">
    <value>INFORMATION_SCHEMA</value>
  </data>
  <data name="Schemas" xml:space="preserve">
    <value>Schemas</value>
  </data>
  <data name="SchemaSys" xml:space="preserve">
    <value>sys</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="ServerAuditSpecifications" xml:space="preserve">
    <value>ServerAuditSpecifications</value>
  </data>
  <data name="ServerEventNotificationsCatalog" xml:space="preserve">
    <value>server_event_notifications</value>
  </data>
  <data name="ServiceBroker" xml:space="preserve">
    <value>ServiceBroker</value>
  </data>
  <data name="ServiceContracts" xml:space="preserve">
    <value>ServiceContracts</value>
  </data>
  <data name="ServiceMasterKey" xml:space="preserve">
    <value>ServiceMasterKey</value>
  </data>
  <data name="Services" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="sEventNotificationsQueryTemplate" xml:space="preserve">
    <value>SELECT n.[name] AS [Name]  
, CASE n.[parent_class_desc]  
   WHEN 'DATABASE' THEN 'DATABASE'  
   WHEN 'SERVER' THEN 'SERVER'  
   ELSE 'QUEUE ' + OBJECT_NAME(n.[parent_id]) END AS [Scope]  
, CASE WHEN n.[creator_sid] IS NOT NULL 
       THEN 'True' 
       ELSE 'False' END AS [FAN_IN]  
, n.[service_name] COLLATE DATABASE_DEFAULT AS [Service]  
, CAST(n.[broker_instance] AS NVARCHAR(50)) AS [ServiceBrokerInstance]  
, ISNULL(d.[name],'not local database') AS [DatabaseName]  
, SUSER_NAME(n.principal_id) AS [Principal]  
, n.modify_date AS [LastChangeDate]  
, n.create_date AS [CreateDate]  
, CASE WHEN n.[parent_class_desc] = 'SERVER'  
       THEN SUSER_NAME(sp.principal_id)  
       ELSE SUSER_NAME(dp.principal_id)  
       END AS [CreatedByPrincipal]  
FROM [sys].[{0}] n  
LEFT JOIN [master].[sys].[databases] d  
ON n.[broker_instance] = d.[service_broker_guid]  
LEFT JOIN [sys].[database_principals] dp  
ON n.[creator_sid] = dp.[sid]  
LEFT JOIN [sys].[server_principals] sp  
ON n.[creator_sid] = sp.[sid]</value>
  </data>
  <data name="SMOBadState" xml:space="preserve">
    <value>SMO is in a bad state. This may be caused by an SMO
issue related to Transparent Data Encryption (TDE)
if TDE is enabled on the database. The problem has
been reported and confirmed at connect.microsoft.com
and is to be fixed in a future SQL Server release.
Workaround: Restart SQLClue. Try using an archived
script for the database compare or compare all
databases on the SQL Server 2008 instance instead
of comparing only one database.</value>
  </data>
  <data name="SMOID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="SMOIsAccessible" xml:space="preserve">
    <value>IsAccessible</value>
  </data>
  <data name="SMOIsFixedRole" xml:space="preserve">
    <value>IsFixedRole</value>
  </data>
  <data name="SMOIsSystemObject" xml:space="preserve">
    <value>IsSystemObject</value>
  </data>
  <data name="SMOLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="SMOName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SMOSchema" xml:space="preserve">
    <value>Schema</value>
  </data>
  <data name="SQLCfgArchiveTypeAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="SQLCfgArchiveTypeChange" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="SQLCfgArchiveTypeDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="StartupProcedures" xml:space="preserve">
    <value>StartupProcedures</value>
  </data>
  <data name="StoredProcedures" xml:space="preserve">
    <value>StoredProcedures</value>
  </data>
  <data name="SymmetricKeys" xml:space="preserve">
    <value>SymmetricKeys</value>
  </data>
  <data name="Synonyms" xml:space="preserve">
    <value>Synonyms</value>
  </data>
  <data name="Tables" xml:space="preserve">
    <value>Tables</value>
  </data>
  <data name="TargetServers" xml:space="preserve">
    <value>TargetServers</value>
  </data>
  <data name="Triggers" xml:space="preserve">
    <value>Triggers</value>
  </data>
  <data name="UserDefinedAggregates" xml:space="preserve">
    <value>UserDefinedAggregates</value>
  </data>
  <data name="UserDefinedDataTypes" xml:space="preserve">
    <value>UserDefinedDataTypes</value>
  </data>
  <data name="UserDefinedFunctions" xml:space="preserve">
    <value>UserDefinedFunctions</value>
  </data>
  <data name="UserDefinedMessages" xml:space="preserve">
    <value>UserDefinedMessages</value>
  </data>
  <data name="UserDefinedTableTypes" xml:space="preserve">
    <value>UserDefinedTableTypes</value>
  </data>
  <data name="UserDefinedTypes" xml:space="preserve">
    <value>UserDefinedTypes</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Views" xml:space="preserve">
    <value>Views</value>
  </data>
  <data name="XMLSchemaCollections" xml:space="preserve">
    <value>XMLSchemaCollections</value>
  </data>
  <data name="ArchiveAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ArchiveAddDatabase" xml:space="preserve">
    <value>Adding database [{0}] to Archive</value>
  </data>
  <data name="ArchiveChange" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="ArchiveConnected" xml:space="preserve">
    <value>Connected to Archive target [{0}]</value>
  </data>
  <data name="ArchiveDDLEventsException" xml:space="preserve">
    <value>Error processing DDL events from remote server [{0}].</value>
  </data>
  <data name="ArchiveDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ArchiveException" xml:space="preserve">
    <value>Error in method [{0}] while archiving [{1}].[{2}].</value>
  </data>
  <data name="ArchiveHandShakeFailed" xml:space="preserve">
    <value>Target SQL Instance {0} did not respond to handshake. Archive will be rescheduled.</value>
  </data>
  <data name="ArchiveLogResult" xml:space="preserve">
    <value>Writing archive log record</value>
  </data>
  <data name="ArchiveMirrorQuery" xml:space="preserve">
    <value>select IsNull(mirroring_role_desc,'none') from sys.database_mirroring where database_id = '{0}'</value>
  </data>
  <data name="ArchiveNoRow" xml:space="preserve">
    <value>Unable to load a '{0}' row for ScheduleId [{1}] for SQLInstance [{2}]</value>
  </data>
  <data name="ArchiveOfDatabaseFailed" xml:space="preserve">
    <value>Database level archive ended abnormally SQLInstance: [{0}]; db: [{1}]</value>
  </data>
  <data name="ArchiveOfServerFailed" xml:space="preserve">
    <value>Server level archive ended abnormally SQLInstance: [{0}]</value>
  </data>
  <data name="ArchiveReschedule" xml:space="preserve">
    <value>Scheduling next run date</value>
  </data>
  <data name="ArchiveSettingsLoadFailed" xml:space="preserve">
    <value>Error loading Settings [{0}].</value>
  </data>
  <data name="ArchiveStatusLiteral" xml:space="preserve">
    <value>SQLInstance [{0}] Database [{1}] not archive because database status is [{2}]</value>
  </data>
  <data name="ArchiveUnexpectedResult" xml:space="preserve">
    <value>Unexpected Archive e.Result [{0}]</value>
  </data>
  <data name="MirrorRoleDescription" xml:space="preserve">
    <value>MIRROR</value>
  </data>
</root>